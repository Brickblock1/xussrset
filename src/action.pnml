 /// action

// --- ограничение скорости по окончанию установленного срока службы ---
// ограничиваем скорость через 10 лет работы 160 --> 130
switch (FEAT_TRAINS, SELF, speed_after10_160to130,
  age_in_days >= (10*365+3))
{
  1: return 130;
  return 160;
}
// ограничиваем скорость через 15 лет работы 160 --> 140
switch (FEAT_TRAINS, SELF, speed_after10_160to140,
  age_in_days >= (15*365+4))
{
  1: return 140;
  return 160;
}
// ограничиваем скорость через 15 лет работы 95 --> 90
switch (FEAT_TRAINS, SELF, speed_after10_95to90,
  age_in_days >= (15*365+4))
{
  1: return 90;
  return 95;
}
// ограничиваем скорость через 20 лет работы 160 --> 140
switch (FEAT_TRAINS, SELF, speed_after20_160to140,
  age_in_days >= (20*365+5))
{
  1: return 140;
  return 160;
}
// ограничиваем скорость через 20 лет работы 160 --> 130
switch (FEAT_TRAINS, SELF, speed_after20_160to130,
  age_in_days >= (20*365+5))
{
  1: return 130;
  return 160;
}
// ограничиваем скорость через 20 лет работы 160 --> 120
switch (FEAT_TRAINS, SELF, speed_after20_160to120,
  age_in_days >= (20*365+5))
{
  1: return 120;
  return 160;
}
// ограничиваем скорость через 20 лет работы 140 --> 120
switch (FEAT_TRAINS, SELF, speed_after20_140to120,
  age_in_days >= (20*365+5))
{
  1: return 120;
  return 140;
}
// ограничиваем скорость через 20 лет работы 120 --> 110
switch (FEAT_TRAINS, SELF, speed_after20_120to110,
  age_in_days >= (20*365+5))
{
  1: return 110;
  return 120;
}
// ограничиваем скорость через 20 лет работы 120 --> 100
switch (FEAT_TRAINS, SELF, speed_after20_120to100,
  age_in_days >= (20*365+5))
{
  1: return 100;
  return 120;
}
// ограничиваем скорость через 25 лет работы 160 --> 140
switch (FEAT_TRAINS, SELF, speed_after25_160to140,
  age_in_days >= (25*365+6))
{
  1: return 140;
  return 160;
}
// ограничиваем скорость через 25 лет работы 100 --> 90
switch (FEAT_TRAINS, SELF, speed_after25_100to90,
  age_in_days >= (25*365+6))
{
  1: return 90;
  return 100;
}
// ограничиваем скорость через 30 лет работы 160 --> 140
switch (FEAT_TRAINS, SELF, speed_after30_160to140,
  age_in_days >= (30*365+8))
{
  1: return 140;
  return 160;
}
// ограничиваем скорость через 30 лет работы 160 --> 130
switch (FEAT_TRAINS, SELF, speed_after30_160to130,
  age_in_days >= (30*365+8))
{
  1: return 130;
  return 160;
}
// ограничиваем скорость через 30 лет работы 130 --> 110
switch (FEAT_TRAINS, SELF, speed_after30_130to110,
  age_in_days >= (30*365+8))
{
  1: return 110;
  return 130;
}
// ограничиваем скорость через 30 лет работы 130 --> 100
switch (FEAT_TRAINS, SELF, speed_after30_130to100,
  age_in_days >= (30*365+8))
{
  1: return 100;
  return 130;
}
// ограничиваем скорость через 30 лет работы 110 --> 100
switch (FEAT_TRAINS, SELF, speed_after30_110to100,
  age_in_days >= (30*365+8))
{
  1: return 100;
  return 110;
}
// ограничиваем скорость через 30 лет работы 100 --> 90
switch (FEAT_TRAINS, SELF, speed_after30_100to90,
  age_in_days >= (30*365+8))
{
  1: return 90;
  return 100;
}
// ограничиваем скорость через 40 лет работы 160 --> 140
switch (FEAT_TRAINS, SELF, speed_after40_160to140,
  age_in_days >= (40*365+10))
{
  1: return 140;
  return 160;
}

// невидимый вагон размером 1
switch (FEAT_TRAINS, SELF, articulated_part_dummy1,
  extra_callback_info1)
{
  1: return dummy1;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 2
switch (FEAT_TRAINS, SELF, articulated_part_dummy2,
  extra_callback_info1)
{
  1: return dummy2;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 3
switch (FEAT_TRAINS, SELF, articulated_part_dummy3,
  extra_callback_info1)
{
  1: return dummy3;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 4
switch (FEAT_TRAINS, SELF, articulated_part_dummy4,
  extra_callback_info1)
{
  1: return dummy4;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 5
switch (FEAT_TRAINS, SELF, articulated_part_dummy5,
  extra_callback_info1)
{
  1: return dummy5;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 6
switch (FEAT_TRAINS, SELF, articulated_part_dummy6,
  extra_callback_info1)
{
  1: return dummy6;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 7
switch (FEAT_TRAINS, SELF, articulated_part_dummy7,
  extra_callback_info1)
{
  1: return dummy7;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// невидимый вагон размером 8
switch (FEAT_TRAINS, SELF, articulated_part_dummy8,
  extra_callback_info1)
{
  1: return dummy8;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// тендер
switch (FEAT_TRAINS, SELF, articulated_part_tender,
  extra_callback_info1)
{
  1: return unitb;
  return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// стандартная заводская ливрея
switch (FEAT_TRAINS, SELF, cargo_subtype_text_default,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY);
  return CB_RESULT_NO_TEXT;
}
