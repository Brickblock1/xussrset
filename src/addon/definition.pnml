 /// definition
disable_dmu          = 0;
disable_steamer      = 0;
disable_diesel       = 0;
disable_dcemu        = 0;
disable_dcelectric   = 0;
disable_acemu        = 0;
disable_acelectric   = 0;
disable_acdcelectric = 0;
disable_acdcemu      = 0;

#define LV_SNCF_ATLANTIQUE                    112
#define LV_SNCF_CARMILLON                     113
#define LV_THALYS                             114
#define LV_OUIGO                              115

// ice3 support
#define any_ice3()                  \
 ((vehicle_type_id == velaro_d) ||  \
  (vehicle_type_id == ice3m) ||     \
  (vehicle_type_id == ice3))        \

#define no_ice3_inR4()             \
 (!((LOAD_TEMP(4) == velaro_d) ||  \
    (LOAD_TEMP(4) == ice3m)    ||  \
    (LOAD_TEMP(4) == ice3)))       \

#define ice3s_count()       \
 (count_veh_id(velaro_d) +  \
  count_veh_id(ice3m) +     \
  count_veh_id(ice3))       \

#define engine_power_MU_ice3(name, power)               \
switch (FEAT_TRAINS, PARENT, name##_power, any_ice3())  \
{ 1: return get_power_in_cb(power);                     \
     return 0; }                                        \

#define engine_capacity_MU_ice3(name, capacity)                  \
switch (FEAT_TRAINS, PARENT, name##_cargo_capacity, any_ice3())  \
{ 1: return capacity;                                            \
     return 0; }                                                 \

#define RC_head_check_ice3_new(name)                             \
switch (FEAT_TRAINS, PARENT, name##_check2_running_cost_factor,  \
[  STORE_TEMP(0, 0),                                             \
   STORE_TEMP(0, 1),                                             \
   STORE_TEMP(0, 3),                                             \
   STORE_TEMP(LOAD_TEMP(7), 8)])                                 \
{ all_running_cost_factor; }                                     \
switch (FEAT_TRAINS, PARENT, name##_check_running_cost_factor,   \
  any_ice3())                                                    \
{ 1: all_running_cost_factor;                                    \
     name##_check2_running_cost_factor; }                        \

// TGVs support
#define any_tgv()                   \
 ((vehicle_type_id == tgv_pse) ||   \
  (vehicle_type_id == tgv_a) ||     \
  (vehicle_type_id == tgv_r) ||     \
  (vehicle_type_id == tgv_pos) ||   \
  (vehicle_type_id == tgv_pbka) ||  \
  (vehicle_type_id == tgv_rd) ||    \
  (vehicle_type_id == tgv_duplex))  \

#define no_tgv_inR4()               \
 (!((LOAD_TEMP(4) == tgv_pse) ||    \
    (LOAD_TEMP(4) == tgv_a) ||      \
    (LOAD_TEMP(4) == tgv_r) ||      \
    (LOAD_TEMP(4) == tgv_pos) ||    \
    (LOAD_TEMP(4) == tgv_pbka) ||   \
    (LOAD_TEMP(4) == tgv_rd) ||     \
    (LOAD_TEMP(4) == tgv_duplex)))  \

#define tgvs_count()         \
 (count_veh_id(tgv_pse) +    \
  count_veh_id(tgv_a) +      \
  count_veh_id(tgv_r) +      \
  count_veh_id(tgv_pos) +    \
  count_veh_id(tgv_pbka) +   \
  count_veh_id(tgv_rd) +     \
  count_veh_id(tgv_duplex))  \

#define engine_power_MU_tgv(name, power)               \
switch (FEAT_TRAINS, PARENT, name##_power, any_tgv())  \
{ 1: return get_power_in_cb(power);                    \
     return 0; }                                       \

#define engine_capacity_MU_tgv(name, capacity)                  \
switch (FEAT_TRAINS, PARENT, name##_cargo_capacity, any_tgv())  \
{ 1: return capacity;                                           \
     return 0; }                                                \

#define RC_head_check_tgv_new(name)                              \
switch (FEAT_TRAINS, PARENT, name##_check2_running_cost_factor,  \
[  STORE_TEMP(0, 0),                                             \
   STORE_TEMP(0, 1),                                             \
   STORE_TEMP(0, 3),                                             \
   STORE_TEMP(LOAD_TEMP(7), 8)])                                 \
{ all_running_cost_factor; }                                     \
switch (FEAT_TRAINS, PARENT, name##_check_running_cost_factor,   \
  any_tgv())                                                     \
{ 1: all_running_cost_factor;                                    \
     name##_check2_running_cost_factor; }                        \

// end
