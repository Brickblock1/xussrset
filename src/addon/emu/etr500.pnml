// etr500

#define IMAGEFILE  "src/addon/emu/etr500_01.png"
purchase_sprites(etr500, 0, 0)
MU_head_sprites(11, etr500_h, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/etr500_02.png"
MU_car_sprites(15, etr500_02, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/etr500_06.png"
MU_car_nd_sprites(15, etr500_06, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/etr500_07.png"
MU_car_sprites(15, etr500_07, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, etr500_h_sprites_left_check,
  position_in_consist == 0)
{
  1: etr500_h_sprites_left;
     etr500_h_notpowered_sprites_left;
}

random_switch (FEAT_TRAINS, SELF, etr500_h_sprites_start,
  bitmask(TRIGGER_VEHICLE_SERVICE))
{
  1: etr500_h_sprites_left_check;
  1: etr500_h_sprites_left_check;
}

switch (FEAT_TRAINS, SELF, etr500_h_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: etr500_h_sprites_right;
     etr500_h_notpowered_sprites_right;
}

switch (FEAT_TRAINS, SELF, etr500_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   ((LOAD_TEMP(4) != etr500) * 200) +
   (prev_vehicle_randombits() % 2) * 100 +
   position_in_articulated_veh])
{
   0: etr500_h_sprites_start;
   2: etr500_02_sprites_left;
   4: etr500_02_sprites_left;
   6: etr500_02_sprites_left;
   8: etr500_02_sprites_left;
  10: etr500_06_sprites_left;
  12: etr500_07_sprites_left;
  14: etr500_07_sprites_left;
  16: etr500_07_sprites_left;
  18: etr500_07_sprites_left;
  20: etr500_07_sprites_left;
  22: etr500_07_sprites_left;
  24: etr500_h_sprites_right_check;

 100: etr500_h_sprites_start;
 102: etr500_07_sprites_right;
 104: etr500_07_sprites_right;
 106: etr500_07_sprites_right;
 108: etr500_07_sprites_right;
 110: etr500_07_sprites_right;
 112: etr500_07_sprites_right;
 114: etr500_06_sprites_right;
 116: etr500_02_sprites_right;
 118: etr500_02_sprites_right;
 120: etr500_02_sprites_right;
 122: etr500_02_sprites_right;
 124: etr500_h_sprites_right_check;

 200: etr500_h_sprites_start;
 202: etr500_02_notpowered_sprites_left;
 204: etr500_02_notpowered_sprites_left;
 206: etr500_02_notpowered_sprites_left;
 208: etr500_02_notpowered_sprites_left;
 210: etr500_06_sprites_left;
 212: etr500_07_notpowered_sprites_left;
 214: etr500_07_notpowered_sprites_left;
 216: etr500_07_notpowered_sprites_left;
 218: etr500_07_notpowered_sprites_left;
 220: etr500_07_notpowered_sprites_left;
 222: etr500_07_notpowered_sprites_left;
 224: etr500_h_sprites_right_check;

 300: etr500_h_sprites_start;
 302: etr500_07_notpowered_sprites_right;
 304: etr500_07_notpowered_sprites_right;
 306: etr500_07_notpowered_sprites_right;
 308: etr500_07_notpowered_sprites_right;
 310: etr500_07_notpowered_sprites_right;
 312: etr500_07_notpowered_sprites_right;
 314: etr500_06_sprites_right;
 316: etr500_02_notpowered_sprites_right;
 318: etr500_02_notpowered_sprites_right;
 320: etr500_02_notpowered_sprites_right;
 322: etr500_02_notpowered_sprites_right;
 324: etr500_h_sprites_right_check;

      align_15_sprites;
}

long_vehicle_RND(etr500, etr500_h_sprites_start)

switch (FEAT_TRAINS, SELF, etr500_articulated_part,
  extra_callback_info1)
{
  1: return dummy3;
  2: return etr500_part2;
  3: return dummy7;
  4: return etr500_part3;
  5: return dummy7;
  6: return etr500_part3;
  7: return dummy7;
  8: return etr500_part3;
  9: return dummy7;
 10: return etr500_part3;
 11: return dummy7;
 12: return etr500_part3;
 13: return dummy7;
 14: return etr500_part3;
 15: return dummy7;
 16: return etr500_part3;
 17: return dummy7;
 18: return etr500_part3;
 19: return dummy7;
 20: return etr500_part3;
 21: return dummy7;
 22: return etr500_part3;
 23: return dummy7;
 24: return etr500_part3;
 25: return dummy3;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, etr500_create_effect_01,
  electric_create_effect(5))
{
  return 1;
}

switch (FEAT_TRAINS, SELF, etr500_create_effect_13,
  electric_create_effect(-2))
{
  return 1;
}

switch (FEAT_TRAINS, SELF, etr500_create_effect0,
  position_in_articulated_veh)
{
   0: etr500_create_effect_01;
  24: etr500_create_effect_13;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, etr500_create_effect,
  vehicle_type_id == etr500)
{
  1: etr500_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, etr500_can_attach_wagon,
  vehicle_type_id == etr500)
{
  1: return string(STR_CAN_ATTACH_NO_MORE);
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

RC_head_check_new(etr500, etr500)
switch (FEAT_TRAINS, SELF, etr500_running_cost_factor,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(on_any_ERA() ? 360 : 250, 6),                   // Скорость
   STORE_TEMP(598, 7),                                        // Тара
   STORE_TEMP(LOAD_TEMP(7) + 340 / 16 + (159+67+8) / 8, 8)])  // Максимальная масса
{ etr500_check_running_cost_factor; }                         // 1921+817

engine_capacity_MU(etr500, 340, etr500)
engine_power_MU(etr500, 11964, etr500)
engine_speed(etr500_AC, 360)
engine_speed(etr500_DC, 250)
engine_speed_change_AC_DC(etr500)

hint_MU_comment(etr500,
     calc_loading(max(340 / (10 * WAGON_DOOR), (159+67+8) / (10 * WAGON_DOOR))),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_ACDDC,
     STR_SECTIONS_MU_S1of13,
     2000, 2005,
     string(STR_PURCHASE_HINT_FACTORY_TREVI),
     string(STR_PURCHASE_HINT_SPEED_CHANGE_ON_DC, 250))

item (FEAT_TRAINS, etr500, 468) {
  property {
    name: string(STR_NAME_ETR500);
    vehicle_dates(2000, 2005, 30, 10, 8, 1500)
    vehicle_emu(acddc, 11964, 598, 400.0, 340, 10 * WAGON_DOOR)
  }
  graphics {
    default: etr500_sprites;
    purchase: etr500_purchase_sprites;
    cargo_age_period: return 174;
    speed: etr500_speed;
    running_cost_factor: etr500_running_cost_factor;
    articulated_part: etr500_articulated_part;
    can_attach_wagon: etr500_can_attach_wagon;
    power: etr500_power;
    cargo_capacity: etr500_cargo_capacity;
    cost_factor: return 1500;
    colour_mapping: any_cc_colour;
    create_effect: etr500_create_effect;
    purchase_speed: return 360;
    additional_text: etr500_additional_text;
  }
}

long_name_template(etr500, STR_LONGNAME_ETR500)

engine_capacity_MU(etr500_part2, 159+67+8, etr500)

item (FEAT_TRAINS, etr500_part2, 469) {
  property {
    vehicle_no_dates(2000, 2005, 30, 10, 8, 0)
    vehicle_emu_c(acddc, 0, 159+67+8, 10 * WAGON_DOOR)
    vehicle_allow_tourists()
    default_cargo_type: TOUR;
  }
  graphics {
    default: etr500_sprites;
    cargo_age_period: return 370;
    create_effect: etr500_create_effect;
    cargo_capacity: etr500_part2_cargo_capacity;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    colour_mapping: any_cc_colour;
  }
}

item (FEAT_TRAINS, etr500_part3, 470) {
  property {
    vehicle_no_dates(2000, 2005, 30, 10, 8, 0)
    vehicle_emu_empty(acddc)
  }
  graphics {
    default: etr500_sprites;
    create_effect: etr500_create_effect;
    colour_mapping: any_cc_colour;
  }
}
