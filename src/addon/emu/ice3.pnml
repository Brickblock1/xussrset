// ice3

#define IMAGEFILE  "src/addon/emu/ice3_01.png"
purchase_sprites(ice3, 0, 0)
MU_head_sprites(15, ice3_h, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3_02.png"
EMU_motor1_middle_sprites(14, ice3_02, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3_03.png"
MU_car_sprites(14, ice3_03, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3_05.png"
MU_car_nd_sprites(14, ice3_05, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, ice3_h_sprites_left_check,
  position_in_consist == 0)
{
  1: ice3_h_sprites_left;
     ice3_h_notpowered_sprites_left;
}

switch (FEAT_TRAINS, SELF, ice3_h_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: ice3_h_sprites_right;
     ice3_h_notpowered_sprites_right;
}

switch (FEAT_TRAINS, SELF, ice3_never_train, position_in_articulated_veh)
{
   1: ice3_02_sprites_left;
   2: ice3_02_normal_sprites;
      align_14_sprites;
}

switch (FEAT_TRAINS, SELF, ice3_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   (no_ice3_inR4() * 200) +
   (prev_vehicle_randombits() & 0x01) * 100 +
   position_in_articulated_veh])
{
   0: ice3_h_sprites_left_check;
   2: ice3_02_notpowered_normal_sprites_left;
   4: ice3_03_sprites_left;
   6: ice3_03_sprites_left;
   8: ice3_05_sprites_right;
  10: ice3_03_sprites_right;
  12: ice3_02_sprites_right;
  14: ice3_h_sprites_right_check;

 100: ice3_h_sprites_left_check;
 102: ice3_02_notpowered_normal_sprites_left;
 104: ice3_03_sprites_left;
 106: ice3_05_sprites_left;
 108: ice3_03_sprites_right;
 110: ice3_03_sprites_right;
 112: ice3_02_sprites_right;
 114: ice3_h_sprites_right_check;

 200: ice3_h_sprites_left_check;
 202: ice3_02_notpowered_sprites_left;
 204: ice3_03_notpowered_sprites_left;
 206: ice3_03_notpowered_sprites_left;
 208: ice3_05_sprites_right;
 210: ice3_03_notpowered_sprites_right;
 212: ice3_02_notpowered_sprites_right;
 214: ice3_h_sprites_right_check;

 300: ice3_h_sprites_left_check;
 302: ice3_02_notpowered_sprites_left;
 304: ice3_03_notpowered_sprites_left;
 306: ice3_05_sprites_left;
 308: ice3_03_notpowered_sprites_right;
 310: ice3_03_notpowered_sprites_right;
 312: ice3_02_notpowered_sprites_right;
 314: ice3_h_sprites_right_check;

 777: ice3_never_train;

      align_11_sprites;
}

long_vehicle(ice3)

switch (FEAT_TRAINS, SELF, ice3_articulated_part,
  extra_callback_info1)
{
  1: return dummy7;
  2: return ice3_part2;
  3: return dummy6;
  4: return ice3_part3;
  5: return dummy6;
  6: return ice3_part3;
  7: return dummy6;
  8: return ice3_part3;
  9: return dummy6;
 10: return ice3_part3;
 11: return dummy6;
 12: return ice3_part3;
 13: return dummy6;
 14: return ice3_part3;
 15: return dummy7;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, ice3_create_effect3,
  electric_create_effect(-1)) { return 1; }

switch (FEAT_TRAINS, SELF, ice3_create_effect0,
  position_in_articulated_veh)
{
  12: ice3_create_effect3;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, ice3_create_effect,
  any_ice3())
{
  1: ice3_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, ice3_can_attach_wagon2,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, ice3_can_attach_wagon1,
  STORE_TEMP(ice3s_count(), 0))
{
  ice3_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, ice3_can_attach_wagon,
  any_ice3())
{
  1: ice3_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

RC_head_check_ice3_new(ice3)
switch (FEAT_TRAINS, SELF, ice3_running_cost_factor,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(330, 6),                                 // Скорость
   STORE_TEMP(409, 7),                                 // Тара
   STORE_TEMP(LOAD_TEMP(7) + 248 / 16 + 141 / 8, 8)])  // Максимальная масса
{ ice3_check_running_cost_factor; }                    // 1921+817

engine_capacity_MU_ice3(ice3, 248)
engine_power_MU_ice3(ice3, kw2hp(8000))
engine_speed(ice3, 330)
hint_MU_with_subtype_comment(ice3,
     calc_loading(max(248 / (5 * WAGON_DOOR), 141 / (5 * WAGON_DOOR))),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_15AC_WITH_SUBTYPE, STR_PURCHASE_HINT_VELARO,
     STR_SECTIONS_MU_S1_2of8,
     1997, 2006,
     string(STR_PURCHASE_HINT_FACTORY_SIEMENS),
     string(STR_PURCHASE_HINT_ICE3))

item (FEAT_TRAINS, ice3, 177) {
  property {
    name: string(STR_NAME_ICE3);
    vehicle_dates(1997, 2006, 30, 10, 8, 1500)
    vehicle_emu(15ac, kw2hp(8000), 409, 300.0, 248, 7 * WAGON_DOOR)
  }
  graphics {
                default: ice3_sprites;
               purchase: ice3_purchase_sprites;
       cargo_age_period: return 174;
                  speed: ice3_speed;
    running_cost_factor: ice3_running_cost_factor;
       articulated_part: ice3_articulated_part;
       can_attach_wagon: ice3_can_attach_wagon;
                  power: ice3_power;
         cargo_capacity: ice3_cargo_capacity;
            cost_factor: return 1500;
         colour_mapping: any_cc_colour;
          create_effect: ice3_create_effect;
         purchase_speed: return 330;
        additional_text: ice3_additional_text;
  }
}

long_name_template(ice3, STR_LONGNAME_ICE3)

engine_capacity_MU_ice3(ice3_part2, 141)

item (FEAT_TRAINS, ice3_part2, 179) {
  property {
    vehicle_no_dates(1997, 2006, 30, 10, 8, 0)
    vehicle_emu_c(15ac, 0, 141, 5 * WAGON_DOOR)
    vehicle_allow_tourists()
    default_cargo_type: TOUR;
  }
  graphics {
             default: ice3_sprites;
    cargo_age_period: return 370;
       create_effect: ice3_create_effect;
      cargo_capacity: ice3_part2_cargo_capacity;
          refit_cost: return 0 | CB_RESULT_AUTOREFIT;
      colour_mapping: any_cc_colour;
  }
}

item (FEAT_TRAINS, ice3_part3, 190) {
  property {
    vehicle_no_dates(1997, 2006, 30, 10, 8, 0)
    vehicle_emu_empty(15ac)
  }
  graphics {
           default: ice3_sprites;
     create_effect: ice3_create_effect;
    colour_mapping: any_cc_colour;
  }
}
