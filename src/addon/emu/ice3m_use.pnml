// ice3m uses ??

#define IMAGEFILE  "src/addon/emu/ice3m_01.png"
purchase_sprites(ice3m, 0, 0)
MU_head_middle_sp_sprites(15, ice3m_01, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_02.png"
EMU_motor1_middle_sprites(14, ice3m_02, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_03.png"
EMU_motor1_middle_sprites(14, ice3m_03, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_04.png"
EMU_motor1_middle_sprites(14, ice3m_04, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_05.png"
EMU_motor1_nd_sprites(14, ice3m_05, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_07.png"
EMU_motor1_middle_sprites(14, ice3m_07, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/ice3m_08.png"
MU_head_middle_sp_sprites(15, ice3m_08, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, ice3m_01_sprites_left_check,
  position_in_consist == 0)
{
  1: ice3m_01_sprites_left;
     ice3m_01_middle_sprites_left;
}

switch (FEAT_TRAINS, SELF, ice3m_01_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: ice3m_01_sprites_right;
     ice3m_01_middle_sprites_right;
}

switch (FEAT_TRAINS, SELF, ice3m_08_sprites_left_check,
  position_in_consist == 0)
{
  1: ice3m_08_sprites_left;
     ice3m_08_middle_sprites_left;
}

switch (FEAT_TRAINS, SELF, ice3m_08_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: ice3m_08_sprites_right;
     ice3m_08_middle_sprites_right;
}

switch (FEAT_TRAINS, SELF, ice3m_never_train, position_in_articulated_veh)
{
   1: ice3m_02_sprites_left;
   2: ice3m_02_normal_sprites_left;
   3: ice3m_04_sprites_left;
   4: ice3m_04_normal_sprites_left;
   5: ice3m_05_sprites_left;
   6: ice3m_07_sprites_left;
   7: ice3m_07_normal_sprites_left;
      align_14_sprites;
}

is_ER15DC_ds(ice3m_03_sprites_left_railcheck2,  ice3m_03_sprites_left,  ice3m_03_normal_sprites_left)
is_ER15DC_ds(ice3m_03_sprites_right_railcheck2, ice3m_03_sprites_right, ice3m_03_normal_sprites_right)
is_ER3DC_ds(ice3m_03_sprites_left_railcheck,    ice3m_03_sprites_left,  ice3m_03_sprites_left_railcheck2)
is_ER3DC_ds(ice3m_03_sprites_right_railcheck,   ice3m_03_sprites_right, ice3m_03_sprites_right_railcheck2)

is_ER15AC_ds(ice3m_02_sprites_right_railcheck,  ice3m_02_sprites_right, ice3m_02_normal_sprites_right)
is_ER15AC_ds(ice3m_07_sprites_right_railcheck,  ice3m_07_sprites_right, ice3m_07_normal_sprites_right)
is_ER25AC_ds(ice3m_04_sprites_right_railcheck,   ice3m_04_sprites_right, ice3m_04_normal_sprites_right)
is_ER25AC_ds(ice3m_05_sprites_right_railcheck,   ice3m_05_sprites_right, ice3m_05_notpowered_sprites_right)

switch (FEAT_TRAINS, SELF, ice3m_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   (no_ice3_inR4() * 200) +
   (prev_vehicle_randombits() & 0x01) * 100 +
   position_in_articulated_veh])
{
   0: ice3m_01_sprites_left_check;
   2: ice3m_02_normal_sprites_left;
   4: ice3m_03_sprites_left_railcheck;
   6: ice3m_04_normal_sprites_left;
   8: ice3m_05_sprites_right_railcheck;
  10: ice3m_03_sprites_right_railcheck;
  12: ice3m_07_sprites_right_railcheck;
  14: ice3m_08_sprites_right_check;

 100: ice3m_08_sprites_left_check;
 102: ice3m_07_normal_sprites_left;
 104: ice3m_03_sprites_left_railcheck;
 106: ice3m_05_notpowered_sprites_left;
 108: ice3m_04_sprites_right_railcheck;
 110: ice3m_03_sprites_right_railcheck;
 112: ice3m_02_sprites_right_railcheck;
 114: ice3m_01_sprites_right_check;

 200: ice3m_01_sprites_left_check;
 202: ice3m_02_notpowered_sprites_left;
 204: ice3m_03_notpowered_sprites_left;
 206: ice3m_04_notpowered_sprites_left;
 208: ice3m_05_notpowered_sprites_right;
 210: ice3m_03_notpowered_sprites_right;
 212: ice3m_07_notpowered_sprites_right;
 214: ice3m_08_sprites_right_check;

 300: ice3m_08_sprites_left_check;
 302: ice3m_07_notpowered_sprites_left;
 304: ice3m_03_notpowered_sprites_left;
 306: ice3m_05_notpowered_sprites_left;
 308: ice3m_04_notpowered_sprites_right;
 310: ice3m_03_notpowered_sprites_right;
 312: ice3m_02_notpowered_sprites_right;
 314: ice3m_01_sprites_right_check;

 777: ice3m_never_train;

      align_15_sprites;
}

long_vehicle(ice3m)

switch (FEAT_TRAINS, SELF, ice3m_articulated_part,
  extra_callback_info1)
{
  1: return dummy7;
  2: return ice3m_part2;
  3: return dummy6;
  4: return ice3m_part3;
  5: return dummy6;
  6: return ice3m_part3;
  7: return dummy6;
  8: return ice3m_part3;
  9: return dummy6;
 10: return ice3m_part3;
 11: return dummy6;
 12: return ice3m_part3;
 13: return dummy6;
 14: return ice3m_part3;
 15: return dummy7;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, ice3m_create_effect_right, electric_create_effect(-1)) { return 1; }
switch (FEAT_TRAINS, SELF, ice3m_create_effect_left, electric_create_effect(6)) { return 1; }

is_ER15DC_ds(ice3m_create_effect_03_DDC_2, ice3m_create_effect_right, return disable_create_effect())
is_ER15DC_ds(ice3m_create_effect_06_DDC_2, ice3m_create_effect_left,  return disable_create_effect())
is_ER3DC_ds(ice3m_create_effect_03_DDC,    ice3m_create_effect_right, ice3m_create_effect_03_DDC_2)
is_ER3DC_ds(ice3m_create_effect_06_DDC,    ice3m_create_effect_left,  ice3m_create_effect_06_DDC_2)

is_ER15AC_ds(ice3m_create_effect_07_15AC, ice3m_create_effect_right, return disable_create_effect())
is_ER25AC_ds(ice3m_create_effect_05_AC,    ice3m_create_effect_left,  return disable_create_effect())

switch (FEAT_TRAINS, SELF, ice3m_create_effect0,
  position_in_articulated_veh)
{
   4: ice3m_create_effect_03_DDC;
   8: ice3m_create_effect_05_AC;
  10: ice3m_create_effect_06_DDC;
  12: ice3m_create_effect_07_15AC;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, ice3m_create_effect,
  any_ice3())
{
  1: ice3m_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, ice3m_can_attach_wagon2,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, ice3m_can_attach_wagon1,
  STORE_TEMP(ice3s_count(), 0))
{
  ice3m_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, ice3m_can_attach_wagon,
  any_ice3())
{
  1: ice3m_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

RC_head_check_ice3(ice3m)
switch (FEAT_TRAINS, SELF, ice3m_running_cost_factor_AC,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(330, 6),                                 // Скорость
   STORE_TEMP(435, 7),                                 // Тара
   STORE_TEMP(LOAD_TEMP(7) + 242 / 16 + 136 / 8, 8)])  // Максимальная масса
{ ice3m_check_running_cost_factor; }                   // 1921+817
switch (FEAT_TRAINS, SELF, ice3m_running_cost_factor_DC,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(250, 6),                                 // Скорость
   STORE_TEMP(435, 7),                                 // Тара
   STORE_TEMP(LOAD_TEMP(7) + 242 / 16 + 136 / 8, 8)])  // Максимальная масса
{ ice3m_check_running_cost_factor; }                   // 1921+817

switch (FEAT_TRAINS, SELF, ice3m_running_cost_factor, is_ER25AC() || is_ER15AC())
{ 1: ice3m_running_cost_factor_AC;
     ice3m_running_cost_factor_DC; }

engine_power_MU_ice3(ice3m_15DC, kw2hp(4300))
engine_power_MU_ice3(ice3m_DC, kw2hp(4300))
engine_power_MU_ice3(ice3m_15AC, kw2hp(8000))
engine_power_MU_ice3(ice3m_AC, kw2hp(8000))
engine_power_change_AAC_DDC(ice3m)
engine_speed(ice3m_15AC, 330)
engine_speed(ice3m_AC, 330)
engine_speed(ice3m_DC, 220)
engine_speed_change_AAC_DC(ice3m)
engine_capacity_MU_ice3(ice3m, 242)
hint_MU_with_subtype_comment_chande_speedpower_on_dc(ice3m,
     calc_loading(max(242 / (7 * WAGON_DOOR), 136 / (5 * WAGON_DOOR))),
     STR_PURCHASE_HINT_CAP_001_NORMAL,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_AACDDC_WITH_SUBTYPE, STR_PURCHASE_HINT_VELARO,
     STR_SECTIONS_MU_S1_2of8,
     2002, 2009,
     string(STR_PURCHASE_HINT_FACTORY_SIEMENS),
     string(STR_PURCHASE_HINT_ICE3),
     220, kw2hp_in_cb(4300))

item (FEAT_TRAINS, ice3m, 138) {
  property {
    name: string(STR_NAME_ICE3M);
    vehicle_dates(2002, 2009, 30, 10, 8, 1500)
    vehicle_emu(aacddc, kw2hp(8000), 435, 300.0, 242, 7 * WAGON_DOOR, _highspeed)
  }
  graphics {
        additional_text: ice3m_additional_text;
       articulated_part: ice3m_articulated_part;
       can_attach_wagon: ice3m_can_attach_wagon;
       cargo_age_period: return CAP_001_NORMAL;
         cargo_capacity: ice3m_cargo_capacity;
         colour_mapping: any_cc_colour;
            cost_factor: return 1500;
          create_effect: ice3m_create_effect;
                default: ice3m_sprites;
                  power: ice3m_power;
               purchase: ice3m_purchase_sprites;
         purchase_power: return get_power_in_cb(kw2hp(8000));
         purchase_speed: return 330;
    running_cost_factor: ice3m_running_cost_factor;
                  speed: ice3m_speed;
  }
}

long_name_template(ice3m, STR_LONGNAME_ICE3M)

engine_capacity_MU_ice3(ice3m_part2, 136)

item (FEAT_TRAINS, ice3m_part2, 139) {
  property {
    vehicle_no_dates(2002, 2009, 30, 10, 8, 0)
    vehicle_emu_c(aacddc, 0, 136, 5 * WAGON_DOOR, _highspeed)
    vehicle_tourists()
    default_cargo_type: TOUR;
  }
  graphics {
    cargo_age_period: return CAP_001_NORMAL;
      cargo_capacity: ice3m_part2_cargo_capacity;
      colour_mapping: any_cc_colour;
       create_effect: ice3m_create_effect;
             default: ice3m_sprites;
          refit_cost: return 0 | CB_RESULT_AUTOREFIT;
  }
}

item (FEAT_TRAINS, ice3m_part3, 140) {
  property {
    vehicle_no_dates(2002, 2009, 30, 10, 8, 0)
    vehicle_emu_empty(aacddc, _highspeed)
  }
  graphics {
    colour_mapping: any_cc_colour;
     create_effect: ice3m_create_effect;
           default: ice3m_sprites;
  }
}
