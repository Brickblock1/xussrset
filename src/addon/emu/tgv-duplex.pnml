// tgv_duplex

#define IMAGEFILE  "src/addon/emu/tgv-duplex_01.png"
purchase_sprites(tgv_duplex, 0, 0)
MU_head_2d_middle_sp_sprites(12, tgv_duplex_h_v1, 32, 40)
MU_head_2d_middle_sp_sprites(12, tgv_duplex_h_v2, 32, 576)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_01_o.png"
MU_head_2d_middle_sp_sprites(12, tgv_duplex_h_v3, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_02.png"
MU_car_sprites(12, tgv_duplex_02_v1, 32, 40)
MU_car_sprites(12, tgv_duplex_02_v2, 32, 308)
MU_car_sprites(12, tgv_duplex_02_v3, 32, 576)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_03.png"
MU_car_sprites(11, tgv_duplex_03_v1, 32, 40)
MU_car_sprites(11, tgv_duplex_03_v2, 32, 308)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_03_o.png"
MU_car_sprites(11, tgv_duplex_03_v3, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_04_o.png"
MU_car_sprites(11, tgv_duplex_04_v3, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_05.png"
MU_car_nd_sprites(11, tgv_duplex_05_v1, 32, 40)
MU_car_nd_sprites(11, tgv_duplex_05_v2, 32, 308)
MU_car_nd_sprites(11, tgv_duplex_05_v3, 32, 576)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_06.png"
MU_car_sprites(11, tgv_duplex_06_v1, 32, 40)
MU_car_sprites(11, tgv_duplex_06_v2, 32, 308)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_06_o.png"
MU_car_sprites(11, tgv_duplex_06_v3, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_07_o.png"
MU_car_sprites(11, tgv_duplex_07_v3, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/addon/emu/tgv-duplex_09.png"
MU_car_sprites(12, tgv_duplex_09_v1, 32, 40)
MU_car_sprites(12, tgv_duplex_09_v2, 32, 308)
MU_car_sprites(12, tgv_duplex_09_v3, 32, 576)
#undef IMAGEFILE

#define tgv_duplex_graphics_template(name, name2, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_left,     \
[ set_offset_to(-position_in_articulated_veh),              \
  prev_vehicle_cargo_subtype()])                            \
{ 0: name2##_v1##suffix##_sprites_left;                     \
  LV_SNCF_ATLANTIQUE: name2##_v1##suffix##_sprites_left;    \
  LV_SNCF_CARMILLON: name2##_v2##suffix##_sprites_left;     \
  LV_OUIGO: name##_v3##suffix##_sprites_left;               \
     align_12_sprites; }                                    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_right,    \
[ set_offset_to(-position_in_articulated_veh),              \
  prev_vehicle_cargo_subtype()])                            \
{ 0: name2##_v1##suffix##_sprites_right;                    \
  LV_SNCF_ATLANTIQUE: name2##_v1##suffix##_sprites_right;   \
  LV_SNCF_CARMILLON: name2##_v2##suffix##_sprites_right;    \
  LV_OUIGO: name##_v3##suffix##_sprites_right;              \
     align_12_sprites; }                                    \

tgv_duplex_graphics_template(tgv_duplex_h , tgv_duplex_h , )
tgv_duplex_graphics_template(tgv_duplex_h , tgv_duplex_h , _middle)
tgv_duplex_graphics_template(tgv_duplex_02, tgv_duplex_02, )
tgv_duplex_graphics_template(tgv_duplex_02, tgv_duplex_02, _notpowered)
tgv_duplex_graphics_template(tgv_duplex_03, tgv_duplex_03, )
tgv_duplex_graphics_template(tgv_duplex_03, tgv_duplex_03, _notpowered)
tgv_duplex_graphics_template(tgv_duplex_04, tgv_duplex_03, )
tgv_duplex_graphics_template(tgv_duplex_04, tgv_duplex_03, _notpowered)
tgv_duplex_graphics_template(tgv_duplex_05, tgv_duplex_05, )
tgv_duplex_graphics_template(tgv_duplex_06, tgv_duplex_06, )
tgv_duplex_graphics_template(tgv_duplex_06, tgv_duplex_06, _notpowered)
tgv_duplex_graphics_template(tgv_duplex_07, tgv_duplex_06, )
tgv_duplex_graphics_template(tgv_duplex_07, tgv_duplex_06, _notpowered)
tgv_duplex_graphics_template(tgv_duplex_09, tgv_duplex_09, )
tgv_duplex_graphics_template(tgv_duplex_09, tgv_duplex_09, _notpowered)

switch (FEAT_TRAINS, SELF, tgv_duplex_h_sprites_left_check,
  position_in_consist == 0)
{
  1: tgv_duplex_h_sprites_left;
     tgv_duplex_h_middle_sprites_left;
}

random_switch (FEAT_TRAINS, SELF, tgv_duplex_h_sprites_start,
  bitmask(TRIGGER_VEHICLE_SERVICE))
{
  1: tgv_duplex_h_sprites_left_check;
  1: tgv_duplex_h_sprites_left_check;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_h_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: tgv_duplex_h_sprites_right;
     tgv_duplex_h_middle_sprites_right;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   (no_tgv_inR4() * 200) +
   (prev_vehicle_randombits() % 2) * 100 +
   position_in_articulated_veh])
{
   0: tgv_duplex_h_sprites_start;
   2: tgv_duplex_02_sprites_left;
   4: tgv_duplex_03_sprites_left;
   6: tgv_duplex_04_sprites_left;
   8: tgv_duplex_05_sprites_left;
  10: tgv_duplex_06_sprites_right;
  12: tgv_duplex_07_sprites_right;
  14: tgv_duplex_06_sprites_right;
  16: tgv_duplex_09_sprites_right;
  18: tgv_duplex_h_sprites_right_check;

 100: tgv_duplex_h_sprites_start;
 102: tgv_duplex_09_sprites_left;
 104: tgv_duplex_06_sprites_left;
 106: tgv_duplex_07_sprites_left;
 108: tgv_duplex_06_sprites_left;
 110: tgv_duplex_05_sprites_right;
 112: tgv_duplex_04_sprites_right;
 114: tgv_duplex_03_sprites_right;
 116: tgv_duplex_02_sprites_right;
 118: tgv_duplex_h_sprites_right_check;

 200: tgv_duplex_h_sprites_start;
 202: tgv_duplex_02_notpowered_sprites_left;
 204: tgv_duplex_03_notpowered_sprites_left;
 206: tgv_duplex_04_notpowered_sprites_left;
 208: tgv_duplex_05_sprites_left;
 210: tgv_duplex_06_notpowered_sprites_right;
 212: tgv_duplex_07_notpowered_sprites_right;
 214: tgv_duplex_06_notpowered_sprites_right;
 216: tgv_duplex_09_notpowered_sprites_right;
 218: tgv_duplex_h_sprites_right_check;

 300: tgv_duplex_h_sprites_start;
 302: tgv_duplex_09_notpowered_sprites_left;
 304: tgv_duplex_06_notpowered_sprites_left;
 306: tgv_duplex_07_notpowered_sprites_left;
 308: tgv_duplex_06_notpowered_sprites_left;
 310: tgv_duplex_05_sprites_right;
 312: tgv_duplex_04_notpowered_sprites_right;
 314: tgv_duplex_03_notpowered_sprites_right;
 316: tgv_duplex_02_notpowered_sprites_right;
 318: tgv_duplex_h_sprites_right_check;

      align_11_sprites;
}

long_vehicle_RND(tgv_duplex, tgv_duplex_h_sprites_start)

switch (FEAT_TRAINS, SELF, tgv_duplex_articulated_part,
  extra_callback_info1)
{
  1: return dummy4;
  2: return tgv_duplex_part2;
  3: return dummy4;
  4: return tgv_duplex_part3;
  5: return dummy3;
  6: return tgv_duplex_part3;
  7: return dummy3;
  8: return tgv_duplex_part3;
  9: return dummy3;
 10: return tgv_duplex_part3;
 11: return dummy3;
 12: return tgv_duplex_part3;
 13: return dummy3;
 14: return tgv_duplex_part3;
 15: return dummy3;
 16: return tgv_duplex_part3;
 17: return dummy4;
 18: return tgv_duplex_part3;
 19: return dummy4;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_create_effect_01_d,
  electric_create_effect(3))
{
  return 1;
}

is_ERA_ds(tgv_duplex_create_effect_01, return disable_create_effect(), tgv_duplex_create_effect_01_d)

switch (FEAT_TRAINS, SELF, tgv_duplex_create_effect_10,
  electric_create_effect(-2))
{
  return 1;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_create_effect0,
  position_in_articulated_veh)
{
   0: tgv_duplex_create_effect_01;
  18: tgv_duplex_create_effect_10;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, tgv_duplex_create_effect,
  any_tgv())
{
  1: tgv_duplex_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, tgv_duplex_can_attach_wagon1,
  tgvs_count() < 2)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, SELF, tgv_duplex_can_attach_wagon,
  any_tgv())
{
  1: tgv_duplex_can_attach_wagon1;
     return string(STR_CAN_ATTACH_TGV);
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_age_period,
  cargo_subtype)
{
  LV_OUIGO: return 150;
            return 370;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_subtype_text3,
    cargo_subtype)
{
  LV_SNCF_CARMILLON: return string(STR_REFIT_SNCF_CARMILLON);
                     return string(STR_REFIT_SNCF_ATLANTIQUE);
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_subtype_text2,
  cargo_subtype)
{
  LV_SNCF_CARMILLON: return string(STR_REFIT_SNCF_CARMILLON);
  LV_OUIGO:          return string(STR_REFIT_OUIGO);
                     return string(STR_REFIT_SNCF_ATLANTIQUE);
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_subtype_text,
  cargo_type_in_veh)
{
  PASS: tgv_duplex_cargo_subtype_text2;
        tgv_duplex_cargo_subtype_text3;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_capacity3,
  cargo_type_in_veh)
{
  PASS: return 600-348;
        return 0;
}

switch (FEAT_TRAINS, SELF, tgv_duplex_cargo_capacity2,
  cargo_subtype)
{
  LV_OUIGO: tgv_duplex_cargo_capacity3;
     return 197;
}

switch (FEAT_TRAINS, PARENT, tgv_duplex_cargo_capacity, any_tgv())
{
  1: tgv_duplex_cargo_capacity2;
     return 0;
}

RC_head_check_tgv_new(tgv_duplex)
switch (FEAT_TRAINS, SELF, tgv_duplex_running_cost_factor,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(on_any_ERA() ? 320 : 250, 6),            // Скорость
   STORE_TEMP(380, 7),                                 // Тара
   STORE_TEMP(LOAD_TEMP(7) + 348 / 16 + 197 / 8, 8)])  // Максимальная масса
{ tgv_duplex_check_running_cost_factor; }

engine_refit_cost_for_e2_livery_change(tgv_duplex, LV_OUIGO, 4, 6)
engine_power_MU_tgv(tgv_duplex_DC, 4935)
engine_power_MU_tgv(tgv_duplex_AC, 11800)
engine_power_change_AC_DC(tgv_duplex)
engine_speed(tgv_duplex_DC, 250)
engine_speed(tgv_duplex_AC, 320)
engine_speed_change_AC_DC(tgv_duplex)

hint_MU_comment(tgv_duplex,
     calc_loading(max(348 / (4 * WAGON_DOOR), 197 / (3 * WAGON_DOOR))),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_AC15DC,
     STR_SECTIONS_MU_S1_2of10,
     1995, 2012,
     string(STR_PURCHASE_HINT_FACTORY_ALSTOM_TRANS),
     string(STR_PURCHASE_HINT_LIST2_COMMENT,
            string(STR_PURCHASE_HINT_SPEED_POWER_CHANGE_ON_DC, 250, 4935),
            string(STR_PURCHASE_HINT_TGV)))

item (FEAT_TRAINS, tgv_duplex, 662) {
  property {
    name: string(STR_NAME_TGV_DUPLEX);
    vehicle_dates(1995, 2012, 30, 10, 8, 1500)
    vehicle_emu(ac15dc, 11800, 380, 400.0, 197, 3 * WAGON_DOOR)
    vehicle_allow_tourists()
    default_cargo_type: TOUR;
  }
  graphics {
    default: tgv_duplex_sprites;
    purchase: tgv_duplex_purchase_sprites;
    cargo_age_period: tgv_duplex_cargo_age_period;
    speed: tgv_duplex_speed;
    running_cost_factor: tgv_duplex_running_cost_factor;
    articulated_part: tgv_duplex_articulated_part;
    can_attach_wagon: tgv_duplex_can_attach_wagon;
    power: tgv_duplex_power;
    cargo_capacity: tgv_duplex_cargo_capacity;
    cost_factor: return 1500;
    colour_mapping: any_cc_colour;
    create_effect: tgv_duplex_create_effect;
    purchase_speed: return 320;
    purchase_power: return 11800;
    additional_text: tgv_duplex_additional_text;
    cargo_subtype_text: tgv_duplex_cargo_subtype_text;
    refit_cost: tgv_duplex_refit_cost;
  }
}

long_name_template(tgv_duplex, STR_LONGNAME_TGV_DUPLEX)

switch (FEAT_TRAINS, SELF, tgv_duplex_part2_cargo_age_period,
[ set_offset_to(-position_in_articulated_veh),
  prev_vehicle_cargo_subtype()])
{
  LV_OUIGO: return 150;
     return 174;
}

engine_capacity_MU_tgv(tgv_duplex_part2, 348)

item (FEAT_TRAINS, tgv_duplex_part2, 663) {
  property {
    vehicle_no_dates(1995, 2012, 30, 10, 8, 0)
    vehicle_emu_c(ac15dc, 0, 348, 4 * WAGON_DOOR)
  }
  graphics {
    default: tgv_duplex_sprites;
    cargo_age_period: tgv_duplex_part2_cargo_age_period;
    create_effect: tgv_duplex_create_effect;
    cargo_capacity: tgv_duplex_part2_cargo_capacity;
    colour_mapping: any_cc_colour;
  }
}

item (FEAT_TRAINS, tgv_duplex_part3, 664) {
  property {
    vehicle_no_dates(1995, 2012, 30, 10, 8, 0)
    vehicle_emu_empty(ac15dc)
  }
  graphics {
    default: tgv_duplex_sprites;
    create_effect: tgv_duplex_create_effect;
    colour_mapping: any_cc_colour;
  }
}
