  /// code definition

// выбор графики паровоза с тендером

#define steamer_direction_template(name, suffix)                        \
switch (FEAT_TRAINS, SELF, name##suffix, position_in_articulated_veh)   \
{ 0: name##_engine##suffix;                                             \
  2: name##_tender##suffix;                                             \
     dummy_sprites; }                                                   \

// Отображение кабины предсерийного локомотива

#define engine_pre_template(name, year, direction)       \
switch (FEAT_TRAINS, SELF, name##_sprites_##direction,   \
  build_year < year)                                     \
{ 1: name##_v1_sprites_##direction;                      \
     name##_a##year##_sprites_##direction; }             \

// Выбор кабины локомотива по году

#define engine_build_year_template(name, year, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,      \
  build_year >= year)                                               \
{ 0: name##_b##year##suffix##_sprites_##direction;                  \
     name##_a##year##suffix##_sprites_##direction; }                \

#define engine_build_year2_template(name, year, year2, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,              \
  (build_year >= year) +                                                    \
  (build_year >= year2))                                                    \
{ 0: name##_b##year##suffix##_sprites_##direction;                          \
  1: name##_a##year##suffix##_sprites_##direction;                          \
     name##_a##year2##suffix##_sprites_##direction; }                       \

#define engine_build_year3_template(name, year, year2, year3, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,                     \
  (build_year >= year) +                                                           \
  (build_year >= year2) +                                                          \
  (build_year >= year3))                                                           \
{ 0: name##_b##year##suffix##_sprites_##direction;                                 \
  1: name##_a##year##suffix##_sprites_##direction;                                 \
  2: name##_a##year2##suffix##_sprites_##direction;                                \
     name##_a##year3##suffix##_sprites_##direction; }                              \

#define engine_build_year4_template(name, year, year2, year3, year4, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,                            \
  (build_year >= year) +                                                                  \
  (build_year >= year2) +                                                                 \
  (build_year >= year3) +                                                                 \
  (build_year >= year4))                                                                  \
{ 0: name##_b##year##suffix##_sprites_##direction;                                        \
  1: name##_a##year##suffix##_sprites_##direction;                                        \
  2: name##_a##year2##suffix##_sprites_##direction;                                       \
  3: name##_a##year3##suffix##_sprites_##direction;                                       \
     name##_a##year4##suffix##_sprites_##direction; }                                     \

#define engine_build_year5_template(name, year, year2, year3, year4, year5, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,                                   \
  (build_year >= year) +                                                                         \
  (build_year >= year2) +                                                                        \
  (build_year >= year3) +                                                                        \
  (build_year >= year4) +                                                                        \
  (build_year >= year5))                                                                         \
{ 0: name##_b##year##suffix##_sprites_##direction;                                               \
  1: name##_a##year##suffix##_sprites_##direction;                                               \
  2: name##_a##year2##suffix##_sprites_##direction;                                              \
  3: name##_a##year3##suffix##_sprites_##direction;                                              \
  4: name##_a##year4##suffix##_sprites_##direction;                                              \
     name##_a##year5##suffix##_sprites_##direction; }                                            \

#define engine_build_year6_template(name, year, year2, year3, year4, year5, year6, direction, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_##direction,                                          \
  (build_year >= year) +                                                                                \
  (build_year >= year2) +                                                                               \
  (build_year >= year3) +                                                                               \
  (build_year >= year4) +                                                                               \
  (build_year >= year5) +                                                                               \
  (build_year >= year6))                                                                                \
{ 0: name##_b##year##suffix##_sprites_##direction;                                                      \
  1: name##_a##year##suffix##_sprites_##direction;                                                      \
  2: name##_a##year2##suffix##_sprites_##direction;                                                     \
  3: name##_a##year3##suffix##_sprites_##direction;                                                     \
  4: name##_a##year4##suffix##_sprites_##direction;                                                     \
  5: name##_a##year5##suffix##_sprites_##direction;                                                     \
     name##_a##year6##suffix##_sprites_##direction; }                                                   \

// Выбор ориентации кабины случайным образом

#define engine_RNDany_direction_template(name, p1, p2)       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,   \
  bitmask(TRIGGER_VEHICLE_SERVICE))                          \
{ p1: name##_sprites_left;                                   \
  p2: name##_sprites_right; }                                \

#define engine_RND_direction_template(name, p1, p2)      \
random_switch (FEAT_TRAINS, SELF, name##_sprites_1RND,   \
  bitmask(TRIGGER_VEHICLE_SERVICE))                      \
{ p1: name##_sprites_left;                               \
  p2: name##_sprites_right; }                            \
switch (FEAT_TRAINS, PARENT, name##_sprites_start_sp,    \
  count_veh_id(name))                                    \
{ 1: name##_sprites_1RND;                                \
     name##_sprites_start; }                             \

// Выбор ориентации эффекта для кабины, ориентированной случайным образом

#define engine_RNDany_effect_direction_template(name, p1, p2)   \
switch (FEAT_TRAINS, SELF, name##_create_effect,                \
  (random_bits % (p1 + p2)) < p1)                               \
{ 1: name##_create_effect_sprites_left;                         \
     name##_create_effect_sprites_right; }                      \

#define engine_RND_effect_direction_template(name, p1, p2)   \
switch (FEAT_TRAINS, SELF, name##_create_effect_1RND,        \
  (random_bits % (p1 + p2)) < p1)                            \
{ 1: name##_create_effect_sprites_left;                      \
     name##_create_effect_sprites_right; }                   \
switch (FEAT_TRAINS, PARENT, name##_create_effect,           \
  count_veh_id(name))                                        \
{ 1: name##_create_effect_1RND;                              \
     name##_create_effect_sprites_start; }                   \

// Выбор ориентации кабины секции для СМЕ без возможности сборки

#define engine_direction_template_only2(name, suffix)      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,   \
  position_in_articulated_veh)                             \
{ 0: name##suffix##_sprites_left;                          \
  2: name##suffix##_sprites_right;                         \
  4: name##suffix##_sprites_left;                          \
  6: name##suffix##_sprites_right;                         \
  8: name##suffix##_sprites_left;                          \
 10: name##suffix##_sprites_right;                         \
 12: name##suffix##_sprites_left;                          \
     name##suffix##_sprites_right; }                       \

// Выбор ориентации кабины секции для СМЕ (схема без альтернатив в СМЕ)

#define engine_direction_template(name, suffix)            \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,      \
[ set_offset_to(2),                                        \
  (prev_vehicle_type_id() == name) ||                      \
  (position_in_consist == 0) ])                            \
{ 1: name##suffix##_sprites_left;                          \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,     \
  ((LOAD_TEMP(0) - count_veh_id(name) + 1) % 2))           \
{ 1: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,      \
[  set_offset_to(-16),                                     \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_old;                           \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,      \
[  set_offset_to(-14),                                     \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_16;                            \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,      \
[  set_offset_to(-12),                                     \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_14;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,      \
[  set_offset_to(-10),                                     \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_12;                            \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,       \
[  set_offset_to(-8),                                      \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_10;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,       \
[  set_offset_to(-6),                                      \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_8;                             \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,       \
[  set_offset_to(-4),                                      \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_6;                             \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,   \
[  set_offset_to(-2),                                      \
  (prev_vehicle_type_id() == name) ])                      \
{ 1: name##suffix##_sprites_4;                             \
     name##suffix##_sprites_2l; }                          \

// Выбор ориентации кабины секции для СМЕ (схема с 1 альтернативой)

#define engine_direction_template2(name, name2, suffix)    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,      \
[ set_offset_to(2),                                        \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ||                     \
  (position_in_consist == 0) ])                            \
{ 1: name##suffix##_sprites_left;                          \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,     \
  ((LOAD_TEMP(0) - count_veh_id(name) -                    \
    count_veh_id(name2) + 1) % 2))                         \
{ 1: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,      \
[  set_offset_to(-16),                                     \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_old;                           \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,      \
[  set_offset_to(-14),                                     \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_16;                            \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,      \
[  set_offset_to(-12),                                     \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_14;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,      \
[  set_offset_to(-10),                                     \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_12;                            \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,       \
[  set_offset_to(-8),                                      \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_10;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,       \
[  set_offset_to(-6),                                      \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_8;                             \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,       \
[  set_offset_to(-4),                                      \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_6;                             \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,   \
[  set_offset_to(-2),                                      \
  (prev_vehicle_type_id() == name) ||                      \
  (prev_vehicle_type_id() == name2) ])                     \
{ 1: name##suffix##_sprites_4;                             \
     name##suffix##_sprites_2l; }                          \

// Выбор ориентации кабины секции для СМЕ (схема без альтернатив и средней секцией)

#define engine_direction_template2m(name, namem, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,      \
[ set_offset_to(2),                                        \
  (prev_vehicle_type_id() == name) ||                      \
  (position_in_consist == 0) ])                            \
{ 1: name##suffix##_sprites_left;                          \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,     \
  ((LOAD_TEMP(0) - count_veh_id(name) -                    \
    count_veh_id(namem) + 1) % 2))                         \
{ 1: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,      \
[  set_offset_to(-16),                                     \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_old;                           \
  2: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,      \
[  set_offset_to(-14),                                     \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_16;                            \
  2: name##suffix##_sprites_right;                         \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,      \
[  set_offset_to(-12),                                     \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_14;                            \
  2: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,      \
[  set_offset_to(-10),                                     \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_12;                            \
  2: name##suffix##_sprites_right;                         \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,       \
[  set_offset_to(-8),                                      \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_10;                            \
  2: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,       \
[  set_offset_to(-6),                                      \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_8;                             \
  2: name##suffix##_sprites_right;                         \
     name##suffix##_sprites_2l;}                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,       \
[  set_offset_to(-4),                                      \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_6;                             \
  2: name##suffix##_sprites_2l;                            \
     name##suffix##_sprites_right;}                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,       \
[  set_offset_to(-2),                                      \
  (prev_vehicle_type_id() == name) +                       \
  ((prev_vehicle_type_id() == namem) * 2) ])               \
{ 1: name##suffix##_sprites_4;                             \
  2: name##suffix##_sprites_right;                         \
     name##suffix##_sprites_2l; }                          \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,      \
[  set_offset_to(2),                                       \
  (prev_vehicle_type_id() == namem) ])                     \
{ 1: name##suffix##_sprites_left;                          \
     name##suffix##_sprites_2; }                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,   \
[  set_offset_to(-2),                                      \
  (prev_vehicle_type_id() == namem) ])                     \
{ 1: name##suffix##_sprites_right;                         \
     name##suffix##_sprites_ml; }                          \

// Выбор ориентации кабины секции для СМЕ (схема с 1 альтернативой и средней секцией)

#define engine_direction_template3m(name, name2, namem, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,             \
[ set_offset_to(2),                                               \
  (prev_vehicle_type_id() == name) ||                             \
  (prev_vehicle_type_id() == name2) ||                            \
  (position_in_consist == 0) ])                                   \
{ 1: name##suffix##_sprites_left;                                 \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,            \
  ((LOAD_TEMP(0) - count_veh_id(name) -                           \
    count_veh_id(name2) - count_veh_id(namem) + 1) % 2))          \
{ 1: name##suffix##_sprites_2l;                                   \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,             \
[  set_offset_to(-16),                                            \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_old;                                  \
  2: name##suffix##_sprites_2l;                                   \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,             \
[  set_offset_to(-14),                                            \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_16;                                   \
  2: name##suffix##_sprites_right;                                \
     name##suffix##_sprites_2l;}                                  \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,             \
[  set_offset_to(-12),                                            \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_14;                                   \
  2: name##suffix##_sprites_2l;                                   \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,             \
[  set_offset_to(-10),                                            \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_12;                                   \
  2: name##suffix##_sprites_right;                                \
     name##suffix##_sprites_2l;}                                  \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,              \
[  set_offset_to(-8),                                             \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_10;                                   \
  2: name##suffix##_sprites_2l;                                   \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,              \
[  set_offset_to(-6),                                             \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_8;                                    \
  2: name##suffix##_sprites_right;                                \
     name##suffix##_sprites_2l;}                                  \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,              \
[  set_offset_to(-4),                                             \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_6;                                    \
  2: name##suffix##_sprites_2l;                                   \
     name##suffix##_sprites_right;}                               \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,              \
[  set_offset_to(-2),                                             \
  ((prev_vehicle_type_id() == name) ||                            \
   (prev_vehicle_type_id() == name2)) +                           \
  ((prev_vehicle_type_id() == namem) * 2) ])                      \
{ 1: name##suffix##_sprites_4;                                    \
  2: name##suffix##_sprites_right;                                \
     name##suffix##_sprites_2l; }                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,             \
[  set_offset_to(2),                                              \
  (prev_vehicle_type_id() == namem) ])                            \
{ 1: name##suffix##_sprites_left;                                 \
     name##suffix##_sprites_2; }                                  \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,          \
[  set_offset_to(-2),                                             \
  (prev_vehicle_type_id() == namem) ])                            \
{ 1: name##suffix##_sprites_right;                                \
     name##suffix##_sprites_ml; }                                 \

// Выбор ориентации кабины секции для СМЕ (схема с 2 альтернативами и средней секцией)

#define engine_direction_template4m(name, name2, name3, namem, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,                    \
[ set_offset_to(2),                                                      \
  (prev_vehicle_type_id() == name) ||                                    \
  (prev_vehicle_type_id() == name2) ||                                   \
  (prev_vehicle_type_id() == name3) ||                                   \
  (position_in_consist == 0) ])                                          \
{ 1: name##suffix##_sprites_left;                                        \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,                   \
  ((LOAD_TEMP(0) - count_veh_id(name) - count_veh_id(name2) -            \
    count_veh_id(name3) - count_veh_id(namem) + 1) % 2))                 \
{ 1: name##suffix##_sprites_2l;                                          \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,                    \
[  set_offset_to(-16),                                                   \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_old;                                         \
  2: name##suffix##_sprites_2l;                                          \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,                    \
[  set_offset_to(-14),                                                   \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_16;                                          \
  2: name##suffix##_sprites_right;                                       \
     name##suffix##_sprites_2l;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,                    \
[  set_offset_to(-12),                                                   \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_14;                                          \
  2: name##suffix##_sprites_2l;                                          \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,                    \
[  set_offset_to(-10),                                                   \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_12;                                          \
  2: name##suffix##_sprites_right;                                       \
     name##suffix##_sprites_2l;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,                     \
[  set_offset_to(-8),                                                    \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_10;                                          \
  2: name##suffix##_sprites_2l;                                          \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,                     \
[  set_offset_to(-6),                                                    \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_8;                                           \
  2: name##suffix##_sprites_right;                                       \
     name##suffix##_sprites_2l;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,                     \
[  set_offset_to(-4),                                                    \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_6;                                           \
  2: name##suffix##_sprites_2l;                                          \
     name##suffix##_sprites_right;}                                      \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,                     \
[  set_offset_to(-2),                                                    \
  ((prev_vehicle_type_id() == name) ||                                   \
   (prev_vehicle_type_id() == name2) ||                                  \
   (prev_vehicle_type_id() == name3)) +                                  \
  ((prev_vehicle_type_id() == namem) * 2) ])                             \
{ 1: name##suffix##_sprites_4;                                           \
  2: name##suffix##_sprites_right;                                       \
     name##suffix##_sprites_2l; }                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,                    \
[  set_offset_to(2),                                                     \
  (prev_vehicle_type_id() == namem) ])                                   \
{ 1: name##suffix##_sprites_left;                                        \
     name##suffix##_sprites_2; }                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,                 \
[  set_offset_to(-2),                                                    \
  (prev_vehicle_type_id() == namem) ])                                   \
{ 1: name##suffix##_sprites_right;                                       \
     name##suffix##_sprites_ml; }                                        \

// Выбор ориентации кабины секции для СМЕ (схема без альтернатив и 2-я средними секциями)

#define engine_direction_template3m2(name, namem, namem2, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,               \
[ set_offset_to(2),                                                 \
  (prev_vehicle_type_id() == name) ||                               \
  (position_in_consist == 0) ])                                     \
{ 1: name##suffix##_sprites_left;                                   \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,              \
  ((LOAD_TEMP(0) - count_veh_id(name) -                             \
    count_veh_id(namem) -                                           \
    count_veh_id(namem2) + 1) % 2))                                 \
{ 1: name##suffix##_sprites_2l;                                     \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,               \
[  set_offset_to(-16),                                              \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
    (prev_vehicle_type_id() == namem2)) * 2) ])                     \
{ 1: name##suffix##_sprites_old;                                    \
  2: name##suffix##_sprites_2l;                                     \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,               \
[  set_offset_to(-14),                                              \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_16;                                     \
  2: name##suffix##_sprites_right;                                  \
     name##suffix##_sprites_2l;}                                    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,               \
[  set_offset_to(-12),                                              \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_14;                                     \
  2: name##suffix##_sprites_2l;                                     \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,               \
[  set_offset_to(-10),                                              \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_12;                                     \
  2: name##suffix##_sprites_right;                                  \
     name##suffix##_sprites_2l;}                                    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,                \
[  set_offset_to(-8),                                               \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_10;                                     \
  2: name##suffix##_sprites_2l;                                     \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,                \
[  set_offset_to(-6),                                               \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_8;                                      \
  2: name##suffix##_sprites_right;                                  \
     name##suffix##_sprites_2l;}                                    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,                \
[  set_offset_to(-4),                                               \
  (prev_vehicle_type_id() == name) +                                \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_6;                                      \
  2: name##suffix##_sprites_2l;                                     \
     name##suffix##_sprites_right;}                                 \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,                \
[  set_offset_to(-2),                                               \
  ((prev_vehicle_type_id() == name))  +                             \
  (((prev_vehicle_type_id() == namem) ||                            \
   (prev_vehicle_type_id() == namem2)) * 2) ])                      \
{ 1: name##suffix##_sprites_4;                                      \
  2: name##suffix##_sprites_right;                                  \
     name##suffix##_sprites_2l; }                                   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,               \
[  set_offset_to(2),                                                \
  ((prev_vehicle_type_id() == namem) ||                             \
   (prev_vehicle_type_id() == namem2)) ])                           \
{ 1: name##suffix##_sprites_left;                                   \
     name##suffix##_sprites_2; }                                    \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,            \
[  set_offset_to(-2),                                               \
  ((prev_vehicle_type_id() == namem) ||                             \
   (prev_vehicle_type_id() == namem2)) ])                           \
{ 1: name##suffix##_sprites_right;                                  \
     name##suffix##_sprites_ml; }                                   \

// Выбор ориентации кабины секции для СМЕ (схема без альтернатив и 3-я средними секциями)

#define engine_direction_template4m3(name, namem, namem2, namem3, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,                       \
[ set_offset_to(2),                                                         \
  (prev_vehicle_type_id() == name) ||                                       \
  (position_in_consist == 0) ])                                             \
{ 1: name##suffix##_sprites_left;                                           \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,                      \
  ((LOAD_TEMP(0) - count_veh_id(name) -                                     \
    count_veh_id(namem) -                                                   \
    count_veh_id(namem2) -                                                  \
    count_veh_id(namem3) + 1) % 2))                                         \
{ 1: name##suffix##_sprites_2l;                                             \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,                       \
[  set_offset_to(-16),                                                      \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
    (prev_vehicle_type_id() == namem2) ||                                   \
    (prev_vehicle_type_id() == namem3)) * 2) ])                             \
{ 1: name##suffix##_sprites_old;                                            \
  2: name##suffix##_sprites_2l;                                             \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,                       \
[  set_offset_to(-14),                                                      \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_16;                                             \
  2: name##suffix##_sprites_right;                                          \
     name##suffix##_sprites_2l;}                                            \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,                       \
[  set_offset_to(-12),                                                      \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_14;                                             \
  2: name##suffix##_sprites_2l;                                             \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,                       \
[  set_offset_to(-10),                                                      \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_12;                                             \
  2: name##suffix##_sprites_right;                                          \
     name##suffix##_sprites_2l;}                                            \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,                        \
[  set_offset_to(-8),                                                       \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_10;                                             \
  2: name##suffix##_sprites_2l;                                             \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,                        \
[  set_offset_to(-6),                                                       \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_8;                                              \
  2: name##suffix##_sprites_right;                                          \
     name##suffix##_sprites_2l;}                                            \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,                        \
[  set_offset_to(-4),                                                       \
  (prev_vehicle_type_id() == name) +                                        \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_6;                                              \
  2: name##suffix##_sprites_2l;                                             \
     name##suffix##_sprites_right;}                                         \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,                        \
[  set_offset_to(-2),                                                       \
  ((prev_vehicle_type_id() == name))  +                                     \
  (((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) * 2) ])                              \
{ 1: name##suffix##_sprites_4;                                              \
  2: name##suffix##_sprites_right;                                          \
     name##suffix##_sprites_2l; }                                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,                       \
[  set_offset_to(2),                                                        \
  ((prev_vehicle_type_id() == namem) ||                                     \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) ])                                   \
{ 1: name##suffix##_sprites_left;                                           \
     name##suffix##_sprites_2; }                                            \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,                    \
[  set_offset_to(-2),                                                       \
  ((prev_vehicle_type_id() == namem) ||                                     \
   (prev_vehicle_type_id() == namem2) ||                                    \
   (prev_vehicle_type_id() == namem3)) ])                                   \
{ 1: name##suffix##_sprites_right;                                          \
     name##suffix##_sprites_ml; }                                           \

// Выбор ориентации кабины секции для СМЕ (схема с 1 альтернативой и 2-я средними секциями)

#define engine_direction_template4m2(name, name2, namem, namem2, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,                      \
[ set_offset_to(2),                                                        \
  (prev_vehicle_type_id() == name) ||                                      \
  (prev_vehicle_type_id() == name2) ||                                     \
  (position_in_consist == 0) ])                                            \
{ 1: name##suffix##_sprites_left;                                          \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,                     \
  ((LOAD_TEMP(0) - count_veh_id(name) -                                    \
    count_veh_id(name2) - count_veh_id(namem) -                            \
    count_veh_id(namem2) + 1) % 2))                                        \
{ 1: name##suffix##_sprites_2l;                                            \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,                      \
[  set_offset_to(-16),                                                     \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
    (prev_vehicle_type_id() == namem2)) * 2) ])                            \
{ 1: name##suffix##_sprites_old;                                           \
  2: name##suffix##_sprites_2l;                                            \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,                      \
[  set_offset_to(-14),                                                     \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_16;                                            \
  2: name##suffix##_sprites_right;                                         \
     name##suffix##_sprites_2l;}                                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,                      \
[  set_offset_to(-12),                                                     \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_14;                                            \
  2: name##suffix##_sprites_2l;                                            \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,                      \
[  set_offset_to(-10),                                                     \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_12;                                            \
  2: name##suffix##_sprites_right;                                         \
     name##suffix##_sprites_2l;}                                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,                       \
[  set_offset_to(-8),                                                      \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_10;                                            \
  2: name##suffix##_sprites_2l;                                            \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,                       \
[  set_offset_to(-6),                                                      \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_8;                                             \
  2: name##suffix##_sprites_right;                                         \
     name##suffix##_sprites_2l;}                                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,                       \
[  set_offset_to(-4),                                                      \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_6;                                             \
  2: name##suffix##_sprites_2l;                                            \
     name##suffix##_sprites_right;}                                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,                       \
[  set_offset_to(-2),                                                      \
  ((prev_vehicle_type_id() == name) ||                                     \
   (prev_vehicle_type_id() == name2)) +                                    \
  (((prev_vehicle_type_id() == namem) ||                                   \
   (prev_vehicle_type_id() == namem2)) * 2) ])                             \
{ 1: name##suffix##_sprites_4;                                             \
  2: name##suffix##_sprites_right;                                         \
     name##suffix##_sprites_2l; }                                          \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,                      \
[  set_offset_to(2),                                                       \
  ((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2)) ])                                  \
{ 1: name##suffix##_sprites_left;                                          \
     name##suffix##_sprites_2; }                                           \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,                   \
[  set_offset_to(-2),                                                      \
  ((prev_vehicle_type_id() == namem) ||                                    \
   (prev_vehicle_type_id() == namem2)) ])                                  \
{ 1: name##suffix##_sprites_right;                                         \
     name##suffix##_sprites_ml; }                                          \

// Выбор ориентации кабины секции для СМЕ (схема с 1 альтернативой и 3-я средними секциями)

#define engine_direction_template5m3(name, name2, namem, namem2, namem3, suffix)   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2l,                              \
[ set_offset_to(2),                                                                \
  (prev_vehicle_type_id() == name) ||                                              \
  (prev_vehicle_type_id() == name2) ||                                             \
  (position_in_consist == 0) ])                                                    \
{ 1: name##suffix##_sprites_left;                                                  \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_old,                             \
  ((LOAD_TEMP(0) - count_veh_id(name) -                                            \
    count_veh_id(name2) - count_veh_id(namem) -                                    \
    count_veh_id(namem2) - count_veh_id(namem3) + 1) % 2))                         \
{ 1: name##suffix##_sprites_2l;                                                    \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_16,                              \
[  set_offset_to(-16),                                                             \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_old;                                                   \
  2: name##suffix##_sprites_2l;                                                    \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_14,                              \
[  set_offset_to(-14),                                                             \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_16;                                                    \
  2: name##suffix##_sprites_right;                                                 \
     name##suffix##_sprites_2l;}                                                   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_12,                              \
[  set_offset_to(-12),                                                             \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_14;                                                    \
  2: name##suffix##_sprites_2l;                                                    \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_10,                              \
[  set_offset_to(-10),                                                             \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_12;                                                    \
  2: name##suffix##_sprites_right;                                                 \
     name##suffix##_sprites_2l;}                                                   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_8,                               \
[  set_offset_to(-8),                                                              \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_10;                                                    \
  2: name##suffix##_sprites_2l;                                                    \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_6,                               \
[  set_offset_to(-6),                                                              \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_8;                                                     \
  2: name##suffix##_sprites_right;                                                 \
     name##suffix##_sprites_2l;}                                                   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_4,                               \
[  set_offset_to(-4),                                                              \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_6;                                                     \
  2: name##suffix##_sprites_2l;                                                    \
     name##suffix##_sprites_right;}                                                \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_2,                               \
[  set_offset_to(-2),                                                              \
  ((prev_vehicle_type_id() == name) ||                                             \
   (prev_vehicle_type_id() == name2)) +                                            \
  (((prev_vehicle_type_id() == namem) ||                                           \
    (prev_vehicle_type_id() == namem2) ||                                          \
    (prev_vehicle_type_id() == namem3)) * 2) ])                                    \
{ 1: name##suffix##_sprites_4;                                                     \
  2: name##suffix##_sprites_right;                                                 \
     name##suffix##_sprites_2l; }                                                  \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_ml,                              \
[  set_offset_to(2),                                                               \
  ((prev_vehicle_type_id() == namem) ||                                            \
   (prev_vehicle_type_id() == namem2) ||                                           \
   (prev_vehicle_type_id() == namem3)) ])                                          \
{ 1: name##suffix##_sprites_left;                                                  \
     name##suffix##_sprites_2; }                                                   \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,                           \
[  set_offset_to(-2),                                                              \
  ((prev_vehicle_type_id() == namem) ||                                            \
   (prev_vehicle_type_id() == namem2) ||                                           \
   (prev_vehicle_type_id() == namem3)) ])                                          \
{ 1: name##suffix##_sprites_right;                                                 \
     name##suffix##_sprites_ml; }                                                  \

// Выбор ориентации бустера

#define engine_direction_template_buster(name)              \
switch (FEAT_TRAINS, SELF, name##_sprites_start,            \
[  set_offset_to(-2), prev_vehicle_randombits() & 0x01 ])   \
{ 1: name##_sprites_left;                                   \
     name##_sprites_right; }                                \

// Выбор ориентации двойного бустера без альтернатив

#define engine_direction_template_buster2(name, suffix)     \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites2,         \
[  set_offset_to(-2), prev_vehicle_randombits() & 0x01 ])   \
{ 1: name##suffix##_sprites_left;                           \
     name##suffix##_sprites_right; }                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites1,         \
[  set_offset_to(-4), prev_vehicle_randombits() & 0x01 ])   \
{ 1: name##suffix##_sprites_left;                           \
     name##suffix##_sprites_right; }                        \
switch (FEAT_TRAINS, SELF, name##suffix##_sprites_start,    \
[  set_offset_to(-2), prev_vehicle_type_id() == name])      \
{ 1: name##suffix##_sprites1;                               \
     name##suffix##_sprites2; }                             \

// не выпускать новые четвёрки без средней секции

#define  new_4x_train_start_stop(name)                                                \
switch (FEAT_TRAINS, PARENT, name##_start_stop3,                                      \
[ set_offset_to(4),                                                                   \
  prev_vehicle_type_id() == name##_m ])                                               \
{ 1: any_start_stop;                                                                  \
     return string(STR_START_STOP_NEED_2AND2_OR_MORE_ENGINE); }                       \
switch (FEAT_TRAINS, PARENT, name##_start_stop2,                                      \
[ set_offset_to(2),                                                                   \
  prev_vehicle_type_id() == name##_m ])                                               \
{ 1: name##_start_stop3;                                                              \
     return string(STR_START_STOP_NEED_2AND2_OR_MORE_ENGINE); }                       \
switch (FEAT_TRAINS, PARENT, name##_start_stop, age_in_days >= 365 * new_train_age)   \
{  1: any_start_stop;                                                                 \
      name##_start_stop2; }                                                           \

// не выпускать новые тройники без средней секции

#define  new_3x_train_start_stop(name)                                                \
switch (FEAT_TRAINS, PARENT, name##_start_stop2,                                      \
[ set_offset_to(2),                                                                   \
  prev_vehicle_type_id() == name##_m ])                                               \
{ 1: any_start_stop;                                                                  \
     return string(STR_START_STOP_NEED_2AND1_OR_MORE_ENGINE); }                       \
switch (FEAT_TRAINS, PARENT, name##_start_stop, age_in_days >= 365 * new_train_age)   \
{  1: any_start_stop;                                                                 \
      name##_start_stop2; }                                                           \

// не выпускать новые двойки с средней секцией

#define  new_2x_train_start_stop(name, namem)                                         \
switch (FEAT_TRAINS, PARENT, name##_start_stop2,                                      \
[ set_offset_to(2),                                                                   \
  prev_vehicle_type_id() != namem ])                                                  \
{ 1: any_start_stop;                                                                  \
     return string(STR_START_STOP_NEED_NO_MIDDLE_SECTION); }                          \
switch (FEAT_TRAINS, PARENT, name##_start_stop, age_in_days >= 365 * new_train_age)   \
{  1: any_start_stop;                                                                 \
      name##_start_stop2; }                                                           \

// эффекты. Искрение (симметричная секция).

#define engine_electric1_1_effect(name, left)                                         \
switch (FEAT_TRAINS, SELF, name##_left, electric_create_effect(left)) { return 1; }   \

// эффекты. Искрение (правая и левая ориентации секции).

#define engine_electric1r_1_effect(name, left, right)                                   \
switch (FEAT_TRAINS, SELF, name##_left, electric_create_effect(left)) { return 1; }     \
switch (FEAT_TRAINS, SELF, name##_right, electric_create_effect(right)) { return 1; }   \

// эффекты. Искрение (правая и левая ориентации секции).
//          Искрят по-очереди (псевдослучайно) на малой скорости оба, на большой только 2-ой

#define engine_electric1r_2_effect(name, left, left2, right, right2)                  \
switch (FEAT_TRAINS, SELF, name##_l3, electric_create_effect(left)) { return 1; }     \
switch (FEAT_TRAINS, SELF, name##_l2, electric_create_effect(left2)) { return 1; }    \
switch (FEAT_TRAINS, SELF, name##_r3, electric_create_effect(right)) { return 1; }    \
switch (FEAT_TRAINS, SELF, name##_r2, electric_create_effect(right2)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name##_l1, (animation_counter / 32) % 2)                   \
{ 0: name##_l3; name##_l2; }                                                          \
switch (FEAT_TRAINS, PARENT, name##_left, current_speed > threshold_of_speed())       \
{ 0: name##_l1; name##_l2; }                                                          \
switch (FEAT_TRAINS, SELF, name##_r1, (animation_counter / 32) % 2)                   \
{ 0: name##_r3; name##_r2; }                                                          \
switch (FEAT_TRAINS, PARENT, name##_right, current_speed > threshold_of_speed())      \
{ 0: name##_r1; name##_r2; }                                                          \

#define engine_electric1_2_effect(name, left, left2)                                 \
switch (FEAT_TRAINS, SELF, name##_l3, electric_create_effect(left)) { return 1; }    \
switch (FEAT_TRAINS, SELF, name##_l2, electric_create_effect(left2)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name##_l1, (animation_counter / 32) % 2)                  \
{ 0: name##_l3; name##_l2; }                                                         \
switch (FEAT_TRAINS, PARENT, name, current_speed > threshold_of_speed())             \
{ 0: name##_l1; name##_l2; }                                                         \

#define engine_electric1_2all_effect(name, left, left2)                              \
switch (FEAT_TRAINS, SELF, name##_l3, electric_create_effect(left)) { return 1; }    \
switch (FEAT_TRAINS, SELF, name##_l2, electric_create_effect(left2)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name##_start, (animation_counter / 32) % 2)               \
{ 0: name##_l3; name##_l2; }                                                         \

// эффекты. Искрение (правая и левая секции). Левая секция искрит только на малой скорости

#define engine_electric2_1_effect(name, left, right)                                    \
switch (FEAT_TRAINS, SELF, name##_l2, electric_create_effect(left)) { return 1; }       \
switch (FEAT_TRAINS, PARENT, name##_left, current_speed > threshold_of_speed())         \
{ 0: name##_l2; return 0; }                                                             \
switch (FEAT_TRAINS, SELF, name##_right, electric_create_effect(right)) { return 1; }   \

// эффекты. Искрение (правая и левая секции). На первой секции искрит только 2-ой пантограф,
//          на второй искрят по-очереди (псевдослучайно) на малой скорости оба, на большой только 2-ой

#define engine_electric2_2_effect(name, left, right, right2)                          \
switch (FEAT_TRAINS, SELF, name##_left, electric_create_effect(left)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name##_r3, electric_create_effect(right)) { return 1; }    \
switch (FEAT_TRAINS, SELF, name##_r2, electric_create_effect(right2)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name##_r1, (animation_counter / 32) % 2)                   \
{ 0: name##_r3; name##_r2; }                                                          \
switch (FEAT_TRAINS, PARENT, name##_right, current_speed > threshold_of_speed())      \
{ 0: name##_r1; name##_r2; }                                                          \

// эффекты. Дым (правая и левая ориентации).

#define engine_diesel_1r_effect(name, left, right, height)                                   \
switch (FEAT_TRAINS, SELF, name##_left, diesel_create_effect(left,height)) { return 1; }     \
switch (FEAT_TRAINS, SELF, name##_right, diesel_create_effect(right,height)) { return 1; }   \

// эффекты. Дым (симметрично).

#define engine_diesel_1_effect(name, left, height)                                  \
switch (FEAT_TRAINS, SELF, name, diesel_create_effect(left,height)) { return 1; }   \

// эффекты. Двойной дым симметрия по ДП (правая и левая ориентации).

#define engine_diesel_2s_effect(name, left, right, height)                                                \
switch (FEAT_TRAINS, SELF, name##_left,                                                                   \
[diesel_create_effect_dy(left, 1, height), diesel_create_effect_dy2(left, -1, height)]) { return 2; }     \
switch (FEAT_TRAINS, SELF, name##_right,                                                                  \
[diesel_create_effect_dy(right, 1, height), diesel_create_effect_dy2(right, -1, height)]) { return 2; }   \

// эффекты. Двойной дым (правая и левая ориентации).

#define engine_diesel_2_effect(name, left1, left2, right1, right2, height)                     \
switch (FEAT_TRAINS, SELF, name##_left,                                                        \
[diesel_create_effect(left1, height), diesel_create_effect2(left2, height)]) { return 2; }     \
switch (FEAT_TRAINS, SELF, name##_right,                                                       \
[diesel_create_effect(right1, height), diesel_create_effect2(right2, height)]) { return 2; }   \

// эффекты. Белый дым (симметрично). Предполагается, что дым выпускает только первая часть
#define engine_steam_1_effect(name, left, height)                                     \
switch (FEAT_TRAINS, SELF, name##2, steam_create_effect(left,height)) { return 1; }   \
switch (FEAT_TRAINS, SELF, name, position_in_articulated_veh)                         \
{ 0: name##2; return 0; }                                                             \

// тендер
#define engine_tender(name)                                                 \
switch (FEAT_TRAINS, SELF, name##_articulated_part, extra_callback_info1)   \
{ 1: return name;                                                           \
  2: return name;                                                           \
  3: return name;                                                           \
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS; }                          \

#define engine_tender_length(name, num1, num2, num3, num4)               \
switch (FEAT_TRAINS, SELF, name##_length, position_in_articulated_veh)   \
{ 0: return num1;                                                        \
  1: return num2;                                                        \
  2: return num3;                                                        \
  3: return num4;                                                        \
     return 8; }                                                         \

#define engine_tender_length_change_build_after(name, num11, num12, num13, num14, num21, num22, num23, num24, year)   \
engine_tender_length(name##_v1, num11, num12, num13, num14)                                                           \
engine_tender_length(name##_v2, num21, num22, num23, num24)                                                           \
switch (FEAT_TRAINS, SELF, name##_length, build_year >= year)                                                         \
{ 0: name##_v1_length;                                                                                                \
     name##_v2_length; }                                                                                              \

#define engine_tender_length_change_build_after2(name, num11, num12, num13, num14, num21, num22, num23, num24, year, num31, num32, num33, num34, year2)   \
engine_tender_length(name##_v1, num11, num12, num13, num14)                                                                                               \
engine_tender_length(name##_v2, num21, num22, num23, num24)                                                                                               \
engine_tender_length(name##_v3, num31, num32, num33, num34)                                                                                               \
switch (FEAT_TRAINS, SELF, name##_length, (build_year >= year) + (build_year >= year2))                                                                   \
{ 0: name##_v1_length;                                                                                                                                    \
  1: name##_v2_length;                                                                                                                                    \
     name##_v3_length; }                                                                                                                                  \

#define engine_tender_length_change_build_after3(name, num11, num12, num13, num14, num21, num22, num23, num24, year, num31, num32, num33, num34, year2, num41, num42, num43, num44, year3)   \
engine_tender_length(name##_v1, num11, num12, num13, num14)                                                                                                                                  \
engine_tender_length(name##_v2, num21, num22, num23, num24)                                                                                                                                  \
engine_tender_length(name##_v3, num31, num32, num33, num34)                                                                                                                                  \
engine_tender_length(name##_v4, num41, num42, num43, num44)                                                                                                                                  \
switch (FEAT_TRAINS, SELF, name##_length, (build_year >= year) + (build_year >= year2) + (build_year >= year3))                                                                              \
{ 0: name##_v1_length;                                                                                                                                                                       \
  1: name##_v2_length;                                                                                                                                                                       \
  2: name##_v3_length;                                                                                                                                                                       \
     name##_v4_length; }                                                                                                                                                                     \

// Если рисуем на карте и следующий в цепочке вагон скрыт, то отдаём пустышку

// пляски с 0x9C и 0x9A для паровозов, чтобы клёса крутились в зависимости от положения, а не от времени.

// Регистр 5 и 6 занимаем под ЭМВПС

// long vehicle template

// проработать удаление is_hidden_at(1). Заменить на is_hidden_at(0)

#define long_vehicle(name)                            \
switch (FEAT_TRAINS, SELF, name##_sprites_selfpos,    \
[ STORE_TEMP(                                         \
             (var[0x9F, 0, 0x07] == 3) ?              \
               var[0x9C, 0, 0x0F] & 3 :               \
             (var[0x9F, 0, 0x07] == 7) ?              \
               (3 - var[0x9C, 0, 0x0F] & 3) :         \
             (var[0x9F, 0, 0x07] > 3) ?               \
               var[0x9A, 0, 0x0F] & 3 :               \
               (3 - var[0x9A, 0, 0x0F] & 3), 3) ])    \
{  name##_sprites_start; }                            \
switch (FEAT_TRAINS, PARENT, name##_sprites_parent,   \
[ STORE_TEMP(count_veh_id(name), 0),                  \
  STORE_TEMP(current_speed, 1),                       \
  STORE_TEMP(vehicle_type_id, 4) ])                   \
{  name##_sprites_selfpos; }                          \
switch (FEAT_TRAINS, SELF, name##_sprites,            \
  is_not_build_yet() ||                               \
  (is_drawn_in_viewport() && is_hidden_at(1)))        \
{ 1: dummy_sprites;                                   \
     name##_sprites_parent; }                         \

// special vehicle template (отличия в имени вызываемого метода _sprites_start_sp)
#define long_vehicle_sp(name)                         \
switch (FEAT_TRAINS, SELF, name##_sprites_selfpos,    \
[ STORE_TEMP(                                         \
             (var[0x9F, 0, 0x07] == 3) ?              \
               var[0x9C, 0, 0x0F] & 3 :               \
             (var[0x9F, 0, 0x07] == 7) ?              \
               (3 - var[0x9C, 0, 0x0F] & 3) :         \
             (var[0x9F, 0, 0x07] > 3) ?               \
               var[0x9A, 0, 0x0F] & 3 :               \
               (3 - var[0x9A, 0, 0x0F] & 3), 3) ])    \
{  name##_sprites_start_sp;  }                        \
switch (FEAT_TRAINS, PARENT, name##_sprites_parent,   \
[ STORE_TEMP(count_veh_id(name), 0),                  \
  STORE_TEMP(current_speed, 1),                       \
  STORE_TEMP(vehicle_type_id, 4) ])                   \
{  name##_sprites_selfpos; }                          \
switch (FEAT_TRAINS, SELF, name##_sprites,            \
  is_not_build_yet() ||                               \
  (is_drawn_in_viewport() && is_hidden_at(1)))        \
{ 1: dummy_sprites;                                   \
     name##_sprites_parent; }                         \

// special vehicle template (отличия в имени вызываемого метода _direction_template)
#define long_vehicle_dir(name)                        \
switch (FEAT_TRAINS, SELF, name##_sprites_selfpos,    \
[ STORE_TEMP(                                         \
             (var[0x9F, 0, 0x07] == 3) ?              \
               var[0x9C, 0, 0x0F] & 3 :               \
             (var[0x9F, 0, 0x07] == 7) ?              \
               (3 - var[0x9C, 0, 0x0F] & 3) :         \
             (var[0x9F, 0, 0x07] > 3) ?               \
               var[0x9A, 0, 0x0F] & 3 :               \
               (3 - var[0x9A, 0, 0x0F] & 3), 3) ])    \
{  name##_direction_template;  }                      \
switch (FEAT_TRAINS, PARENT, name##_sprites_parent,   \
[ STORE_TEMP(count_veh_id(name), 0),                  \
  STORE_TEMP(current_speed, 1),                       \
  STORE_TEMP(vehicle_type_id, 4) ])                   \
{  name##_sprites_selfpos; }                          \
switch (FEAT_TRAINS, SELF, name##_sprites,            \
  is_not_build_yet() ||                               \
  (is_drawn_in_viewport() && is_hidden_at(1)))        \
{ 1: dummy_sprites;                                   \
     name##_sprites_parent; }                         \

#define long_vehicle_nocount(name)                         \
switch (FEAT_TRAINS, SELF, name##_sprites_selfpos,         \
[ STORE_TEMP(((var[0x9F, 0, 0x07] & 3) == 3) ?             \
  var[0x9C, 0, 0x0F] & 3 : var[0x9A, 0, 0x0F] & 3, 3) ])   \
{  name##_sprites_start; }                                 \
switch (FEAT_TRAINS, PARENT, name##_sprites_parent,        \
[ STORE_TEMP(current_speed, 1),                            \
  STORE_TEMP(vehicle_type_id, 4)                           \
])                                                         \
{  name##_sprites_selfpos; }                               \
switch (FEAT_TRAINS, SELF, name##_sprites,                 \
  is_not_build_yet() ||                                    \
  (is_drawn_in_viewport() && is_hidden_at(1)))             \
{ 1: dummy_sprites;                                        \
     name##_sprites_parent; }                              \

// train default cargo type template

#define models_default_cargo_template(name)                                                                                         \
if (models_default_cargo == 1) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [GOOD]; default_cargo_type: GOOD; } } }   \
if (models_default_cargo == 2) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [PASS]; default_cargo_type: PASS; } } }   \
if (models_default_cargo == 3) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [MAIL]; default_cargo_type: MAIL; } } }   \

#define models_default_cargo_template_pass(name)                                                                                          \
if (models_default_cargo == 1) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [GOOD, PASS]; default_cargo_type: GOOD; } } }   \
if (models_default_cargo == 2) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [PASS, GOOD]; default_cargo_type: PASS; } } }   \
if (models_default_cargo == 3) { item (FEAT_TRAINS, name) { property { cargo_allow_refit: [MAIL, PASS]; default_cargo_type: MAIL; } } }   \

// train default cargo type template
#define long_name_template(nname, strname)                                                     \
if (enable_long_names) { item (FEAT_TRAINS, nname) { property { name: string(strname); } } }   \

// train availability template
#define allow_steamer(name)                                                                          \
if (disable_steamer) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_diesel(name)                                                                          \
if (disable_diesel) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_acelectric(name)                                                                          \
if (disable_acelectric) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_dcelectric(name)                                                                          \
if (disable_dcelectric) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_acdcelectric(name)                                                                          \
if (disable_acdcelectric) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_dmu(name)                                                                          \
if (disable_dmu) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_acemu(name)                                                                          \
if (disable_acemu) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_dcemu(name)                                                                          \
if (disable_dcemu) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

#define allow_acdcemu(name)                                                                          \
if (disable_acdcemu) { item (FEAT_TRAINS, name) { property { climates_available: NO_CLIMATE; } } }   \

// невидимый вагон размером num для ARV Call-back
#define ap_dummy(num)                                                           \
switch (FEAT_TRAINS, SELF, articulated_part_dummy##num, extra_callback_info1)   \
{ 1: return dummy##num; return CB_RESULT_NO_MORE_ARTICULATED_PARTS; }           \

ap_dummy(1)
ap_dummy(2)
ap_dummy(3)
ap_dummy(4)
ap_dummy(5)
ap_dummy(6)
ap_dummy(7)
ap_dummy(8)

// end
