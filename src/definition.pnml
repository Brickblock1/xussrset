 /// definition

// Используем полноразмерные поезда в депо
train_width_32_px = 1;
// Вертикаль поезда в депо
traininfo_y_offset = 3;

// Период, в который поезд считается новым (гарантийным) и не допускает депошного творчества
new_train_age = 5;

// Истечение срока
retire_early_default = -8;
delta_age = 1;
// RE
#define get_retire_early(x, y) x-y-delta_age < retire_early_default ? retire_early_default+delta_age : x-y-delta_age
// модель
#define get_model_life(x, y) y >= 2050 ? VEHICLE_NEVER_EXPIRES : (x-y-delta_age < retire_early_default ? y-x+delta_age : -retire_early_default)
// вычитаем 2 года из года ввода ТС, для прицепных и немоторных вагонов
#define get_car_year(year) year - delta_age
// вычитаем 2 года из года ввода ТС, для головных вагонов и локомотивов
#define get_loc_year(year) year - delta_age

// максимальная скорость
#define get_max_speed(life, slow, normal) (age_in_days >= (life * 365 + life / 4)) ? slow : normal

// рисуем [не] на карте?
#define is_drawn_in_viewport() ((extra_callback_info1 & 0xFF) == 0)
#define is_not_drawn_in_viewport() ((extra_callback_info1 & 0xFF) != 0)
// рисуем в депо
#define is_drawn_in_depot() ((extra_callback_info1 & 0xFF) == 0x10)
// Не построен
#define is_not_build_yet() ((extra_callback_info1 & 0xFF) >= 0x20)
// Построен
#define is_build() ((extra_callback_info1 & 0xFF) < 0x20)

// ТС по [-]смещению в цепочке [не] скрыто?
#define is_hidden_at(offset) (var[0x62, 7, 1, offset] != 0)
#define is_not_hidden_at(offset) (var[0x62, 7, 1, offset] == 0)

// Для получения характеристик предыдущего ПС в цепочке
#define prev_vehicle_type_id() var[0x61, 0, 0xFFFF, 0xC6]
#define prev_vehicle_cargo_subtype() var[0x61, 0, 0xFFFF, 0xF2]
#define prev_vehicle_build_year() var[0x61, 0, 0xFFFF, 0x49]
#define prev_vehicle_randombits() var[0x61, 8, 0xFF, 0x5F]
#define prev_vehicle_cargo_load() var[0x61, 0, 0xFFFF, 0xBC] 

// для записи смещения в регистр (работа с переменной 0x61)
#define set_offset_to(offset) STORE_TEMP(offset, 0x10F)

// Для краткой записи списка климатов ПС
#define get_climates_available() bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND)

// Для выбора правильного набора спрайтов в случае флага TRAIN_FLAG_FLIP
// или CB_RESULT_REVERSED_VEHICLE
#define is_flipped() (var[0xC8, 0, 0xFF] != 0xFD)
#define is_not_flipped() (var[0xC8, 0, 0xFF] == 0xFD)

#define total_power() (var[0xF4, 0, 0xFFFFFFFF]) 
#define total_weight() (var[0x4E, 0, 0xFFFF]) 

// Порог скорости электровозов
// x км/ч * 0.2778 == value
// 50 км/ч --> 13 (13.89)
// 62 км/ч --> 17 (17.2236)
//threshold of speed
#define threshold_of_speed() 17

// обобщение свойств для категорий ПС
// #define get_steam_cost_factor() 2
// #define get_steam_running_cost_factor() 4
// #define get_diesel_cost_factor() 2
// #define get_diesel_running_cost_factor() 4
// #define get_diesel_m_running_cost_factor() 3
// #define get_electric_cost_factor() 2
// #define get_electric_running_cost_factor() 4
// #define get_electric_m_running_cost_factor() 3
// #define get_dmu_cost_factor() 2
// #define get_dmu_running_cost_factor() 4
// #define get_emu_cost_factor() 2
// #define get_emu_running_cost_factor() 4
// #define get_car_cost_factor() 2
// #define get_car_running_cost_factor() 0

// сокращение для отключения визуальных эффектов тяги и тяги вагонов
#define disable_visual_effect_and_powered() visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER)
#define disable_create_effect() 0
// визуальные эффекты для электротяги. высота единая так как едина высота провода
#define electric_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, offset, DISABLE_WAGON_POWER)
#define electric_create_effect(offset) STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, offset, 0, 13), 0x100) 
#define electric_create_effect2(offset) STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, offset, 0, 13), 0x101) 
// визуальные эффекты для дизельной тяги
#define diesel_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_DIESEL, offset, DISABLE_WAGON_POWER)
#define diesel_create_effect(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offset, 0, height), 0x100)
#define diesel_create_effect2(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offset, 0, height), 0x101)
#define diesel_create_effect_dy(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offsetx, offsety, height), 0x100)
#define diesel_create_effect_dy2(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offsetx, offsety, height), 0x101)
// визуальные эффекты для паровой тяги
#define steam_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_STEAM, offset, DISABLE_WAGON_POWER)
#define steam_create_effect(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offset, 0, height), 0x100)
#define steam_create_effect2(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offset, 0, height), 0x101)
#define steam_create_effect_dy(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offsetx, offsety, height), 0x100)
#define steam_create_effect_dy2(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offsetx, offsety, height), 0x101)

// поправка для функции мощности (power cb)
// задаваемое в свойстве отличается от возвращаемого функцией
#define get_power_in_cb(value) int (value * 0.9865)
// Получаем оштрафованную величину скорости, 15%
#define get_penalised_speed(speed) (vehicle_is_not_powered && (position_in_consist == 0)) ? 10 : speed * (100 - speed_penalty_percent) / 100 
// Флаг штрафа поезда по скорости
#define FLAG_PENALISE_SPEED 1
// обычные рельсы в зависимости от настроек
#define get_normal_track_type() enable_our_own_tracks ? RLA1 : RAIL
// рельсы для постоянного и переменного тока в зависимости от настроек
#define get_ac_track_type() enable_our_own_tracks ? ERA1 : ELRL
#define get_dc_track_type() enable_our_own_tracks ? ERD1 : ELRL
// для двусистемных
#define get_dual_track_type() enable_our_own_tracks ? ER2S : ELRL

// Штрафуем ли по скорости
#define is_penalise_speed() ((bitmask_consist_info & FLAG_PENALISE_SPEED) == FLAG_PENALISE_SPEED)

// Вычисляем ТУ по формуле (табличное_значение/масса/9.8)
#define get_tec(tec, weight) (tec/(weight)/9.8)
// ТУ для cb tractive_effort_coefficient
#define get_tec_int(tec, weight) int(tec/(weight)/9.8*256)
