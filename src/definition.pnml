 /// definition

// Используем полноразмерные поезда в депо
train_width_32_px = 1;
// Вертикаль поезда в депо
traininfo_y_offset = 3;

// Период, в который поезд считается новым (гарантийным) и не допускает депошного творчества
new_train_age = 5;

// Истечение срока
retire_early_default = -8; //minimal model life span
retire_late_default = 31; //extended reliability time span 30-8-8 = 15 years
age_erlanger = 8;
delta_age = 1;

#define WAGON_DOOR                   15
#define DOUBLE_DOOR                  24
#define WIDER_D_DOOR                 27
#define WIDERST_D_DOOR               30

#define USSREND                      1991
#define USSRSTART                    1918
#define MAIDAN                       2014
#define GREAT_CHANGE_YEAR            1972
#define LG_CHANGE_YEAR               2008
#define LDZ_CHANGE_YEAR              2003
#define PID_YEAR                     2009

// RE
#define get_retire_early(x, y) x-y-2 < retire_early_default ? retire_early_default+1+retire_late_default : x-y-1+retire_late_default
// модель
#define get_model_life(x, y) y >= 2050 ? VEHICLE_NEVER_EXPIRES : (x-y-2 < retire_early_default ? y-x+2+retire_late_default : -retire_early_default+retire_late_default)
// вычитаем delta_age из года ввода ТС, для прицепных и немоторных вагонов
#define get_car_year(year) year - delta_age
// вычитаем delta_age из года ввода ТС, для головных вагонов и локомотивов
#define get_loc_year(year) year - delta_age

// максимальная скорость
#define get_max_speed(life, slow, normal) (age_in_days >= (life * 365 + life / 4)) ? slow : normal
// рисуем [не] на карте?
#define is_drawn_in_viewport() ((extra_callback_info1 & 0xFF) == 0)
#define is_not_drawn_in_viewport() ((extra_callback_info1 & 0xFF) != 0)
// рисуем в депо
#define is_drawn_in_depot() ((extra_callback_info1 & 0xFF) == 0x10)
// Не построен
#define is_not_build_yet() ((extra_callback_info1 & 0xFF) >= 0x20)
// Построен
#define is_build() ((extra_callback_info1 & 0xFF) < 0x20)

// ТС по [-]смещению в цепочке [не] скрыто?
#define is_hidden_at(offset) (var[0x62, 7, 1, offset] != 0)
#define is_not_hidden_at(offset) (var[0x62, 7, 1, offset] == 0)

// Для получения характеристик предыдущего ПС в цепочке
#define prev_vehicle_type_id() var[0x61, 0, 0xFFFF, 0xC6]
#define prev_vehicle_cargo_subtype() var[0x61, 0, 0xFFFF, 0xF2]
#define prev_vehicle_build_year() var[0x61, 0, 0xFFFF, 0x49]
#define prev_vehicle_randombits() var[0x61, 8, 0xFF, 0x5F]
#define prev_vehicle_cargo_load() var[0x61, 0, 0xFFFF, 0xBC]

// для записи смещения в регистр (работа с переменной 0x61)
#define set_offset_to(offset) STORE_TEMP(offset, 0x10F)

// Для краткой записи списка климатов ПС
#define get_climates_available() bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND)

// Для выбора правильного набора спрайтов в случае флага TRAIN_FLAG_FLIP
// или CB_RESULT_REVERSED_VEHICLE
#define is_flipped() (var[0xC8, 0, 0xFF] != 0xFD)
#define is_not_flipped() (var[0xC8, 0, 0xFF] == 0xFD)

#define total_power() (var[0xF4, 0, 0xFFFFFFFF])
#define total_weight() (var[0x4E, 0, 0xFFFF])

// Порог скорости электровозов
// x км/ч * 0.2778 == value
// 50 км/ч --> 13 (13.89)
// 62 км/ч --> 17 (17.2236)
//threshold of speed
#define threshold_of_speed() 62 * 5 / 18

// сокращение для отключения визуальных эффектов тяги и тяги вагонов
#define disable_visual_effect_and_powered() visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER)
#define disable_create_effect() 0
// визуальные эффекты для электротяги. высота единая так как едина высота провода
#define electric_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, offset, DISABLE_WAGON_POWER)
#define electric_create_effect(offset) STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, offset, 0, 13), 0x100)
#define electric_create_effect2(offset) STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, offset, 0, 13), 0x101)
// визуальные эффекты для дизельной тяги
#define diesel_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_DIESEL, offset, DISABLE_WAGON_POWER)
#define diesel_create_effect(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offset, 0, height), 0x100)
#define diesel_create_effect2(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offset, 0, height), 0x101)
#define diesel_create_effect_dy(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offsetx, offsety, height), 0x100)
#define diesel_create_effect_dy2(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, offsetx, offsety, height), 0x101)
// визуальные эффекты для паровой тяги
#define steam_visual_effect_and_powered(offset) visual_effect_and_powered(VISUAL_EFFECT_STEAM, offset, DISABLE_WAGON_POWER)
#define steam_create_effect(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offset, 0, height), 0x100)
#define steam_create_effect2(offset, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offset, 0, height), 0x101)
#define steam_create_effect_dy(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offsetx, offsety, height), 0x100)
#define steam_create_effect_dy2(offsetx, offsety, height) STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, offsetx, offsety, height), 0x101)

// поправка для функции мощности (power cb)
// задаваемое в свойстве отличается от возвращаемого функцией
#define get_power_in_cb(value) int (value * 0.9865)
// Получаем оштрафованную величину скорости, 15%
#define get_penalised_speed(speed) (vehicle_is_not_powered && (position_in_consist == 0)) ? 10 : speed * (100 - speed_penalty_percent) / 100
// обычные рельсы в зависимости от настроек
#define get_normal_track_type()           RLA1
#define get_normal_track_type_steam()     ((disable_dmu && disable_steamer && disable_diesel) ? (((disable_acelectric && disable_acelectric) ? ((disable_dcelectric && disable_dcelectric) ? ER2S : ERD1) : ((disable_dcelectric && disable_dcelectric) ? ERA1 : ER2S))) : RLA1)
#define get_normal_track_type_diesel()    ((disable_dmu && disable_steamer && disable_diesel) ? (((disable_acelectric && disable_acelectric) ? ((disable_dcelectric && disable_dcelectric) ? ER2S : ERD1) : ((disable_dcelectric && disable_dcelectric) ? ERA1 : ER2S))) : RLA2)
#define get_normal_track_type_dmu()       ((disable_dmu && disable_steamer && disable_diesel) ? (((disable_acelectric && disable_acelectric) ? ((disable_dcelectric && disable_dcelectric) ? ER2S : ERD2) : ((disable_dcelectric && disable_dcelectric) ? ERA2 : ER2S))) : RLA3)
// рельсы для постоянного и переменного тока в зависимости от настроек
#define get_ac_track_type()               ERA1
#define get_ac_track_type_emu()           ERA2
#define get_dc_track_type()               ERD1
#define get_dc_track_type_emu()           ERD2
// для двусистемных
#define get_dual_track_type()             ((disable_acelectric && disable_acelectric) ? ((disable_dcelectric && disable_dcelectric) ? ER2S : ERD1) : ((disable_dcelectric && disable_dcelectric) ? ERA1 : ER2S))
#define get_dual_track_type_emu()         ((disable_acelectric && disable_acelectric) ? ((disable_dcelectric && disable_dcelectric) ? ER2S : ERD2) : ((disable_dcelectric && disable_dcelectric) ? ERA2 : ER2S))
// Флаг штрафа поезда по скорости
#define FLAG_PENALISE_SPEED 0
// Флаг второй головы ДРБ1
#define FLAG_DRB1_SH 1
// Флаг недопустимиого груза
#define FLAG_INADMISSIBLE_CARGO 2
// Штрафуем ли по скорости
#define is_penalise_speed() (hasbit(bitmask_consist_info, FLAG_PENALISE_SPEED))
// Проверка 2 головы ДРБ1
#define is_drb1sh() (hasbit(bitmask_consist_info, FLAG_DRB1_SH))
// Проверка недопустимого груза
#define has_inadmissible_cargo() (hasbit(bitmask_consist_info, FLAG_INADMISSIBLE_CARGO))
// Вычисляем ТУ по формуле (табличное_значение/масса/9.8)
#define get_tec(tec, weight) ((tec)/(weight)/9.8)
// ТУ для cb tractive_effort_coefficient
#define get_tec_int(tec, weight) int(256*(tec)/(weight)/9.8)

#define check_year(year) ((build_year >= year) || (date_of_last_service >= date(year,1,1)))
// вместимость по плотности  = 16 / вес единицы груза * объём в м3 * Плотность кг / м3 / 1000 (приведение к тоннам) 
#define calculate_capacity(carrying_capacity_t, volume_m3, density_kg_m3, unit_weigth) min (carrying_capacity_t * 16 / unit_weigth, 2 * volume_m3 * density_kg_m3 / unit_weigth / 125)

#define calculate_loading_speed(speed_b1910, speed_a1910, speed_a1930, speed_a1950, speed_a1990) current_year >= 1990 ? speed_a1990 : current_year >= 1950 ? speed_a1950 : current_year >= 1930 ? speed_a1930 : current_year >= 1910 ? speed_a1910 : speed_b1910

// шаблон сравнения

#define veh_in2(name, name1, name2) ((name == name1) || (name == name2))
#define veh_in3(name, name1, name2, name3) ((name == name1) || (name == name2) || (name == name3))
#define veh_in4(name, name1, name2, name3, name4) ((name == name1) || (name == name2) || (name == name3) || (name == name4))
#define veh_in5(name, name1, name2, name3, name4, name5) ((name == name1) || (name == name2) || (name == name3) || (name == name4) || (name == name5))

#define calc_eq3(name, name1, name2, name3) ((name == name1) + 2 * (name == name2) + 3 * (name == name3))

// общий шаблон свойств
#define get_all_year(year) year - delta_age

#define vehicle_dates(start, finish, life, rd, vlength, vcost)   \
climates_available: get_climates_available();                    \
introduction_date: date(get_all_year(start), 1, 1);              \
model_life: get_model_life(start, finish);                       \
retire_early: get_retire_early(start, finish);                   \
vehicle_life: life;                                              \
reliability_decay: rd;                                           \
cost_factor: vcost > 255 ? 255 : vcost;                          \
length: vlength;                                                 \

#define vehicle_no_dates(start, finish, life, rd, vlength, vcost)   \
climates_available: NO_CLIMATE;                                     \
introduction_date: date(get_all_year(start), 1, 1);                 \
model_life: get_model_life(start, finish);                          \
retire_early: get_retire_early(start, finish);                      \
vehicle_life: life;                                                 \
reliability_decay: rd;                                              \
cost_factor: vcost > 255 ? 255 : vcost;                             \
length: vlength;                                                    \

#define vehicle_steam(powerhpm, weigthton, TE)                                                  \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type_steam();                                                      \
running_cost_base: RUNNING_COST_STEAM;                                                          \
engine_class: ENGINE_CLASS_STEAM;                                                               \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_STEAM;                                       \

#define vehicle_diesel(powerhpm, weigthton, TE)                                                 \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type_diesel();                                                     \
running_cost_base: RUNNING_COST_DIESEL;                                                         \
engine_class: ENGINE_CLASS_DIESEL;                                                              \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL;                                      \

#define vehicle_acelectric(powerhpm, weigthton, TE)                                             \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_ac_track_type();                                                                \
running_cost_base: RUNNING_COST_ELECTRIC;                                                       \
engine_class: ENGINE_CLASS_ELECTRIC;                                                            \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                    \

#define vehicle_dcelectric(powerhpm, weigthton, TE)                                             \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dc_track_type();                                                                \
running_cost_base: RUNNING_COST_ELECTRIC;                                                       \
engine_class: ENGINE_CLASS_ELECTRIC;                                                            \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                    \

#define vehicle_acdcelectric(powerhpm, weigthton, TE)                                           \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dual_track_type();                                                              \
running_cost_base: RUNNING_COST_ELECTRIC;                                                       \
engine_class: ENGINE_CLASS_ELECTRIC;                                                            \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                    \

#define vehicle_dis_electric(powerhpm, weigthton, TE)                                           \
power: get_power_in_cb(powerhpm);                                                               \
weight: (weigthton) ton;                                                                        \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                        \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                 \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type_diesel();                                                     \
running_cost_base: RUNNING_COST_ELECTRIC;                                                       \
engine_class: ENGINE_CLASS_ELECTRIC;                                                            \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                    \

#define vehicle_dmu(powerhpm, weigthton, TE, capacitypass, loadspeedpass)                                             \
power: get_power_in_cb(powerhpm);                                                                                     \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                                              \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type_dmu();                                                                              \
running_cost_base: RUNNING_COST_DIESEL;                                                                               \
engine_class: ENGINE_CLASS_DIESEL;                                                                                    \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL;                                                            \

#define vehicle_dmu_c(weigthton, capacitypass, loadspeedpass)                                                         \
power: 1;                                                                                                             \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type_dmu();                                                                              \
running_cost_base: RUNNING_COST_DIESEL;                                                                               \
engine_class: ENGINE_CLASS_DIESEL;                                                                                    \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL;                                                            \

#define vehicle_acemu(powerhpm, weigthton, TE, capacitypass, loadspeedpass)                                           \
power: get_power_in_cb(powerhpm);                                                                                     \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                                              \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_ac_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_acemu_c(weigthton, capacitypass, loadspeedpass)                                                       \
power: 1;                                                                                                             \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_ac_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_acemu_empty()                                                                                         \
power: 1;                                                                                                             \
weight: 0;                                                                                                            \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: 0;                                                                                                    \
loading_speed: 0;                                                                                                     \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_ac_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_dcemu(powerhpm, weigthton, TE, capacitypass, loadspeedpass)                                           \
power: get_power_in_cb(powerhpm);                                                                                     \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                                              \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dc_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_dcemu_c(weigthton, capacitypass, loadspeedpass)                                                       \
power: 1;                                                                                                             \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dc_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_dcemu_empty()                                                                                         \
power: 1;                                                                                                             \
weight: 0;                                                                                                            \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: 0;                                                                                                    \
loading_speed: 0;                                                                                                     \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dc_track_type_emu();                                                                                  \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_acdcemu(powerhpm, weigthton, TE, capacitypass, loadspeedpass)                                         \
power: get_power_in_cb(powerhpm);                                                                                     \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: get_tec((TE), (weigthton));                                                              \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dual_track_type_emu();                                                                                \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_acdcemu_c(weigthton, capacitypass, loadspeedpass)                                                     \
power: 1;                                                                                                             \
weight: (weigthton) ton;                                                                                              \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;                                                              \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;                                                             \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dual_track_type_emu();                                                                                \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_acdcemu_empty()                                                                                       \
power: 1;                                                                                                             \
weight: 0;                                                                                                            \
tractive_effort_coefficient: 0;                                                                                       \
cargo_capacity: 0;                                                                                                    \
loading_speed: 0;                                                                                                     \
cargo_allow_refit: [PASS];                                                                                            \
default_cargo_type: PASS;                                                                                             \
ai_special_flag: AI_FLAG_PASSENGER;                                                                                   \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_dual_track_type_emu();                                                                                \
running_cost_base: RUNNING_COST_ELECTRIC;                                                                             \
engine_class: ENGINE_CLASS_ELECTRIC;                                                                                  \
effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;                                                          \

#define vehicle_wagon(weigthton, speedkmh)                                                                            \
power: get_power_in_cb(0);                                                                                            \
weight: (weigthton) ton;                                                                                              \
speed: (speedkmh) km/h;                                                                                               \
sprite_id: SPRITE_ID_NEW_TRAIN;                                                                                       \
misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_2CC, TRAIN_FLAG_MU, TRAIN_FLAG_AUTOREFIT, TRAIN_FLAG_SPRITE_STACK);   \
track_type: get_normal_track_type();                                                                                  \
running_cost_base: RUNNING_COST_ROADVEH;                                                                              \
bitmask_vehicle_info: 0;                                                                                              \
default_cargo_type: GOOD;                                                                                             \
cargo_capacity: 1;

#define vehicle_wagon_cargo(capacityunits, loadspeedunits)    \
cargo_allow_refit: [GOOD];                                    \
default_cargo_type: GOOD;                                     \
cargo_capacity: capacityunits > 255 ? 255 : capacityunits;    \
loading_speed: loadspeedunits > 255 ? 255 : loadspeedunits;   \

#define vehicle_wagon_pass(capacitypass, loadspeedpass)     \
cargo_allow_refit: [PASS];                                  \
default_cargo_type: PASS;                                   \
cargo_capacity: capacitypass > 255 ? 255 : capacitypass;    \
loading_speed: loadspeedpass > 255 ? 255 : loadspeedpass;   \

#define vehicle_cargo()           \
cargo_allow_refit: [GOOD];        \
default_cargo_type: GOOD;         \
cargo_capacity: 1;                \
ai_special_flag: AI_FLAG_CARGO;   \

#define vehicle_pass()                \
cargo_allow_refit: [PASS];            \
default_cargo_type: PASS;             \
cargo_capacity: 1;                    \
ai_special_flag: AI_FLAG_PASSENGER;   \

#define vehicle_passcargo()           \
cargo_allow_refit: [MAIL];            \
default_cargo_type: MAIL;             \
cargo_capacity: 1;                    \
ai_special_flag: AI_FLAG_PASSENGER;   \

#define vehicle_pass_and_cargo()      \
cargo_allow_refit: [MAIL, PASS];      \
default_cargo_type: MAIL;             \
cargo_capacity: 1;                    \
ai_special_flag: AI_FLAG_PASSENGER;   \

#define vehicle_cargo_and_pass()   \
cargo_allow_refit: [GOOD, PASS];   \
default_cargo_type: GOOD;          \
cargo_capacity: 1;                 \
ai_special_flag: AI_FLAG_CARGO;    \

#define vehicle_allow_tourists()               \
cargo_allow_refit: [PASS, TOUR, YETI, YETY];   \

// end
