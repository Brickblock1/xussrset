 // 2te10s

// Спрайты

#define IMAGEFILE  "src/diesel/2te10s.png"

// покупка
spriteset (_2te10s_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(455, 72)
}

// обычный: погрузка/перемещение
spriteset (_2te10s_loading_spriteset, IMAGEFILE)
{
  s10_template(4, 16, 0)
} 

spriteset (_2te10s_traveling_spriteset, IMAGEFILE)
{
  s10_template(4, 82, 0)
} 

spritegroup _2te10s_spritegroup
{
  loading: _2te10s_loading_spriteset;
  loaded: _2te10s_traveling_spriteset;
}

// развёрнутый
spriteset (_2te10s_r_spriteset, IMAGEFILE)
{
  s10_template(423, 16, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, _2te10s_get_spriteset2,
  ((last_computed_result - count_veh_id(_2te10s)) % 2)
)
{
  0: _2te10s_spritegroup;
  _2te10s_r_spriteset;
}

switch (FEAT_TRAINS, PARENT, _2te10s_get_spriteset1,
  count_veh_id(_2te10s))
{
  _2te10s_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, _2te10s_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  _2te10s_get_spriteset1;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, _2te10s_can_attach_wagon,
  0)
{
  return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, _2te10s_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

// Макс. скорость: 100 км/ч
#define MAX_SPEED 100

switch (FEAT_TRAINS, SELF, _2te10s_purchase_speed,
  MAX_SPEED)
{
  return;
}

switch (FEAT_TRAINS, SELF, _2te10s_speed,
  is_penalise_speed() ? get_penalised_speed(MAX_SPEED) : MAX_SPEED)
{
  return;
}

#undef MAX_SPEED

switch (FEAT_TRAINS, SELF, _2te10s_bitmask_vehicle_info3,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(_2te10s) - count_veh_id(_2te10u) -
    count_veh_id(_2te116) - count_veh_id(_2te116u), 0),
  (last_computed_result && (position_in_consist == 2 * LOAD_TEMP(0)) &&
    LOAD_TEMP(0) < 4)
])
{
  1: return 0;
  return FLAG_PENALISE_SPEED;
}

switch (FEAT_TRAINS, PARENT, _2te10s_bitmask_vehicle_info2,
[
  STORE_TEMP(count_veh_id(_2te10s) + count_veh_id(_2te10u) +
    count_veh_id(_2te116) + count_veh_id(_2te116u), 0),
  (vehicle_type_id == _2te10s) || (vehicle_type_id == _2te10u) ||
    (vehicle_type_id == _2te116) || (vehicle_type_id == _2te116u)
])
{
  _2te10s_bitmask_vehicle_info3;
}

switch (FEAT_TRAINS, SELF, _2te10s_bitmask_vehicle_info,
  position_in_consist == 0)
{
  1: return 0;
  _2te10s_bitmask_vehicle_info2;
}

item (FEAT_TRAINS, _2te10s) 
{
  property
  {
    name: string(STR_2TE10S_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1988, 1, 1);
    vehicle_life: 30; // срок службы
    model_life: 30; // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cost_factor: 92;
    running_cost_factor: get_diesel_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_CARGO;
    power: 2273 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    weight: 138 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: 0.18115942;
    length: 8;
    visual_effect_and_powered: diesel_visual_effect_and_powered(0);
    cargo_allow_refit: [GOOD];
    default_cargo_type: GOOD;
    cargo_capacity: 1;
  }
  graphics {
    default: _2te10s_get_spriteset;
    purchase: _2te10s_purchase_spriteset;
    articulated_part: articulated_part_dummy2;
    can_attach_wagon: _2te10s_can_attach_wagon;
    start_stop: _2te10s_start_stop;
    additional_text: return string(STR_2TE10S_PURCHASE_HINT);
    speed: _2te10s_speed;
    purchase_speed: _2te10s_purchase_speed;
    bitmask_vehicle_info: _2te10s_bitmask_vehicle_info;
    cargo_subtype_text: cargo_subtype_text_default;
    cargo_capacity: return 0;
  }
}
