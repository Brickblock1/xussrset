 // 2te10u

// Спрайты

#define IMAGEFILE  "src/diesel/2te10u-1989.png"

// покупка
spriteset (_2te10u_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(455, 72)
}

// обычный: погрузка/перемещение
spriteset (_2te10u_loading_spriteset, IMAGEFILE)
{
  s10_template(4, 16, 0)
} 

spriteset (_2te10u_traveling_spriteset, IMAGEFILE)
{
  s10_template(4, 82, 0)
} 

spritegroup _2te10u_spritegroup
{
  loading: _2te10u_loading_spriteset;
  loaded: _2te10u_traveling_spriteset;
}

// развёрнутый
spriteset (_2te10u_r_spriteset, IMAGEFILE)
{
  s10_template(423, 16, 0)
} 

// обычный: погрузка/перемещение
spriteset (_2te10u_v2_loading_spriteset, IMAGEFILE)
{
  s10_template(4, 153, 0)
} 

spriteset (_2te10u_v2_traveling_spriteset, IMAGEFILE)
{
  s10_template(4, 219, 0)
} 

spritegroup _2te10u_v2_spritegroup
{
  loading: _2te10u_v2_loading_spriteset;
  loaded: _2te10u_v2_traveling_spriteset;
}

// развёрнутый
spriteset (_2te10u_r_v2_spriteset, IMAGEFILE)
{
  s10_template(423, 153, 0)
} 

// обычный: погрузка/перемещение
spriteset (_2te10u_v3_loading_spriteset, IMAGEFILE)
{
  s10_template(4, 290, 0)
} 

spriteset (_2te10u_v3_traveling_spriteset, IMAGEFILE)
{
  s10_template(4, 356, 0)
} 

spritegroup _2te10u_v3_spritegroup
{
  loading: _2te10u_v3_loading_spriteset;
  loaded: _2te10u_v3_traveling_spriteset;
}

// развёрнутый
spriteset (_2te10u_r_v3_spriteset, IMAGEFILE)
{
  s10_template(423, 290, 0)
} 

// обычный: погрузка/перемещение
spriteset (_2te10u_v4_loading_spriteset, IMAGEFILE)
{
  s10_template(4, 427, 0)
} 

spriteset (_2te10u_v4_traveling_spriteset, IMAGEFILE)
{
  s10_template(4, 493, 0)
} 

spritegroup _2te10u_v4_spritegroup
{
  loading: _2te10u_v4_loading_spriteset;
  loaded: _2te10u_v4_traveling_spriteset;
}

// развёрнутый
spriteset (_2te10u_r_v4_spriteset, IMAGEFILE)
{
  s10_template(423, 427, 0)
} 

#undef IMAGEFILE

// расчёт ориентации секций локомотива. Первые 4 ориентируются парами, далее по номеру в составе. 

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset2l2,
  cargo_subtype)
{
  0: _2te10u_spritegroup;
  1: _2te10u_v2_spritegroup;
  2: _2te10u_v3_spritegroup;
     _2te10u_v4_spritegroup;
}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset2r,
  cargo_subtype)
{
  0: _2te10u_r_spriteset;
  1: _2te10u_r_v2_spriteset;
  2: _2te10u_r_v3_spriteset;
     _2te10u_r_v4_spriteset;
}  

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset2l,
[ set_offset_to(2),
  (prev_vehicle_type_id() == _2te10u) || (prev_vehicle_type_id() == _3te10u) || 
  (position_in_consist == 0) ])
{ 1: _2te10u_get_spriteset2l2;
     _2te10u_get_spriteset2r;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_old,
  ((LOAD_TEMP(0) - count_veh_id(_2te10u) + 1) % 2) )
{ 1: _2te10u_get_spriteset2l;
     _2te10u_get_spriteset2r;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_10,
[  set_offset_to(-10),
  ((prev_vehicle_type_id() == _2te10u) ||
   (prev_vehicle_type_id() == _3te10u)) +
  ((prev_vehicle_type_id() == _3te10u_m) * 2)])
{ 1: _2te10u_get_spriteset_old;
  2: _2te10u_get_spriteset2r;
     _2te10u_get_spriteset2l;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_8,
[  set_offset_to(-8),
  ((prev_vehicle_type_id() == _2te10u) ||
   (prev_vehicle_type_id() == _3te10u)) +
  ((prev_vehicle_type_id() == _3te10u_m) * 2)])
{ 1: _2te10u_get_spriteset_10;
  2: _2te10u_get_spriteset2l;
     _2te10u_get_spriteset2r;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_6,
[  set_offset_to(-6),
  ((prev_vehicle_type_id() == _2te10u) ||
   (prev_vehicle_type_id() == _3te10u)) +
  ((prev_vehicle_type_id() == _3te10u_m) * 2)])
{ 1: _2te10u_get_spriteset_8;
  2: _2te10u_get_spriteset2r;
     _2te10u_get_spriteset2l;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_4,
[  set_offset_to(-4),
  ((prev_vehicle_type_id() == _2te10u) ||
   (prev_vehicle_type_id() == _3te10u)) +
  ((prev_vehicle_type_id() == _3te10u_m) * 2)])
{ 1: _2te10u_get_spriteset_6;
  2: _2te10u_get_spriteset2l;
     _2te10u_get_spriteset2r;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset_2,
[  set_offset_to(-2),
  (prev_vehicle_type_id() == _2te10u) ||
  (prev_vehicle_type_id() == _3te10u)])
{ 1: _2te10u_get_spriteset_4;
     _2te10u_get_spriteset2l;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset4,
[  set_offset_to(2),
  prev_vehicle_type_id() == _3te10u_m    
])
{ 1: _2te10u_get_spriteset2l2;
     _2te10u_get_spriteset_2;}

switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset3,
[  set_offset_to(-2),
  prev_vehicle_type_id() == _3te10u_m  
])
{ 1: _2te10u_get_spriteset2r;
     _2te10u_get_spriteset4;}

switch (FEAT_TRAINS, PARENT, _2te10u_get_spriteset1,
[
  STORE_TEMP(count_veh_id(_2te10u), 0) ])
{
     _2te10u_get_spriteset3;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, _2te10u_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  _2te10u_get_spriteset1;
}

switch (FEAT_TRAINS, PARENT, _2te10u_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, _2te10u_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_V1);
  1: string(STR_REFIT_V2);
  2: string(STR_REFIT_V3);
  3: string(STR_REFIT_V4);
  return CB_RESULT_NO_TEXT;
}

// Макс. скорость: 100 км/ч
#define MAX_SPEED 100

switch (FEAT_TRAINS, SELF, _2te10u_purchase_speed,
  MAX_SPEED)
{
  return;
}

switch (FEAT_TRAINS, SELF, _2te10u_speed,
  is_penalise_speed() ? get_penalised_speed(MAX_SPEED) : MAX_SPEED)
{
  return;
}

#undef MAX_SPEED

switch (FEAT_TRAINS, SELF, _2te10u_bitmask_vehicle_info3,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(_2te10m) - count_veh_id(_2te10u) -
    count_veh_id(_2te116) - count_veh_id(_2te116u), 0),
  (last_computed_result && (position_in_consist == 2 * LOAD_TEMP(0)) &&
    LOAD_TEMP(0) < 4)
])
{
  1: return 0;
  return FLAG_PENALISE_SPEED;
}

switch (FEAT_TRAINS, PARENT, _2te10u_bitmask_vehicle_info2,
[
  STORE_TEMP(count_veh_id(_2te10m) + count_veh_id(_2te10u) +
    count_veh_id(_2te116) + count_veh_id(_2te116u), 0),
  (vehicle_type_id == _2te10m) || (vehicle_type_id == _2te10u) ||
    (vehicle_type_id == _2te116) || (vehicle_type_id == _2te116u)
])
{
  _2te10u_bitmask_vehicle_info3;
}

switch (FEAT_TRAINS, SELF, _2te10u_bitmask_vehicle_info,
  position_in_consist == 0)
{
  1: return 0;
  _2te10u_bitmask_vehicle_info2;
}

switch (FEAT_TRAINS, SELF, _2te10u_cost_factor,
  (current_year >= 1991) +
  (current_year >= 1994) +
  (current_year >= 1997))
{
  1: return 94;
  2: return 98;
  3: return 101;
  return 92;
}

item (FEAT_TRAINS, _2te10u) 
{
  property
  {
    name: string(STR_2TE10U_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1989), 1, 1);
    vehicle_life: 30; // срок службы
    model_life: get_model_life(1989,1997);
    retire_early: get_retire_early(1989,1997); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [GOOD];
    default_cargo_type: GOOD;
    cost_factor: get_diesel_cost_factor();
    running_cost_factor: get_diesel_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_CARGO;
    power: 2260 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 1;
    weight: 138 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(255.0, 138);
    length: 8;
    visual_effect_and_powered: diesel_visual_effect_and_powered(0);
  }
  graphics {
    default: _2te10u_get_spriteset;
    purchase: _2te10u_purchase_spriteset;
    articulated_part: articulated_part_dummy2;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: _2te10u_start_stop;
    additional_text: return string(STR_2TE10U_PURCHASE_HINT);
    cargo_subtype_text: _2te10u_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: _2te10u_speed;
    purchase_speed: _2te10u_purchase_speed;
    bitmask_vehicle_info: _2te10u_bitmask_vehicle_info;
    cost_factor: _2te10u_cost_factor;
  }
}
