 // dm62

#define IMAGEFILE  "src/diesel/dm62.png"
purchase_sprites(dm62, 0, 0)

diesel1r_sprites(10, dm62_v1, 32,   40)
diesel1r_sprites(10, dm62_v2, 32,  241)
diesel1r_sprites(10, dm62_v3, 32,  442)
diesel1r_sprites(10, dm62_v4, 32,  643)
diesel1r_sprites(10, dm62_v5, 32,  844)
diesel1r_sprites(10, dm62_v6, 32, 1045)
diesel1r_sprites(10, dm62_v7, 32, 1246)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, dm62_sprites_left,
  cargo_subtype)
{
  0: dm62_v1_sprites_left;
  1: dm62_v2_sprites_left;
  2: dm62_v3_sprites_left;
  3: dm62_v4_sprites_left;
  4: dm62_v5_sprites_left;
  5: dm62_v6_sprites_left;
  6: dm62_v7_sprites_left;
     align_10_sprites; 
}

switch (FEAT_TRAINS, SELF, dm62_sprites_right,
  cargo_subtype)
{
  0: dm62_v1_sprites_right;
  1: dm62_v2_sprites_right;
  2: dm62_v3_sprites_right;
  3: dm62_v4_sprites_right;
  4: dm62_v5_sprites_right;
  5: dm62_v6_sprites_right;
  6: dm62_v7_sprites_right;
     align_10_sprites; 
}
/*
engine_direction_template(dm62, ) 

switch (FEAT_TRAINS, SELF, dm62_sprites_DRB1,
  (position_in_consist != 0) +
  (cargo_subtype * 2) )
{
   0: dm62_v1_sprites_left;
   1: dm62_v1_sprites_right;
   2: dm62_v2_sprites_left;
   3: dm62_v2_sprites_right;
   4: dm62_v3_sprites_left;
   5: dm62_v3_sprites_right;
   6: dm62_v4_sprites_left;
   7: dm62_v4_sprites_right;
   8: dm62_v5_sprites_left;
   9: dm62_v5_sprites_right;
  10: dm62_v6_sprites_left;
  11: dm62_v6_sprites_right;
  12: dm62_v7_sprites_left;
  13: dm62_v7_sprites_right;
      align_10_sprites; 
}
  
switch (FEAT_TRAINS, PARENT, dm62_sprites_start_sp,
  ((num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - count_veh_id(dr1a_n) * 2 - count_veh_id(_2m62u) * 2 - count_veh_id(dm62) * 2) == 0) && 
  ((count_veh_id(dr1a_n) + count_veh_id(dr1a_c)) >= 1) )
{
  1: dm62_sprites_DRB1;
     dm62_sprites_start;
}
*/
engine_RNDany_direction_template(dm62, 5, 3) 

long_vehicle_sp(dm62)

engine_diesel_1_effect(dm62, 3, -1, 12)

engine_RNDany_effect_direction_template(dm62, 5, 3) 

// прицепить ДМ62 можно только к составу, не имеющему вагонов ДР1А или имеющему только прицепные вагоны
switch (FEAT_TRAINS, PARENT, dm62_can_attach_wagon3,
  ((count_veh_id(dr1a_c) + count_veh_id(dr1a_h) + count_veh_id(dr1a_n)) == 0) ||
  ((num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - 2) == 0) )
{
  1: return any_can_attach_wagon;
     return string(STR_CAN_ATTACH_WRONG_DRB1);
}

// прицепить ДР1А прицепной можно только к составу, состоящему из 2М62у и не более чем 9 ДР1А прицепных
switch (FEAT_TRAINS, PARENT, dm62_can_attach_wagon2,
  (count_veh_id(dr1a_c) <= 9) && ( (num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - 2) == 0) )
{
  1: return CB_RESULT_ATTACH_ALLOW;
  return string(STR_CAN_ATTACH_WRONG_DRB1);
}

// прицепить ДР1А головной немоторный можно только к составу, состоящему из 2М62у и ДР1А прицепных
switch (FEAT_TRAINS, PARENT, dm62_can_attach_wagon1,
  (num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - 2) == 0 )
{
  1: return CB_RESULT_ATTACH_ALLOW;
  return string(STR_CAN_ATTACH_WRONG_DRB1);
}

// нельзя прицеплять ничего к ДР1Б кроме частей ДР1А
switch (FEAT_TRAINS, PARENT, dm62_can_attach_wagon0,
  (count_veh_id(dr1a_c)+count_veh_id(dr1a_n) >= 1) )
{
  1: return string(STR_CAN_ATTACH_WRONG_DRB1);
     any_can_attach_wagon;
}

switch (FEAT_TRAINS, SELF, dm62_can_attach_wagon,
  vehicle_type_id)
{
  dr1a_h: string(STR_CAN_ATTACH_WRONG_DRB1);
  dr1a_n: dm62_can_attach_wagon1;
  dr1a_c: dm62_can_attach_wagon2;
  _2m62u: dm62_can_attach_wagon3;
  dm62:   dm62_can_attach_wagon3;
          dm62_can_attach_wagon0;
}

switch (FEAT_TRAINS, SELF, dm62_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_TTD_59);
  1: return string(STR_REFIT_TTD_53);
  2: return string(STR_REFIT_TTD_B4);
  3: return string(STR_REFIT_BELARUSSIAN_RAILWAY);
  4: return string(STR_REFIT_BELARUSSIAN_RAILWAY_TCH1_MINSK_SORT);
  5: return string(STR_REFIT_KALININGRAD_RAILWAY);
  6: return string(STR_REFIT_OCTOBER_RAILWAY);
     return CB_RESULT_NO_TEXT;
}

engine_speed(dm62, 100)

engine_penalise_speed(dm62, 4)

general_running_cost(dm62, 331)

// отключить пенальти для ДРБ1
switch (FEAT_TRAINS, PARENT, dm62_bitmask_vehicle_info_drb1,
  ((num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - count_veh_id(dr1a_n) * 2 - count_veh_id(_2m62u) * 2 - count_veh_id(dm62) * 2) == 0) && 
  ((count_veh_id(dr1a_n) + count_veh_id(dr1a_c)) >= 1) )
{
  1: return 0;
     dm62_bitmask_vehicle_info;
}

item (FEAT_TRAINS, dm62) {
  property {
    name: string(STR_DM62_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1994), 1, 1);
    vehicle_life: 20;
    model_life: get_model_life(1994,1997);
    retire_early: get_retire_early(1994,1997);
    reliability_decay: 1;
    cargo_allow_refit: [MAIL];
    default_cargo_type: MAIL;
    cost_factor: 34;
    sprite_id: SPRITE_ID_NEW_TRAIN; 
    speed: 100 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1545 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 1;
    weight: 116 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(196.0, 116);
    length: 8;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL;
  }
  graphics {
    default: dm62_sprites;
    purchase: dm62_purchase_sprites;
    articulated_part: articulated_part_dummy2;
    can_attach_wagon: dm62_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: return string(STR_DM62_PURCHASE_HINT);
    cargo_subtype_text: dm62_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: dm62_speed;
    purchase_speed: dm62_purchase_speed;
    running_cost_factor: dm62_running_cost_factor;
    bitmask_vehicle_info: dm62_bitmask_vehicle_info_drb1;
    create_effect: dm62_create_effect;
  }
}

if (enable_long_names) {
  item (FEAT_TRAINS, dm62) {
    property { name: string(STR_DM62_NAME_LONG); }
  }
}

