 // te10

// Спрайты

#define IMAGEFILE  "src/diesel/te10-1958.png"

// покупка
spriteset (te10_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(478, 96)
}

// обычный: погрузка/перемещение
spriteset (te10_loading_spriteset, IMAGEFILE)
{
  s11_template(4, 14, 0)
} 

spriteset (te10_traveling_spriteset, IMAGEFILE)
{
  s11_template(4, 80, 0)
} 

spritegroup te10_spritegroup
{
  loading: te10_loading_spriteset;
  loaded: te10_traveling_spriteset;
}

// развёрнутый
spriteset (te10_r_spriteset, IMAGEFILE)
{
  s11_template(423, 14, 0)
} 

// 2: покупка
spriteset (te10_v2_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(478, 96)
}

// обычный: погрузка/перемещение
spriteset (te10_v2_loading_spriteset, IMAGEFILE)
{
  s11_template(4, 151, 0)
} 

spriteset (te10_v2_traveling_spriteset, IMAGEFILE)
{
  s11_template(4, 217, 0)
} 

spritegroup te10_v2_spritegroup
{
  loading: te10_v2_loading_spriteset;
  loaded: te10_v2_traveling_spriteset;
}

// развёрнутый
spriteset (te10_r_v2_spriteset, IMAGEFILE)
{
  s11_template(423, 151, 0)
} 

#undef IMAGEFILE
#define IMAGEFILE  "src/diesel/te10-1972.png"

// 3: покупка
spriteset (te10_v3_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(478, 96)
}

// обычный: погрузка/перемещение
spriteset (te10_v3_loading_spriteset, IMAGEFILE)
{
  s11_template(4, 14, 0)
} 

spriteset (te10_v3_traveling_spriteset, IMAGEFILE)
{
  s11_template(4, 80, 0)
} 

spritegroup te10_v3_spritegroup
{
  loading: te10_v3_loading_spriteset;
  loaded: te10_v3_traveling_spriteset;
}

// развёрнутый
spriteset (te10_r_v3_spriteset, IMAGEFILE)
{
  s11_template(423, 14, 0)
} 

// 4: покупка
spriteset (te10_v4_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(478, 96)
}

// обычный: погрузка/перемещение
spriteset (te10_v4_loading_spriteset, IMAGEFILE)
{
  s11_template(4, 151, 0)
} 

spriteset (te10_v4_traveling_spriteset, IMAGEFILE)
{
  s11_template(4, 217, 0)
} 

spritegroup te10_v4_spritegroup
{
  loading: te10_v4_loading_spriteset;
  loaded: te10_v4_traveling_spriteset;
}

// развёрнутый
spriteset (te10_r_v4_spriteset, IMAGEFILE)
{
  s11_template(423, 151, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, te10_get_spriteset2,
  ((last_computed_result - count_veh_id(te10)) % 2) +
  ((current_year >= 1972) * 4) +
  cargo_subtype * 2
)
{
  0: te10_spritegroup;
  1: te10_r_spriteset;
  2: te10_v2_spritegroup;
  3: te10_r_v2_spriteset;
  4: te10_v3_spritegroup;
  5: te10_r_v3_spriteset;
  6: te10_v4_spritegroup;
  te10_r_v4_spriteset;
}

switch (FEAT_TRAINS, PARENT, te10_get_spriteset1,
  count_veh_id(te10))
{
  te10_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, te10_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  te10_get_spriteset1;
}

// покупка
switch (FEAT_TRAINS, SELF, te10_get_purchase_spriteset,
  (current_year >= 1972)
)
{
  0: te10_purchase_spriteset;
  te10_v3_purchase_spriteset;
}

switch (FEAT_TRAINS, PARENT, te10_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, te10_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_V1);
  1: string(STR_REFIT_V2);
  return CB_RESULT_NO_TEXT;
}

// Макс. скорость: 100 км/ч
#define MAX_SPEED 100

switch (FEAT_TRAINS, SELF, te10_purchase_speed,
  MAX_SPEED)
{
  return;
}

switch (FEAT_TRAINS, SELF, te10_speed,
  is_penalise_speed() ? get_penalised_speed(MAX_SPEED) : MAX_SPEED)
{
  return;
}

#undef MAX_SPEED

switch (FEAT_TRAINS, SELF, te10_bitmask_vehicle_info3,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(te10), 0),
  (last_computed_result && (position_in_consist == 2 * LOAD_TEMP(0)) &&
    LOAD_TEMP(0) < 2)
])
{
  1: return 0;
  return FLAG_PENALISE_SPEED;
}

switch (FEAT_TRAINS, PARENT, te10_bitmask_vehicle_info2,
[
  STORE_TEMP(count_veh_id(te10), 0),
  vehicle_type_id == te10
])
{
  te10_bitmask_vehicle_info3;
}

switch (FEAT_TRAINS, SELF, te10_bitmask_vehicle_info,
  position_in_consist == 0)
{
  1: return 0;
  te10_bitmask_vehicle_info2;
}

item (FEAT_TRAINS, te10) 
{
  property
  {
    name: string(STR_TE10_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1958), 1, 1);
    vehicle_life: 30; // срок службы
    model_life: get_model_life(1958,1961);
    retire_early: get_retire_early(1958,1961); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [GOOD];
    default_cargo_type: GOOD;
    cost_factor: 59;
    running_cost_factor: get_diesel_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_CARGO;
    power: 2310 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 1;
    weight: 138 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(245.0, 138);
    length: 8;
    visual_effect_and_powered: diesel_visual_effect_and_powered(0);
  }
  graphics {
    default: te10_get_spriteset;
    purchase: te10_get_purchase_spriteset;
    articulated_part: articulated_part_dummy3;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: te10_start_stop;
    additional_text: return string(STR_TE10_PURCHASE_HINT);
    cargo_subtype_text: te10_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: te10_speed;
    purchase_speed: te10_purchase_speed;
    bitmask_vehicle_info: te10_bitmask_vehicle_info;
  }
}
