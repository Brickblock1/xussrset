 // d

// Спрайты

#define IMAGEFILE  "src/dmu/d-1960-1961.png"

// покупка
purchase_sprites(d_m, 0, 0)

purchase_sprites(d_c, 0, 20)

// моторный: погрузка/перемещение
spriteset (d_m_loading_spriteset, IMAGEFILE)
{
  s15_template(4, 57, 0)
} 

spriteset (d_m_traveling_spriteset, IMAGEFILE)
{
  s15_template(458, 57, 0)
} 

spritegroup d_m_spritegroup
{
  loading: d_m_loading_spriteset;
  loaded: d_m_traveling_spriteset;
}

// развёрнутый моторный
spriteset (d_rm_spriteset, IMAGEFILE)
{
  s15_template(4, 144, 0)
} 

// прицепной
spriteset (d_c_spriteset, IMAGEFILE)
{
  s15_template(4, 231, 0)
} 

#undef IMAGEFILE

/// С метельником (cowcatcher)
#define IMAGEFILE "src/dmu/d-1962-1964.png"

// покупка
purchase_sprites(d_m_cc, 0, 0)

purchase_sprites(d_c_cc, 0, 20)

// моторный
spriteset (d_m_cc_loading_spriteset, IMAGEFILE)
{
  s15_template(4, 57, 0)
} 

spriteset (d_m_cc_traveling_spriteset, IMAGEFILE)
{
  s15_template(458, 57, 0)
} 

spritegroup d_m_cc_spritegroup
{
  loading: d_m_cc_loading_spriteset;
  loaded: d_m_cc_traveling_spriteset;
}

// развёрнутый моторный
spriteset (d_rm_cc_spriteset, IMAGEFILE)
{
  s15_template(4, 144, 0)
} 

// прицепной
spriteset (d_c_cc_spriteset, IMAGEFILE)
{
  s15_template(4, 231, 0)
} 

#undef IMAGEFILE

// Если год постройки >= 1962, используем метельник
switch (FEAT_TRAINS, SELF, d_c_sprites_2,
  build_year >= 1962)
{
  1: d_c_cc_spriteset;
     d_c_spriteset;
}

long_vehicle(d_c, )

// Определяем необходимость разворота моторного вагона по чётности его позиции
// от начала состава
// Если год постройки >= 1962, используем метельник
switch (FEAT_TRAINS, SELF, d_m_sprites2,
  ((LOAD_TEMP(0) - count_veh_id(d_m)) % 2) +
  ((build_year >= 1962) * 2) )
{
  0: d_m_spritegroup;
  1: d_rm_spriteset;
  2: d_m_cc_spritegroup;
     d_rm_cc_spriteset;
}

switch (FEAT_TRAINS, PARENT, d_m_sprites_2,
  STORE_TEMP(count_veh_id(d_m), 0))
{
  d_m_sprites2;
}

long_vehicle(d_m, )

switch (FEAT_TRAINS, PARENT, d_can_attach_wagon_length,
  count_veh_id(d_m) > 3)
{
  0: CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, d_c_can_attach_wagon_h,
  count_veh_id(d_m) % 2)
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
     return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, d_c_can_attach_wagon,
[
  set_offset_to(num_vehs_in_consist-2),
  prev_vehicle_type_id() ])
{
  d_c: return string(STR_WRONG_STRUCTURE_OF_TRAIN_3D);
  d_m: d_c_can_attach_wagon_h;
       return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, d_can_attach_wagon,
  vehicle_type_id)
{
  d_m: d_can_attach_wagon_length;
  d_c: d_c_can_attach_wagon;
       return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

// Кол-во моторных чётное?
switch (FEAT_TRAINS, PARENT, d_m_start_stop,
  count_veh_id(d_m) % 2)
{
  0: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

switch (FEAT_TRAINS, SELF, d_m_visual_effect_and_powered1,
  (LOAD_TEMP(0) - count_veh_id(d_m)) % 2)
{
  0: return diesel_visual_effect_and_powered(-2);
     return diesel_visual_effect_and_powered(7);
}

switch (FEAT_TRAINS, PARENT, d_m_visual_effect_and_powered0,
  STORE_TEMP(count_veh_id(d_m), 0))
{
  d_m_visual_effect_and_powered1;
}

// Визуализируем эффекты тяги только если локомотив - d_m 
switch (FEAT_TRAINS, PARENT, d_m_visual_effect_and_powered,
  (vehicle_type_id == d_m) 
  )
{
  1: d_m_visual_effect_and_powered0; 
     return disable_visual_effect_and_powered();
} 

// Допускается эксплуатация с пассажирами только если голова - d_m 
switch (FEAT_TRAINS, PARENT, d_m_cargo_capacity,
  (vehicle_type_id == d_m)
)
{
  1: return 77;
     return 0;
}

switch (FEAT_TRAINS, PARENT, d_c_cargo_capacity,
  vehicle_type_id == d_m)
{
  1: return 128;
     return 0;
}

switch (FEAT_TRAINS, SELF, d_m_purchase,
  build_year >= 1962)
{
  1: d_m_cc_purchase_sprites;
     d_m_purchase_sprites;
}

switch (FEAT_TRAINS, SELF, d_c_purchase,
  build_year >= 1962)
{
  1: d_c_cc_purchase_sprites;
     d_c_purchase_sprites;
}

// Даём тягу, только если локомотив - d_m 
switch (FEAT_TRAINS, PARENT, d_m_power,
  vehicle_type_id == d_m)
{
  1: return get_power_in_cb(500); 
     return 0;
} 


item (FEAT_TRAINS, d_m) 
{
  property
  {
    name: string(STR_D_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1960), 1, 1);
    vehicle_life: 25; // срок службы
    model_life: get_model_life(1960,1964);
    retire_early: get_retire_early(1960,1964); // VEHICLE_NEVER_EXPIRES;
    retire_early: 22;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12; 
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 121 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 500 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 77;
    weight: 66 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(70.0, 66.5);
    length: 8;
  }
  graphics {
    default: d_m_sprites;
    purchase: d_m_purchase;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: d_can_attach_wagon;
    start_stop: d_m_start_stop;
    visual_effect_and_powered: d_m_visual_effect_and_powered;
    speed: speed_after20_120to100;
    purchase_speed: return 120;
    additional_text: return string(STR_D_M_PURCHASE_HINT, string(STR_SECTIONS_DMU_2_3));
    power: d_m_power;
    cargo_capacity: d_m_cargo_capacity;
  }
}

item (FEAT_TRAINS, d_c) 
{
  property
  {
    name: string(STR_D_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1960), 1, 1);
    vehicle_life: 25;
    model_life: get_model_life(1960,1964);
    retire_early: get_retire_early(1960,1964); // VEHICLE_NEVER_EXPIRES;
    retire_early: 22;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 128;
    weight: 37 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: d_c_sprites;
    purchase: d_c_purchase;
    articulated_part: articulated_part_dummy7;
    speed: speed_after20_120to100;
    purchase_speed: return 120;
    power: return 0;
    can_attach_wagon: d_can_attach_wagon;
    start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
    additional_text: return string(STR_D_M_PURCHASE_HINT, string(STR_SECTIONS_DMU_2_3));
    cargo_capacity: d_c_cargo_capacity;
  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, d_m)
  {
    property
    { name: string(STR_D_M_NAME_LONG); }
  }

  item (FEAT_TRAINS, d_c)
  {
    property
    { name: string(STR_D_C_NAME_LONG); }
  }
}

