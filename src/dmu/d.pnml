 // d

// Спрайты

#define IMAGEFILE  "src/dmu/d-1960-1961.png"

// покупка
spriteset (d_m_purchase_spriteset, IMAGEFILE)
{
  s15_purchase_template(4, 57, -14)
}

spriteset (d_c_purchase_spriteset, IMAGEFILE)
{
  s15_purchase_template(4, 231, -14)
}

// моторный: погрузка/перемещение
spriteset (d_m_loading_spriteset, IMAGEFILE)
{
  s15_template(4, 57, 0)
} 

spriteset (d_m_traveling_spriteset, IMAGEFILE)
{
  s15_template(458, 57, 0)
} 

spritegroup d_m_spritegroup
{
  loading: d_m_loading_spriteset;
  loaded: d_m_traveling_spriteset;
}


// развёрнутый моторный
spriteset (d_rm_spriteset, IMAGEFILE)
{
  s15_template(4, 144, 0)
} 

// прицепной
spriteset (d_c_spriteset, IMAGEFILE)
{
  s15_template(4, 231, 0)
} 

#undef IMAGEFILE

/// С метельником (cowcatcher)
#define IMAGEFILE "src/dmu/d-1962-1964.png"

// покупка
spriteset (d_m_cc_purchase_spriteset, IMAGEFILE)
{
  s15_purchase_template(4, 57, -14)
}

spriteset (d_c_cc_purchase_spriteset, IMAGEFILE)
{
  s15_purchase_template(4, 231, -14)
}

// моторный
spriteset (d_m_cc_loading_spriteset, IMAGEFILE)
{
  s15_template(4, 57, 0)
} 

spriteset (d_m_cc_traveling_spriteset, IMAGEFILE)
{
  s15_template(458, 57, 0)
} 

spritegroup d_m_cc_spritegroup
{
  loading: d_m_cc_loading_spriteset;
  loaded: d_m_cc_traveling_spriteset;
}

// развёрнутый моторный
spriteset (d_rm_cc_spriteset, IMAGEFILE)
{
  s15_template(4, 144, 0)
} 

// прицепной
spriteset (d_c_cc_spriteset, IMAGEFILE)
{
  s15_template(4, 231, 0)
} 

#undef IMAGEFILE

// Если год постройки >= 1962, используем метельник
switch (FEAT_TRAINS, SELF, d_c_get_spriteset1,
  build_year >= 1962)
{
  1: d_c_cc_spriteset;
  d_c_spriteset;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, d_c_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  d_c_get_spriteset1;
}

// Определяем необходимость разворота моторного вагона по чётности его позиции
// от начала состава
// Если год постройки >= 1962, используем метельник
switch (FEAT_TRAINS, SELF, d_m_get_spriteset2,
  ((last_computed_result - count_veh_id(d_m)) % 2) +
  ((build_year >= 1962) * 2)
)
{
  0: d_m_spritegroup;
  1: d_rm_spriteset;

  2: d_m_cc_spritegroup;
  d_rm_cc_spriteset;
}

switch (FEAT_TRAINS, PARENT, d_m_get_spriteset1,
  count_veh_id(d_m))
{
  d_m_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, d_m_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  d_m_get_spriteset1;
}

switch (FEAT_TRAINS, PARENT, d_m_can_attach_wagon4,
[
  STORE_TEMP(num_vehs_in_consist-2, 0x10F),
  var[0x61, 0, 0xFFFF, 0xC6]
])
{
  d_m: return CB_RESULT_ATTACH_ALLOW;
  d_c: return CB_RESULT_ATTACH_DISALLOW;
  return CB_RESULT_ATTACH_DISALLOW;
}

// Если в составе один локомотив, можно присоединить
switch (FEAT_TRAINS, PARENT, d_m_can_attach_wagon3,
  num_vehs_in_consist)
{
  2: return CB_RESULT_ATTACH_ALLOW;
  d_m_can_attach_wagon4;
}

// Нельзя присоединить к чётному моторному, только к нечётному
switch (FEAT_TRAINS, PARENT, d_m_can_attach_wagon1,
  count_veh_id(d_m) % 2)
{
  1: d_m_can_attach_wagon3;
  return CB_RESULT_ATTACH_DISALLOW;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, d_m_can_attach_wagon,
  vehicle_type_id)
{
  d_m: return CB_RESULT_ATTACH_ALLOW;
  d_c: d_m_can_attach_wagon1;
  return CB_RESULT_ATTACH_DISALLOW;
}

// Кол-во моторных чётное?
switch (FEAT_TRAINS, PARENT, d_m_start_stop,
  count_veh_id(d_m) % 2)
{
  0: return CB_RESULT_NO_TEXT;
  return string(STR_CANNOT_START);
}

switch (FEAT_TRAINS, SELF, d_m_visual_effect_and_powered1,
  (last_computed_result - count_veh_id(d_m)) % 2)
{
  0: return diesel_visual_effect_and_powered(-2);
  return diesel_visual_effect_and_powered(7);
}

switch (FEAT_TRAINS, PARENT, d_m_visual_effect_and_powered,
  count_veh_id(d_m))
{
  d_m_visual_effect_and_powered1;
}

switch (FEAT_TRAINS, SELF, d_m_purchase,
  build_year >= 1962)
{
  1: d_m_cc_purchase_spriteset;
  d_m_purchase_spriteset;
}

switch (FEAT_TRAINS, SELF, d_c_purchase,
  build_year >= 1962)
{
  1: d_c_cc_purchase_spriteset;
  d_c_purchase_spriteset;
}

item (FEAT_TRAINS, d_m) 
{
  property
  {
    name: string(STR_D_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1960, 1, 1);
    vehicle_life: 25; // срок службы
    model_life: 8 + 25; // VEHICLE_NEVER_EXPIRES;
    retire_early: 22;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    loading_speed: 12; // скорость погрузки/выгрузки, пассажиров
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 121 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: RAIL;
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 500 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 77;
    weight: 66 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: 0.11;
    length: 8;
  }
  graphics {
    default: d_m_get_spriteset;
    purchase: d_m_purchase;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: d_m_can_attach_wagon;
    start_stop: d_m_start_stop;
    visual_effect_and_powered: d_m_visual_effect_and_powered;
    speed: speed_after20_120to100;
    purchase_speed: purchase_speed_120;
    additional_text: return string(STR_D_M_PURCHASE_HINT);
  }
}

item (FEAT_TRAINS, d_c) 
{
  property
  {
    name: string(STR_D_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1960), 1, 1);
    vehicle_life: 25;
    model_life: 8 + 25; // VEHICLE_NEVER_EXPIRES;
    retire_early: 22;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    loading_speed: 12;
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: RAIL;
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 0 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 128;
    weight: 37 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: d_c_get_spriteset;
    purchase: d_c_purchase;
    articulated_part: articulated_part_dummy7;
  }
}
