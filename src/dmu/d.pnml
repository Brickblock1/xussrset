 // d
// 203 (CBh) 204 (CCh)

#define IMAGEFILE  "src/dmu/d.png"
purchase_sprites(d_v1_h, 0, 0)
purchase_sprites(d_v1_c, 120, 0)

MU_4r_0_0_sprites(15, d_v1, 32, 40)
MU_0_0_2_sprites(15,  d_v1, 32, 40)
#undef IMAGEFILE
// С метельником (cowcatcher)
#define IMAGEFILE  "src/dmu/d-s1962.png"
purchase_sprites(d_v1u_h, 0, 0)
purchase_sprites(d_v1u_c, 120, 0)

MU_4r_0_0_sprites(15, d_v1u, 32, 40)
MU_0_0_2_sprites(15,  d_v1u, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, d_h_purchase_sprites,
  build_year >= 1962)
{
  1: d_v1u_h_purchase_sprites;
     d_v1_h_purchase_sprites;
}

switch (FEAT_TRAINS, SELF, d_c_purchase_sprites,
  build_year >= 1962)
{
  1: d_v1u_c_purchase_sprites;
     d_v1_c_purchase_sprites;
}

switch (FEAT_TRAINS, SELF, d_h_sprites_left,
  ((LOAD_TEMP(4) == d_h) *
  (1 + (position_in_consist == 0)) * 100) +
  (build_year >= 1962))
{
    0: d_v1_h_notpowered_sprites_left;
    1: d_v1u_h_notpowered_sprites_left;
  100: d_v1_h_notpowered_normal_sprites_left;
  101: d_v1u_h_notpowered_normal_sprites_left;
  200: d_v1_h_sprites_left;
  201: d_v1u_h_sprites_left;
       align_15_sprites;
}

switch (FEAT_TRAINS, SELF, d_h_sprites_right,
  ((LOAD_TEMP(4) == d_h) *
  (1 + (position_in_consist_from_end == 1)) * 100) +
  (build_year >= 1962))
{
    0: d_v1_h_notpowered_sprites_right;
    1: d_v1u_h_notpowered_sprites_right;
  100: d_v1_h_notpowered_normal_sprites_right;
  101: d_v1u_h_notpowered_normal_sprites_right;
  200: d_v1_h_sprites_right;
  201: d_v1u_h_sprites_right;
       align_15_sprites;
}

engine_direction_template2m(d_h, d_c, )

long_vehicle(d_h)

switch (FEAT_TRAINS, SELF, d_c_sprites_left,
  build_year >= 1962)
{
  1: d_v1u_c_sprites_left;
     d_v1_c_sprites_left;
}

switch (FEAT_TRAINS, SELF, d_c_sprites_right,
  build_year >= 1962)
{
  1: d_v1u_c_sprites_right;
     d_v1_c_sprites_right;
}

random_switch (FEAT_TRAINS, SELF, d_c_sprites_start,
  bitmask(TRIGGER_VEHICLE_SERVICE))
{
  1: d_c_sprites_left;
  1: d_c_sprites_right;
}

long_vehicle_RND(d_c, d_c_sprites_start)

switch (FEAT_TRAINS, PARENT, d_can_attach_wagon_length,
  count_veh_id(d_h) > 3)
{
  0: CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, d_c_can_attach_wagon_h,
  count_veh_id(d_h) % 2)
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
     return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, d_c_can_attach_wagon,
[
  set_offset_to(num_vehs_in_consist-2),
  prev_vehicle_type_id() ])
{
  d_c: return string(STR_WRONG_STRUCTURE_OF_TRAIN_3D);
  d_h: d_c_can_attach_wagon_h;
       return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, d_can_attach_wagon,
  vehicle_type_id)
{
  d_h: d_can_attach_wagon_length;
  d_c: d_c_can_attach_wagon;
       return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, d_h_start_stop,
  count_veh_id(d_h) % 2)
{
  0: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

engine_diesel_1r_effect(d_h, -2, 7, 12)

switch (FEAT_TRAINS, SELF, d_h_create_effect1,
  (LOAD_TEMP(0) - count_veh_id(d_h)) % 2)
{
  0: d_h_create_effect_sprites_left;
     d_h_create_effect_sprites_right;
}

switch (FEAT_TRAINS, PARENT, d_h_create_effect0,
  STORE_TEMP(count_veh_id(d_h), 0))
{
  d_h_create_effect1;
}

// Визуализируем эффекты тяги только если локомотив - d_h
switch (FEAT_TRAINS, PARENT, d_h_create_effect,
  vehicle_type_id == d_h)
{
  1: d_h_create_effect0;
     return disable_create_effect();
}

// Допускается эксплуатация с пассажирами только если голова - d_h
switch (FEAT_TRAINS, PARENT, d_h_cargo_capacity,
  (vehicle_type_id == d_h)
)
{
  1: return 77;
     return 0;
}

switch (FEAT_TRAINS, PARENT, d_c_cargo_capacity,
  vehicle_type_id == d_h)
{
  1: return 128;
     return 0;
}

// Даём тягу, только если локомотив - d_h
switch (FEAT_TRAINS, PARENT, d_h_power,
  vehicle_type_id == d_h)
{
  1: return get_power_in_cb(500);
     return 0;
}

general_running_cost(d_h_v1, 134)

switch (FEAT_TRAINS, PARENT, d_h_running_cost_factor,
  vehicle_type_id == d_h)
{
  1: d_h_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

wagon_running_cost(d_c_v1, 35)

switch (FEAT_TRAINS, PARENT, d_c_running_cost_factor,
  vehicle_type_id == d_h)
{
  1: d_c_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

item (FEAT_TRAINS, d_h, 203) {
  property {
    name: string(STR_NAME_D);
    vehicle_dates(1960, 1964, 25, 10, 8, 18)
    vehicle_dmu(500, 65.5, 44.3, 77, 48)
  }
  graphics {
    default: d_h_sprites;
    purchase: d_h_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: d_h_running_cost_factor;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: d_can_attach_wagon;
    start_stop: d_h_start_stop;
    create_effect: d_h_create_effect;
    speed: speed_after25_120to100;
    purchase_speed: return 120;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_2TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_DMU_H),
                                   string(STR_SECTIONS_DMU_2_3_M2),
                                   string(STR_PURCHASE_HINT_FROMTO, 1960, 1964),
                                   string(STR_PURCHASE_HINT_FACTORY_MAVAG));
    power: d_h_power;
    cargo_capacity: d_h_cargo_capacity;
    colour_mapping: any_cc_colour;
  }
}

item (FEAT_TRAINS, d_c, 204) {
  property {
    name: string(STR_NAME_D);
    vehicle_dates(1960, 1964, 25, 10, 8, 5)
    vehicle_dmu_c(36.5, 128, 48)
  }
  graphics {
    default: d_c_sprites;
    purchase: d_c_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: d_c_running_cost_factor;
    articulated_part: articulated_part_dummy7;
    speed: speed_after25_120to100;
    purchase_speed: return 120;
    power: return 0;
    can_attach_wagon: d_can_attach_wagon;
    start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_DMU_C),
                                   string(STR_SECTIONS_DMU_2_3_M2),
                                   string(STR_PURCHASE_HINT_FROMTO, 1960, 1964),
                                   string(STR_PURCHASE_HINT_FACTORY_MAVAG));
    cargo_capacity: d_c_cargo_capacity;
    colour_mapping: any_cc_colour;
    cargo_subtype_text: return string(STR_REFIT_FACTORY);
  }
}

long_name_template(d_h, STR_LONGNAME_D_H)
long_name_template(d_c, STR_LONGNAME_D_C)
allow_dmu(d_h)
allow_dmu(d_c)
