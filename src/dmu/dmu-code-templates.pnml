  /// code definition

// --- ограничение скорости по окончанию установленного срока службы ---
// ограничиваем скорость через 25 лет работы 120 --> 110
switch (FEAT_TRAINS, SELF, speed_after25_120to110,
  age_in_days >= (25*365+5))
{
  1: return 110;
  return 120;
}
// ограничиваем скорость через 25 лет работы 120 --> 100
switch (FEAT_TRAINS, SELF, speed_after25_120to100,
  age_in_days >= (25*365+5))
{
  1: return 100;
  return 120;
}

// прицепной моторный постоянного тока, эксплуатация не под током
#define DEMU_motor_direction_template_DC(name, vehid)                                     \
switch (FEAT_TRAINS, SELF, name##_direction_left_D,                                       \
  LOAD_TEMP(4) == vehid)                                                                  \
{ 1: name##_mu_notpowered_normal_sprites_left;                                            \
     name##_mu_notpowered_sprites_left; }                                                 \
switch (FEAT_TRAINS, SELF, name##_direction_right_D,                                      \
  LOAD_TEMP(4) == vehid)                                                                  \
{ 1: name##_mu_notpowered_normal_sprites_right;                                           \
     name##_mu_notpowered_sprites_right; }                                                \
switch (FEAT_TRAINS, SELF, name##_direction_left_DC,                                      \
  LOAD_TEMP(4) == vehid)                                                                  \
{ 0: name##_mu_notpowered_sprites_left;                                                   \
     name##_mu_sprites_left; }                                                            \
switch (FEAT_TRAINS, SELF, name##_direction_right_DC,                                     \
  LOAD_TEMP(4) == vehid)                                                                  \
{ 0: name##_mu_notpowered_sprites_right;                                                  \
     name##_mu_sprites_right; }                                                           \
is_ER3DC_ds(name##_direction_left, name##_direction_left_DC, name##_direction_left_D)     \
is_ER3DC_ds(name##_direction_right, name##_direction_right_DC, name##_direction_right_D)  \

// прицепной
#define MU_car_direction_template(name)                            \
switch (FEAT_TRAINS, SELF, name##_sprites_start, random_bits & 1)  \
{ 1: name##_mu_sprites_left;                                       \
     name##_mu_sprites_right; }                                    \

// Простой Шаблон расчёта ориентации МВПС
#define MU_direction_calculation_template_s(name, vehid, suffix)  \
switch (FEAT_TRAINS, SELF, name##suffix##_direction_template,     \
[  set_offset_to(-2),                                             \
   prev_vehicle_type_id() == vehid])                              \
{ 1: name##suffix##_direction_left;                               \
     name##suffix##_direction_right; }                            \

// автомотрисы
#define railcar_RND_nomid_direction_template(name, vehid, p1, p2)                            \
random_switch (FEAT_TRAINS, SELF, name##_0_sprites_start, bitmask(TRIGGER_VEHICLE_SERVICE))  \
{ 1: name##_notpowered_sprites_left;                                                         \
  1: name##_notpowered_sprites_right; }                                                      \
random_switch (FEAT_TRAINS, SELF, name##_1_sprites_start, bitmask(TRIGGER_VEHICLE_SERVICE))  \
{ 1: name##_sprites_3left;                                                                   \
  1: name##_sprites_3right; }                                                                \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left, bitmask(TRIGGER_VEHICLE_SERVICE))     \
{ p1: name##_sprites_2left;                                                                  \
  p2: name##_sprites_1left; }                                                                \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right, bitmask(TRIGGER_VEHICLE_SERVICE))    \
{ p1: name##_sprites_2right;                                                                 \
  p2: name##_sprites_1right; }                                                               \
switch (FEAT_TRAINS, SELF, name##_2b_sprites_start, position_in_consist_from_end)            \
{ 1: name##_sprites_right;                                                                   \
     name##_0_sprites_start; }                                                               \
switch (FEAT_TRAINS, SELF, name##_2_sprites_start, position_in_consist)                      \
{ 0: name##_sprites_left;                                                                    \
     name##_2b_sprites_start; }                                                              \
switch (FEAT_TRAINS, PARENT, name##_sprites_start,                                           \
  (vehicle_type_id == vehid) * (1 + (num_vehs_in_consist > 2)))                              \
{ 1: name##_1_sprites_start;                                                                 \
  2: name##_2_sprites_start;                                                                 \
     name##_0_sprites_start; }                                                               \

#define railcar_RND_mideq_direction_template(name, vehid, p1, p2)                            \
random_switch (FEAT_TRAINS, SELF, name##_0_sprites_start, bitmask(TRIGGER_VEHICLE_SERVICE))  \
{ 1: name##_notpowered_sprites_left;                                                         \
  1: name##_notpowered_sprites_right; }                                                      \
random_switch (FEAT_TRAINS, SELF, name##_1_sprites_start, bitmask(TRIGGER_VEHICLE_SERVICE))  \
{ 1: name##_sprites_3left;                                                                   \
  1: name##_sprites_3right; }                                                                \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left, bitmask(TRIGGER_VEHICLE_SERVICE))     \
{ p1: name##_sprites_2left;                                                                  \
  p2: name##_sprites_1left; }                                                                \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right, bitmask(TRIGGER_VEHICLE_SERVICE))    \
{ p1: name##_sprites_2right;                                                                 \
  p2: name##_sprites_1right; }                                                               \
random_switch (FEAT_TRAINS, SELF, name##_sprites_middle, bitmask(TRIGGER_VEHICLE_SERVICE))   \
{ 1: name##_notpowered_normal_sprites_left;                                                  \
  1: name##_notpowered_normal_sprites_right; }                                               \
switch (FEAT_TRAINS, SELF, name##_2b_sprites_start, position_in_consist_from_end)            \
{ 1: name##_sprites_right;                                                                   \
     name##_sprites_middle; }                                                                \
switch (FEAT_TRAINS, SELF, name##_2_sprites_start, position_in_consist)                      \
{ 0: name##_sprites_left;                                                                    \
     name##_2b_sprites_start; }                                                              \
switch (FEAT_TRAINS, PARENT, name##_sprites_start,                                           \
  (vehicle_type_id == vehid) * (1 + (num_vehs_in_consist > 2)))                              \
{ 1: name##_1_sprites_start;                                                                 \
  2: name##_2_sprites_start;                                                                 \
     name##_0_sprites_start; }                                                               \

#define railcar_RND_mideq_effect_direction_template(name, vehid, p1, p2)          \
switch (FEAT_TRAINS, SELF, name##_create_effect1, random_bits % (p1 + p2))        \
{ 0: name##_create_effect_sprites_right;                                          \
     name##_create_effect_sprites_left; }                                         \
switch (FEAT_TRAINS, SELF, name##_create_effect2, random_bits % (p1 + p2))        \
{ 0: name##_create_effect_sprites_left;                                           \
     name##_create_effect_sprites_right; }                                        \
switch (FEAT_TRAINS, SELF, name##_create_effect3, random_bits % 2)                \
{ 0: name##_create_effect_sprites_left;                                           \
     name##_create_effect_sprites_right; }                                        \
switch (FEAT_TRAINS, SELF, name##_create_effect00, position_in_consist_from_end)  \
{ 1: name##_create_effect2;                                                       \
     name##_create_effect3; }                                                     \
switch (FEAT_TRAINS, SELF, name##_create_effect0, position_in_consist)            \
{ 0: name##_create_effect1;                                                       \
     name##_create_effect00; }                                                    \
switch (FEAT_TRAINS, PARENT, name##_create_effect,                                \
  (vehicle_type_id == vehid) * (1 + (num_vehs_in_consist > 2)))                   \
{ 1: name##_create_effect3;                                                       \
  2: name##_create_effect0;                                                       \
     return disable_create_effect(); }                                            \

#define MU_attach_wagon_icon_template_row2(name, nextvars)  \
switch (FEAT_TRAINS, SELF, name##_prev,                     \
[ set_offset_to(-2),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: type##nextvars##_add_mandatory;                        \
     type##nextvars##_car_add_mandatory; }                  \

#define MU_attach_wagon_icon_template_row3(name, nextvars)  \
switch (FEAT_TRAINS, SELF, name##_prev2,                    \
[ set_offset_to(-4),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: type##nextvars##_add_mandatory;                        \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev,                     \
[ set_offset_to(-2),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev2;                                          \
     type##nextvars##_car_add_mandatory; }                  \

#define MU_attach_wagon_icon_template_row4(name, nextvars)  \
switch (FEAT_TRAINS, SELF, name##_prev3,                    \
[ set_offset_to(-6),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: type##nextvars##_add_mandatory;                        \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev2,                    \
[ set_offset_to(-4),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev3;                                          \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev,                     \
[ set_offset_to(-2),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev2;                                          \
     type##nextvars##_car_add_mandatory; }                  \

#define MU_attach_wagon_icon_template_row5(name, nextvars)  \
switch (FEAT_TRAINS, SELF, name##_prev4,                    \
[ set_offset_to(-8),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: type##nextvars##_add_mandatory;                        \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev3,                    \
[ set_offset_to(-6),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev4;                                          \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev2,                    \
[ set_offset_to(-4),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev3;                                          \
     type##nextvars##_car_add_mandatory; }                  \
switch (FEAT_TRAINS, SELF, name##_prev,                     \
[ set_offset_to(-2),                                        \
  prev_vehicle_type_id() == name])                          \
{ 1: name##_prev2;                                          \
     type##nextvars##_car_add_mandatory; }                  \

// использовать разные варианты иконок в зависимости от предыдущей головы
#define MU_attach_wagon_icon_template_row5_is_after(name, vehid, nextvars_is, nextvars_isnot)  \
switch (FEAT_TRAINS, SELF, name##_prev5,                                                       \
[ set_offset_to(-10), prev_vehicle_type_id()])                                                 \
{ vehid: type##nextvars_is##_add_mandatory;                                                    \
         type##nextvars_isnot##_add_mandatory; }                                               \
switch (FEAT_TRAINS, SELF, name##_prev4,                                                       \
[ set_offset_to(-8), prev_vehicle_type_id() ])                                                 \
{  name: name##_prev5;                                                                         \
  vehid: type##nextvars_is##_car_add_mandatory;                                                \
         type##nextvars_isnot##_car_add_mandatory; }                                           \
switch (FEAT_TRAINS, SELF, name##_prev3,                                                       \
[ set_offset_to(-6), prev_vehicle_type_id() ])                                                 \
{  name: name##_prev4;                                                                         \
  vehid: type##nextvars_is##_car_add_mandatory;                                                \
         type##nextvars_isnot##_car_add_mandatory; }                                           \
switch (FEAT_TRAINS, SELF, name##_prev2,                                                       \
[ set_offset_to(-4), prev_vehicle_type_id() ])                                                 \
{  name: name##_prev3;                                                                         \
  vehid: type##nextvars_is##_car_add_mandatory;                                                \
         type##nextvars_isnot##_car_add_mandatory; }                                           \
switch (FEAT_TRAINS, SELF, name##_prev,                                                        \
[ set_offset_to(-2), prev_vehicle_type_id() ])                                                 \
{  name: name##_prev2;                                                                         \
  vehid: type##nextvars_is##_car_add_mandatory;                                                \
         type##nextvars_isnot##_car_add_mandatory; }                                           \

// end
