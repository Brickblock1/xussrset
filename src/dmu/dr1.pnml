 // dr1

// Спрайты

#define IMAGEFILE  "src/dmu/dr1.png"

// Вариант 0 (1963-66, Балтика)
// покупка
purchase_sprites(dr1_m, 0, 0)

purchase_sprites(dr1_c, 100, 0)

// головной: погрузка/перемещение
spriteset (dr1_m_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 35, 0)
} 

spriteset (dr1_m_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 35, 0)
} 

spritegroup dr1_m_spritegroup
{
  loading: dr1_m_loading_spriteset;
  loaded: dr1_m_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1_rm_spriteset, IMAGEFILE)
{
  s15_template(38, 104, 0)
} 

// прицепной
spriteset (dr1_c_spriteset, IMAGEFILE)
{
  s15_template(38, 173, 0)
} 

// Вариант 1 (1966-69), Дырка
// покупка
purchase_sprites(dr1_m_2, 200, 0)

purchase_sprites(dr1_c_2, 300, 0)

// головной: погрузка/перемещение
spriteset (dr1_m_2_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 262, 0)
} 

spriteset (dr1_m_2_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 262, 0)
} 

spritegroup dr1_m_2_spritegroup
{
  loading: dr1_m_2_loading_spriteset;
  loaded: dr1_m_2_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1_rm_2_spriteset, IMAGEFILE)
{
  s15_template(38, 331, 0)
} 

// прицепной
spriteset (dr1_c_2_spriteset, IMAGEFILE)
{
  s15_template(38, 400, 0)
} 

#undef IMAGEFILE

// Если год постройки >= 1966, используем "дырку"
switch (FEAT_TRAINS, SELF, dr1_c_sprites_start,
  build_year >= 1966)
{
  1: dr1_c_2_spriteset;
     dr1_c_spriteset;
}

long_vehicle(dr1_c)

// Если год постройки >= 1966, используем "дырку"
switch (FEAT_TRAINS, SELF, dr1_m_sprites_l,
  build_year >= 1966)
{
  0: dr1_m_spritegroup;
     dr1_m_2_spritegroup;
}

switch (FEAT_TRAINS, SELF, dr1_m_sprites_r,
  build_year >= 1966)
{
  0: dr1_rm_spriteset;
     dr1_rm_2_spriteset;
}

engine_direction_template2m(dr1_m, dr1_c)

long_vehicle(dr1_m)

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon6,
[
  set_offset_to(num_vehs_in_consist-8),
  prev_vehicle_type_id() ])
{
  dr1_c: return string(STR_WRONG_STRUCTURE_OF_TRAIN_6D);
         return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon5,
[
  set_offset_to(num_vehs_in_consist-6),
  prev_vehicle_type_id() ])
{
  dr1_c: dr1_c_can_attach_wagon6;
         return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon4,
[
  set_offset_to(num_vehs_in_consist-4),
  prev_vehicle_type_id() ])
{
  dr1_c: dr1_c_can_attach_wagon5;
         return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon2,
[
  set_offset_to(num_vehs_in_consist-4),
  prev_vehicle_type_id() ])
{
  dr1_c: return string(STR_WRONG_STRUCTURE_OF_TRAIN_4D);
         return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon1,
  LOAD_TEMP(1) == 22)
{
  1: dr1_c_can_attach_wagon4;
     dr1_c_can_attach_wagon2;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon_h,
  count_veh_id(dr1_m) % 2)
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
     dr1_c_can_attach_wagon1;
}

switch (FEAT_TRAINS, PARENT, dr1_c_can_attach_wagon,
[
  set_offset_to(num_vehs_in_consist-2),
  prev_vehicle_type_id() ])
{
  dr1_c: dr1_c_can_attach_wagon1;
  dr1_m: dr1_c_can_attach_wagon_h;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, dr1_can_attach_wagon_length3,
  count_veh_id(dr1_m) > 1)
{
  0: CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, SELF, dr1_can_attach_wagon3,
  vehicle_type_id)
{
  dr1_m: dr1_can_attach_wagon_length3;
  dr1_c: dr1_c_can_attach_wagon;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, dr1_can_attach_wagon2,
[
  STORE_TEMP(
             (LOAD_TEMP(0)>=1966) +
             (LOAD_TEMP(0)>=1968) +
             ((build_year>=1966) *10) +
             ((build_year>=1968) *10), 1) 
])
{
   0: dr1_can_attach_wagon3;
   1: return string(STR_CAN_ATTACH_WRONG_YEAR,"...-1965","1966-1967");
   2: return string(STR_CAN_ATTACH_WRONG_YEAR,"...-1965","1968-...");
  10: return string(STR_CAN_ATTACH_WRONG_YEAR,"1966-1967","...-1965");
  11: dr1_can_attach_wagon3;
  12: return string(STR_CAN_ATTACH_WRONG_YEAR,"1966-1967","1968-...");
  20: return string(STR_CAN_ATTACH_WRONG_YEAR,"1968-...","...-1965");
  21: return string(STR_CAN_ATTACH_WRONG_YEAR,"1968-...","1966-1967");
  22: dr1_can_attach_wagon3;
      return string(STR_CAN_ATTACH_WRONG_YEAR,"2000","2000");
}

switch (FEAT_TRAINS, PARENT, dr1_can_attach_wagon1,
[  STORE_TEMP(build_year, 0) ])
{
  dr1_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, dr1_can_attach_wagon,
  vehicle_type_id)
{
  dr1_m: dr1_can_attach_wagon1;
  dr1_c: dr1_can_attach_wagon1;
         return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, dr1_m_start_stop,
  count_veh_id(dr1_m) % 2)
{
  0: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

switch (FEAT_TRAINS, SELF, dr1_m_visual_effect_and_powered1,
  (LOAD_TEMP(0) - count_veh_id(dr1_m)) % 2)
{
  0: return diesel_visual_effect_and_powered(-2);
     return diesel_visual_effect_and_powered(7);
}

switch (FEAT_TRAINS, PARENT, dr1_m_visual_effect_and_powered0,
  STORE_TEMP(count_veh_id(dr1_m), 0))
{
  dr1_m_visual_effect_and_powered1;
}

// Визуализируем эффекты тяги только если локомотив - dr1_m
switch (FEAT_TRAINS, PARENT, dr1_m_visual_effect_and_powered,
  vehicle_type_id == dr1_m )
{
  1: dr1_m_visual_effect_and_powered0; 
     return disable_visual_effect_and_powered();
} 

// Даём тягу, только если локомотив - dr1_m 
switch (FEAT_TRAINS, PARENT, dr1_m_power,
  vehicle_type_id == dr1_m )
{
  1: return get_power_in_cb(750); 
     return 0;
} 

// Допускается эксплуатация с пассажирами только если голова - dr1_m 
switch (FEAT_TRAINS, PARENT, dr1_m_cargo_capacity,
  vehicle_type_id == dr1_m )
{
  1: return 80;
     return 0;
}

switch (FEAT_TRAINS, PARENT, dr1_c_cargo_capacity,
  vehicle_type_id == dr1_m )
{
  1: return 128;
     return 0;
}

switch (FEAT_TRAINS, SELF, dr1_m_additional_text,
  (current_year >= 1966) +
  (current_year >= 1968) )
{
  0: return string(STR_DR1_M_PURCHASE_HINT, string(STR_SECTIONS_DMU_2_4));
  1: return string(STR_DR1_M_1966_PURCHASE_HINT, string(STR_SECTIONS_DMU_2_4));
     return string(STR_DR1_M_1968_PURCHASE_HINT, string(STR_SECTIONS_DMU_2_6));
}

switch (FEAT_TRAINS, SELF, dr1_cargo_subtype_text,
  (build_year >= 1966) )
{
  0: string(STR_REFIT_FACTORY_BALTICA, "");
     string(STR_REFIT_FACTORY_DYRKA, "");
}

switch (FEAT_TRAINS, SELF, dr1_m_purchase,
  build_year >= 1966)
{
  1: dr1_m_2_purchase_sprites;
     dr1_m_purchase_sprites;
}

switch (FEAT_TRAINS, SELF, dr1_c_purchase,
  build_year >= 1966)
{
  1: dr1_c_2_purchase_sprites;
  dr1_c_purchase_sprites;
}

item (FEAT_TRAINS, dr1_m) 
{
  property
  {
    name: string(STR_DR1_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1963), 1, 1);
    model_life: get_model_life(1963,1969);
    retire_early: get_retire_early(1963,1969);
    vehicle_life: 25;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12; 
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 121 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 750 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 80;
    weight: 53.5 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(120.0, 53.5);
    length: 8;
  }
  graphics {
    default: dr1_m_sprites;
    purchase: dr1_m_purchase;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: dr1_can_attach_wagon;
    start_stop: dr1_m_start_stop;
    visual_effect_and_powered: dr1_m_visual_effect_and_powered;
    speed: speed_after25_120to110;
    purchase_speed: return 120;
    cargo_subtype_text: dr1_cargo_subtype_text;
    additional_text: dr1_m_additional_text;
    power: dr1_m_power;
    cargo_capacity: dr1_m_cargo_capacity;
  }
}

item (FEAT_TRAINS, dr1_c) 
{
  property
  {
    name: string(STR_DR1_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1963), 1, 1);
    model_life: get_model_life(1963,1969);
    retire_early: get_retire_early(1963,1969);
    vehicle_life: 25;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 128;
    weight: 33.7 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: dr1_c_sprites;
    purchase: dr1_c_purchase;
    articulated_part: articulated_part_dummy7;
    speed: speed_after25_120to110;
    purchase_speed: return 120;
    power: return 0;
    can_attach_wagon: dr1_can_attach_wagon;
    start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
    cargo_subtype_text: dr1_cargo_subtype_text;
    additional_text: dr1_m_additional_text;
    cargo_capacity: dr1_c_cargo_capacity;
  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, dr1_m)
  {
    property
    { name: string(STR_DR1_M_NAME_LONG); }
  }
  item (FEAT_TRAINS, dr1_c)
  {
    property
    { name: string(STR_DR1_C_NAME_LONG); }
  }
}

