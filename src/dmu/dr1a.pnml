 // dr1a

// Спрайты

#define IMAGEFILE  "src/dmu/dr1a-1976-2009.png"

// Вариант 0
// покупка
purchase_sprites(dr1a_m, 0, 0)

purchase_sprites(dr1a_c, 100, 0)

// головной: погрузка/перемещение
spriteset (dr1a_m_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 34, 0)
} 

spriteset (dr1a_m_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 34, 0)
} 

spritegroup dr1a_m_spritegroup
{
  loading: dr1a_m_loading_spriteset;
  loaded: dr1a_m_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1a_rm_spriteset, IMAGEFILE)
{
  s15_template(38, 448, 0)
} 

// прицепной
spriteset (dr1a_c_spriteset, IMAGEFILE)
{
  s15_template(38, 1414, 0)
} 

// Вариант 1
// покупка
purchase_sprites(dr1a_n_v1, 200, 0)

// головной: погрузка/перемещение
spriteset (dr1a_m_v1_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 103, 0)
} 

spriteset (dr1a_m_v1_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 103, 0)
} 

spritegroup dr1a_m_v1_spritegroup
{
  loading: dr1a_m_v1_loading_spriteset;
  loaded: dr1a_m_v1_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1a_rm_v1_spriteset, IMAGEFILE)
{
  s15_template(38, 517, 0)
} 

// прицепной
spriteset (dr1a_c_v1_spriteset, IMAGEFILE)
{
  s15_template(38, 1483, 0)
} 

// головной немоторный: погрузка/перемещение
spriteset (dr1a_n_v1_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 862, 0)
} 

spriteset (dr1a_n_v1_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 862, 0)
} 

spritegroup dr1a_n_v1_spritegroup
{
  loading: dr1a_n_v1_loading_spriteset;
  loaded: dr1a_n_v1_traveling_spriteset;
}

// головной немоторный развёрнутый
spriteset (dr1a_rn_v1_spriteset, IMAGEFILE)
{
  s15_template(38, 1138, 0)
} 

// Вариант 2
// головной: погрузка/перемещение
spriteset (dr1a_m_v2_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 172, 0)
} 

spriteset (dr1a_m_v2_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 172, 0)
} 

spritegroup dr1a_m_v2_spritegroup
{
  loading: dr1a_m_v2_loading_spriteset;
  loaded: dr1a_m_v2_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1a_rm_v2_spriteset, IMAGEFILE)
{
  s15_template(38, 586, 0)
} 

// прицепной
spriteset (dr1a_c_v2_spriteset, IMAGEFILE)
{
  s15_template(38, 1552, 0)
} 

// головной немоторный: погрузка/перемещение
spriteset (dr1a_n_v2_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 931, 0)
} 

spriteset (dr1a_n_v2_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 931, 0)
} 

spritegroup dr1a_n_v2_spritegroup
{
  loading: dr1a_n_v2_loading_spriteset;
  loaded: dr1a_n_v2_traveling_spriteset;
}

// головной немоторный развёрнутый
spriteset (dr1a_rn_v2_spriteset, IMAGEFILE)
{
  s15_template(38, 1207, 0)
} 

// Вариант 3
// головной: погрузка/перемещение
spriteset (dr1a_m_v3_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 241, 0)
} 

spriteset (dr1a_m_v3_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 241, 0)
} 

spritegroup dr1a_m_v3_spritegroup
{
  loading: dr1a_m_v3_loading_spriteset;
  loaded: dr1a_m_v3_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1a_rm_v3_spriteset, IMAGEFILE)
{
  s15_template(38, 655, 0)
} 

// прицепной
spriteset (dr1a_c_v3_spriteset, IMAGEFILE)
{
  s15_template(38, 1621, 0)
} 

// головной немоторный: погрузка/перемещение
spriteset (dr1a_n_v3_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 1000, 0)
} 

spriteset (dr1a_n_v3_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 1000, 0)
} 

spritegroup dr1a_n_v3_spritegroup
{
  loading: dr1a_n_v3_loading_spriteset;
  loaded: dr1a_n_v3_traveling_spriteset;
}

// головной немоторный развёрнутый
spriteset (dr1a_rn_v3_spriteset, IMAGEFILE)
{
  s15_template(38, 1276, 0)
} 

// Вариант 4
// головной: погрузка/перемещение
spriteset (dr1a_m_v4_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 379, 0)
} 

spriteset (dr1a_m_v4_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 379, 0)
} 

spritegroup dr1a_m_v4_spritegroup
{
  loading: dr1a_m_v4_loading_spriteset;
  loaded: dr1a_m_v4_traveling_spriteset;
}

// развёрнутая голова
spriteset (dr1a_rm_v4_spriteset, IMAGEFILE)
{
  s15_template(38, 793, 0)
} 

// прицепной
spriteset (dr1a_c_v4_spriteset, IMAGEFILE)
{
  s15_template(38, 1690, 0)
} 

// головной немоторный: погрузка/перемещение
spriteset (dr1a_n_v4_loading_spriteset, IMAGEFILE)
{
  s15_template(38, 1069, 0)
} 

spriteset (dr1a_n_v4_traveling_spriteset, IMAGEFILE)
{
  s15_template(497, 1069, 0)
} 

spritegroup dr1a_n_v4_spritegroup
{
  loading: dr1a_n_v4_loading_spriteset;
  loaded: dr1a_n_v4_traveling_spriteset;
}

// головной немоторный развёрнутый
spriteset (dr1a_rn_v4_spriteset, IMAGEFILE)
{
  s15_template(38, 1345, 0)
} 

#undef IMAGEFILE

// 2 диапазона: 1976-90, 1990-96 по году постройки
// [0][1 2 3 4]
switch (FEAT_TRAINS, SELF, dr1a_c_sprites_2,
  cargo_subtype)
{
  0: dr1a_c_spriteset;
  1: dr1a_c_v1_spriteset;
  2: dr1a_c_v2_spriteset;
  3: dr1a_c_v3_spriteset;
     dr1a_c_v4_spriteset;
}

long_vehicle(dr1a_c, )

// Определяем необходимость разворота моторного вагона по чётности его позиции
// от начала состава
// 2 диапазона: 1976-90, 1990-96 по году постройки
// [0 1][2 3 4 5 6 7 8 9]
switch (FEAT_TRAINS, SELF, dr1a_m_sprites2,
  ((LOAD_TEMP(0) - count_veh_id(dr1a_m) - count_veh_id(dr1a_n)) % 2) +
  cargo_subtype * 2)
{
  0: dr1a_m_spritegroup;
  1: dr1a_rm_spriteset;
  2: dr1a_m_v1_spritegroup;
  3: dr1a_rm_v1_spriteset;
  4: dr1a_m_v2_spritegroup;
  5: dr1a_rm_v2_spriteset;
  6: dr1a_m_v3_spritegroup;
  7: dr1a_rm_v3_spriteset;
  8: dr1a_m_v4_spritegroup;
     dr1a_rm_v4_spriteset;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_sprites_2,
  STORE_TEMP(count_veh_id(dr1a_m) + count_veh_id(dr1a_n), 0))
{
  dr1a_m_sprites2;
}

long_vehicle(dr1a_m, )

// Определяем необходимость разворота немоторного вагона по чётности его позиции
// от начала состава
// 2 диапазона: 1976-90, 1990-96 по году постройки
// [0 1][2 3 4 5 6 7 8 9]
switch (FEAT_TRAINS, SELF, dr1a_n_sprites2,
  ((LOAD_TEMP(0) - count_veh_id(dr1a_m) - count_veh_id(dr1a_n)) % 2) +
  cargo_subtype * 2)
{
  0: dr1a_n_v1_spritegroup;
  1: dr1a_rn_v1_spriteset;
  2: dr1a_n_v1_spritegroup;
  3: dr1a_rn_v1_spriteset;
  4: dr1a_n_v2_spritegroup;
  5: dr1a_rn_v2_spriteset;
  6: dr1a_n_v3_spritegroup;
  7: dr1a_rn_v3_spriteset;
  8: dr1a_n_v4_spritegroup;
     dr1a_rn_v4_spriteset;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_sprites1,
  STORE_TEMP(count_veh_id(dr1a_m) + count_veh_id(dr1a_n), 0))
{
  dr1a_n_sprites2;
}

switch (FEAT_TRAINS, SELF, dr1a_n_sprites_DRB1,
  (position_in_consist != 0) +
  cargo_subtype * 2
)
{
  0: dr1a_n_v1_spritegroup;
  1: dr1a_rn_v1_spriteset;
  2: dr1a_n_v1_spritegroup;
  3: dr1a_rn_v1_spriteset;
  4: dr1a_n_v2_spritegroup;
  5: dr1a_rn_v2_spriteset;
  6: dr1a_n_v3_spritegroup;
  7: dr1a_rn_v3_spriteset;
  8: dr1a_n_v4_spritegroup;
  dr1a_rn_v4_spriteset;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_sprites_2,
  ((num_vehs_in_consist - count_veh_id(dr1a_c) * 2 - count_veh_id(dr1a_n) * 2 - count_veh_id(_2m62u) * 2) == 0) && ((count_veh_id(dr1a_n) + count_veh_id(dr1a_c)) >= 1))
{
  1: dr1a_n_sprites_DRB1;
     dr1a_n_sprites1;
}

long_vehicle(dr1a_n, )

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon10,
[
  set_offset_to(num_vehs_in_consist-8),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_ALLOW;
  dr1a_c: return CB_RESULT_ATTACH_DISALLOW;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon9,
  num_vehs_in_consist)
{
  8: return CB_RESULT_ATTACH_ALLOW;
     dr1a_m_can_attach_wagon10;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon8,
[
  set_offset_to(num_vehs_in_consist-6),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_ALLOW;
  dr1a_c: dr1a_m_can_attach_wagon9;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon7,
  num_vehs_in_consist)
{
  6: return CB_RESULT_ATTACH_ALLOW;
     dr1a_m_can_attach_wagon8;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon6,
[
  set_offset_to(num_vehs_in_consist-4),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_ALLOW;
  dr1a_c: dr1a_m_can_attach_wagon7;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon5,
  num_vehs_in_consist)
{
  4: return CB_RESULT_ATTACH_ALLOW;
     dr1a_m_can_attach_wagon6;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon4,
[
  set_offset_to(num_vehs_in_consist-2),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_ALLOW;
  dr1a_c: dr1a_m_can_attach_wagon5;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon3,
  num_vehs_in_consist)
{
  2: return CB_RESULT_ATTACH_ALLOW;
     dr1a_m_can_attach_wagon4;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon1,
  (count_veh_id(dr1a_m) + count_veh_id(dr1a_n)) % 2)
{
  1: dr1a_m_can_attach_wagon3;
     return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon16,
[
  set_offset_to(num_vehs_in_consist-10),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_DISALLOW;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon15,
[
  set_offset_to(num_vehs_in_consist-8),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_DISALLOW;
  dr1a_c: dr1a_m_can_attach_wagon16;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon14,
[
  set_offset_to(num_vehs_in_consist-6),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_DISALLOW;
  dr1a_c: dr1a_m_can_attach_wagon15;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon13,
[
  set_offset_to(num_vehs_in_consist-4),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_DISALLOW;
  dr1a_c: dr1a_m_can_attach_wagon14;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon12,
[
  set_offset_to(num_vehs_in_consist-2),
  prev_vehicle_type_id() ])
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: return CB_RESULT_ATTACH_DISALLOW;
  dr1a_c: dr1a_m_can_attach_wagon13;
          return CB_RESULT_ATTACH_DISALLOW;
}

// количество голов чётное?
switch (FEAT_TRAINS, PARENT, dr1a_m_can_attach_wagon11,
  (count_veh_id(dr1a_m) + count_veh_id(dr1a_n)) % 2)
{
  0: return CB_RESULT_ATTACH_ALLOW; // да
     dr1a_m_can_attach_wagon12; // нет, проверяем последнюю на соответствие dr1b_h
}

switch (FEAT_TRAINS, SELF, dr1a_m_can_attach_wagon,
  vehicle_type_id)
{
  dr1a_m: return CB_RESULT_ATTACH_ALLOW;
  dr1a_n: dr1a_m_can_attach_wagon11;
  dr1a_c: dr1a_m_can_attach_wagon1;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_can_attach_wagon4,
  count_veh_id(_2m62u))
{
  0: return CB_RESULT_ATTACH_ALLOW;
     return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_can_attach_wagon3,
  count_veh_id(_2m62u))
{
  0: dr1a_m_can_attach_wagon11;
     return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_can_attach_wagon2,
  count_veh_id(_2m62u))
{
  0: dr1a_m_can_attach_wagon1;
     return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_can_attach_wagon1,
  count_veh_id(dr1a_m)+count_veh_id(dr1a_n)+count_veh_id(_2m62u))
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, SELF, dr1a_n_can_attach_wagon,
  vehicle_type_id)
{
  dr1a_m: dr1a_n_can_attach_wagon4;
  dr1a_n: dr1a_n_can_attach_wagon3;
  dr1a_c: dr1a_n_can_attach_wagon2;
  _2m62u: dr1a_n_can_attach_wagon1;
          return CB_RESULT_ATTACH_DISALLOW;
}

switch (FEAT_TRAINS, PARENT, dr1a_m_start_stop,
  (count_veh_id(dr1a_m) + count_veh_id(dr1a_n) + count_veh_id(_2m62u)) % 2)
{
  0: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

switch (FEAT_TRAINS, SELF, dr1a_m_visual_effect_and_powered1,
  (LOAD_TEMP(0) - count_veh_id(dr1a_m) - count_veh_id(dr1a_n)) % 2)
{
  0: return diesel_visual_effect_and_powered(-2);
     return diesel_visual_effect_and_powered(7);
}

switch (FEAT_TRAINS, PARENT, dr1a_m_visual_effect_and_powered0,
  STORE_TEMP(count_veh_id(dr1a_m) + count_veh_id(dr1a_n), 0))
{
  dr1a_m_visual_effect_and_powered1;
}

// Визуализируем эффекты тяги только если локомотив - dr1a_m или dr1a_n
switch (FEAT_TRAINS, PARENT, dr1a_m_visual_effect_and_powered,
  (vehicle_type_id == dr1a_m) || (vehicle_type_id == dr1a_n) )
{
  1: dr1a_m_visual_effect_and_powered0; 
     return disable_visual_effect_and_powered();
} 

// Даём тягу, только если локомотив - dr1a_m или dr1a_n
switch (FEAT_TRAINS, PARENT, dr1a_m_power,
  (vehicle_type_id == dr1a_m) || (vehicle_type_id == dr1a_n) )
{
  1: return get_power_in_cb(800); 
     return 0;
} 

// Допускается эксплуатация с пассажирами только если голова - dr1a_m или dr1a_n или 2m62u
switch (FEAT_TRAINS, PARENT, dr1a_m_cargo_capacity,
  (vehicle_type_id == dr1a_m) || (vehicle_type_id == dr1a_n) )
{
  1: return 68;
     return 0;
}

switch (FEAT_TRAINS, PARENT, dr1a_n_cargo_capacity,
  (vehicle_type_id == dr1a_m) || (vehicle_type_id == dr1a_n) || (vehicle_type_id == _2m62u) )
{
  1: return 96;
     return 0;
}

switch (FEAT_TRAINS, PARENT, dr1a_c_cargo_capacity,
  (vehicle_type_id == dr1a_m) || (vehicle_type_id == dr1a_n) || (vehicle_type_id == _2m62u) )
{
  1: return 124;
     return 0;
}
/*
switch (FEAT_TRAINS, SELF, dr1a_n_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63352, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63352, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63352, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63352, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63352, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text2,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_SZD));
     string(STR_REFIT_FACTORY_63350, string(STR_REFIT_SZD));
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text1_1,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63324, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text1_2,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63342, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text1_3,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63350, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63350, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63350, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63350, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63350, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text1,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: dr1a_m_cargo_subtype_text1_1;
  1: dr1a_m_cargo_subtype_text1_2;
     dr1a_m_cargo_subtype_text1_3;
}

switch (FEAT_TRAINS, SELF, dr1a_m_cargo_subtype_text,
  ((current_year >= 1990) || (build_year >=1990)) )
{
  1: dr1a_m_cargo_subtype_text1;
     dr1a_m_cargo_subtype_text2;
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text2,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_SZD));
     string(STR_REFIT_FACTORY_63351, string(STR_REFIT_SZD));
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text1_1,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63325, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text1_2,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63343, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text1_3,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63351, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63351, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63351, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63351, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63351, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text1,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: dr1a_c_cargo_subtype_text1_1;
  1: dr1a_c_cargo_subtype_text1_2;
     dr1a_c_cargo_subtype_text1_3;
}

switch (FEAT_TRAINS, SELF, dr1a_c_cargo_subtype_text,
  ((current_year >= 1990) || (build_year >=1990)) )
{
  1: dr1a_c_cargo_subtype_text1;
     dr1a_c_cargo_subtype_text2;
}
*/
switch (FEAT_TRAINS, SELF, dr1a_n_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text2,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_SZD));
     string(STR_REFIT_FACTORY_63349, string(STR_REFIT_SZD));
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text1_1,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63323, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text1_2,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63341, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text1_3,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_SZD));
  1: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LDZ,""));
  2: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LDZ_STAR));
  3: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_LG));
  4: string(STR_REFIT_FACTORY_63349, string(STR_REFIT_BELARUSSIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text1,
  (build_year >= 1978) +
  (build_year >= 1985) )
{
  0: dr1a_cargo_subtype_text1_1;
  1: dr1a_cargo_subtype_text1_2;
     dr1a_cargo_subtype_text1_3;
}

switch (FEAT_TRAINS, SELF, dr1a_cargo_subtype_text,
  ((current_year >= 1990) || (build_year >=1990)) )
{
  1: dr1a_cargo_subtype_text1;
     dr1a_cargo_subtype_text2;
}

switch (FEAT_TRAINS, SELF, dr1a_m_additional_text,
  (current_year >= 1978) +
  (current_year >= 1985) +
  (current_year >= 1990) )
{ 
  0: return string(STR_DR1A_M_PURCHASE_HINT_63324);
  1: return string(STR_DR1A_M_PURCHASE_HINT_63642);
  2: return string(STR_DR1A_M_PURCHASE_HINT_63350_B90);
     return string(STR_DR1A_M_PURCHASE_HINT_63350_S90);
}

switch (FEAT_TRAINS, SELF, dr1a_c_additional_text,
  (current_year >= 1978) +
  (current_year >= 1985) +
  (current_year >= 1990) )
{ 
  0: return string(STR_DR1A_C_PURCHASE_HINT_63325);
  1: return string(STR_DR1A_C_PURCHASE_HINT_63643);
  2: return string(STR_DR1A_C_PURCHASE_HINT_63351_B90);
     return string(STR_DR1A_C_PURCHASE_HINT_63351_S90);
}

item (FEAT_TRAINS, dr1a_m) 
{
  property
  {
    name: string(STR_DR1A_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1976), 1, 1);
    model_life: get_model_life(1976,2008);
    retire_early: get_retire_early(1976,2008); // VEHICLE_NEVER_EXPIRES;
    vehicle_life: 25; // срок службы
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12; 
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 121 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 800 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 68;
    weight: 60 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    tractive_effort_coefficient: get_tec(128.0, 60);
    length: 8;
  }
  graphics {
    default: dr1a_m_sprites;
    purchase: dr1a_m_purchase_sprites;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: dr1a_m_can_attach_wagon;
    start_stop: dr1a_m_start_stop;
    visual_effect_and_powered: dr1a_m_visual_effect_and_powered;
    speed: speed_after20_120to110;
    purchase_speed: return 120;
    additional_text: dr1a_m_additional_text;
//    cargo_subtype_text: dr1a_m_cargo_subtype_text;
    cargo_subtype_text: dr1a_cargo_subtype_text;
    power: dr1a_m_power;
    cargo_capacity: dr1a_m_cargo_capacity;
  }
}

item (FEAT_TRAINS, dr1a_n) 
{
  property
  {
    name: string(STR_DR1A_N_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1990), 1, 1);
    model_life: get_model_life(1990,2008);
    retire_early: get_retire_early(1990,2008); // VEHICLE_NEVER_EXPIRES;
    vehicle_life: 25;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 96;
    weight: 38 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics
  {
    default: dr1a_n_sprites;
    purchase: dr1a_n_v1_purchase_sprites;
    articulated_part: articulated_part_dummy7;
    can_attach_wagon: dr1a_n_can_attach_wagon;
    start_stop: dr1a_m_start_stop;
    speed: speed_after20_120to110;
    purchase_speed: return 120;
    power: return 0; // сам тянуть составы не может
    additional_text: return string(STR_DR1A_N_PURCHASE_HINT_63352);
    cargo_subtype_text: dr1a_n_cargo_subtype_text;
    cargo_capacity: dr1a_n_cargo_capacity;
  }
}

item (FEAT_TRAINS, dr1a_c) 
{
  property
  {
    name: string(STR_DR1A_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1976), 1, 1);
    model_life: get_model_life(1976,2008);
    retire_early: get_retire_early(1976,2008); // VEHICLE_NEVER_EXPIRES;
    vehicle_life: 25;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_dmu_cost_factor();
    running_cost_factor: get_dmu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_DIESEL;
    cargo_capacity: 124;
    weight: 38 ton;
    engine_class: ENGINE_CLASS_DIESEL;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: dr1a_c_sprites;
    purchase: dr1a_c_purchase_sprites;
    articulated_part: articulated_part_dummy7;
//    cargo_subtype_text: dr1a_c_cargo_subtype_text;
    cargo_subtype_text: dr1a_cargo_subtype_text;
    speed: speed_after20_120to110;
    purchase_speed: return 120;
    power: return 0;
    can_attach_wagon: return CB_RESULT_ATTACH_ALLOW; 
    start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
    additional_text: dr1a_c_additional_text;
    cargo_capacity: dr1a_c_cargo_capacity;
  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, dr1a_m)
  {
    property
    { name: string(STR_DR1A_M_NAME_LONG); }
  }
  item (FEAT_TRAINS, dr1a_n)
  {
    property
    { name: string(STR_DR1A_N_NAME_LONG); }
  }
  item (FEAT_TRAINS, dr1a_c)
  {
    property
    { name: string(STR_DR1A_C_NAME_LONG); }
  }
}

