// dt1

#define IMAGEFILE  "src/dmu/dt1_h.png"
purchase_sprites(dt1_h, 0, 0)
MU_head_middle_sprites(13, dt1_h_v1_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE "src/dmu/dt1_h-pid.png"
MU_head_middle_sprites(13, dt1_h_v2_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/dmu/dt1_m.png"
purchase_sprites(dt1_m, 0, 0)
EMU_motor1_middle_sprites(13, dt1_m_v1_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE "src/dmu/dt1_m-pid.png"
EMU_motor1_middle_sprites(13, dt1_m_v2_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/dmu/dt1_c.png"
purchase_sprites(dt1_c, 0, 0)
MU_car_sprites(13, dt1_c_v1_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE "src/dmu/dt1_c-pid.png"
MU_car_sprites(13, dt1_c_v2_mu, 32, 40)
#undef IMAGEFILE

MU_head_middle_direction_template(dt1_h_v1, dt1_h)
MU_head_middle_direction_template(dt1_h_v2, dt1_h)

switch (FEAT_TRAINS, SELF, dt1_h_sprites_left,
  cargo_subtype)
{
           0: dt1_h_v1_sprites_left;
  LV_RZD_PID: dt1_h_v2_sprites_left;
  align_13_sprites;
}

switch (FEAT_TRAINS, SELF, dt1_h_sprites_right,
  cargo_subtype)
{
           0: dt1_h_v1_sprites_right;
  LV_RZD_PID: dt1_h_v2_sprites_right;
  align_13_sprites;
}

engine_direction_template3m2(dt1_h, dt1_m, dt1_c, )
long_vehicle_sp(dt1_h)

EMU_motor_direction_template(dt1_m_v1, dt1_h)
EMU_motor_direction_template(dt1_m_v2, dt1_h)

switch (FEAT_TRAINS, SELF, dt1_m_direction_left,
  cargo_subtype)
{
           0: dt1_m_v1_direction_left;
  LV_RZD_PID: dt1_m_v2_direction_left;
  align_13_sprites;
}

switch (FEAT_TRAINS, SELF, dt1_m_direction_right,
  cargo_subtype)
{
           0: dt1_m_v1_direction_right;
  LV_RZD_PID: dt1_m_v2_direction_right;
  align_13_sprites;
}


  dt1_m_direction_template

EMU_direction_calculation_template2(dt1, _m)

long_vehicle_dir(dt1_m)

EMU_motor_direction_template(dt1_c_v1, dt1_h)
EMU_motor_direction_template(dt1_c_v2, dt1_h)

switch (FEAT_TRAINS, SELF, dt1_c_direction_left,
  cargo_subtype)
{
           0: dt1_c_v1_direction_left;
  LV_RZD_PID: dt1_c_v2_direction_left;
  align_13_sprites;
}

switch (FEAT_TRAINS, SELF, dt1_c_direction_right,
  cargo_subtype)
{
           0: dt1_c_v1_direction_right;
  LV_RZD_PID: dt1_c_v2_direction_right;
  align_13_sprites;
}

  dt1_c_direction_template

long_vehicle_dir(dt1_c)

EMU_4_12_MH_can_attach_wagon_template(dt1)
EMU_attach_calculation_template2(dt1)

switch (FEAT_TRAINS, SELF, dt1_can_attach_wagon1, vehicle_type_id)
{
   dt1_h: dt1_can_attach_wagon_template;
   dt1_m: dt1_can_attach_wagon_template;
   dt1_c: dt1_can_attach_wagon_template;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, dt1_can_attach_wagon,
  count_veh_id(dt1_h))
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
  1: dt1_can_attach_wagon1;
  2: dt1_can_attach_wagon_anyhead;
  3: dt1_can_attach_wagon1;
     return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
}

switch (FEAT_TRAINS, PARENT, dt1_h_start_stop,
  count_veh_id(dt1_h))
{
  2: return CB_RESULT_NO_TEXT;
  4: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

EMU_4_12_m_create_effect_template(dt1, -1, 6)
EMU_direction_calculation_template2(dt1, _m_create_effect)
engine_effects_MU(dt1_m, _create_effect_direction_template, dt1_h)
engine_power_MU(dt1_m, 1105, dt1_h)
engine_capacity_MU(dt1_h, 76, dt1_h)
engine_capacity_MU(dt1_m, 73, dt1_h)
engine_capacity_MU(dt1_c, 145, dt1_h)

engine_speed(dt1, 120)

livery_template_FP(dt1)

RC_head_check_new(dt1_h, dt1_h)
switch (FEAT_TRAINS, SELF, dt1_h_running_cost_factor,
[  STORE_TEMP(123, 0),  // Моторы
   STORE_TEMP(17, 1),   // Бригада
   STORE_TEMP(43, 2),   // Износ
   STORE_TEMP(0, 3),    // Сопровождение
   STORE_TEMP(30, 4),   // ТО
   STORE_TEMP(2, 5),    // Сертификация

   STORE_TEMP(120, 6),                 // Скорость
   STORE_TEMP(44, 7),                  // Тара
   STORE_TEMP(LOAD_TEMP(7) + 8, 8)])   // Максимальная масса
{ dt1_h_check_running_cost_factor; }  // 215

RC_head_check_new(dt1_m, dt1_h)
switch (FEAT_TRAINS, SELF, dt1_m_running_cost_factor,
[  STORE_TEMP(131, 0),  // Моторы
   STORE_TEMP(0, 1),    // Бригада
   STORE_TEMP(46, 2),   // Износ
   STORE_TEMP(0, 3),    // Сопровождение
   STORE_TEMP(32, 4),   // ТО
   STORE_TEMP(2, 5),    // Сертификация

   STORE_TEMP(120, 6),                 // Скорость
   STORE_TEMP(58, 7),                  // Тара
   STORE_TEMP(LOAD_TEMP(7) + 15, 8)])  // Максимальная масса
{ dt1_m_check_running_cost_factor; }  // 230

RC_head_check_new(dt1_c, dt1_h)
switch (FEAT_TRAINS, SELF, dt1_c_running_cost_factor,
[  STORE_TEMP(78, 0),  // Моторы
   STORE_TEMP(0, 1),   // Бригада
   STORE_TEMP(27, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(19, 4),  // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(120, 6),                 // Скорость
   STORE_TEMP(41, 7),                  // Тара
   STORE_TEMP(LOAD_TEMP(7) + 15, 8)])  // Максимальная масса
{ dt1_c_check_running_cost_factor; }  // 136

hint_MU_with_model2(dt1_h,
     calc_loading(61 / (2 * WIDERST_D_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_H_DC_WITH_SUBTYPE, 62, 379,
     STR_SECTIONS_EMU_dt1,
     2016, 2050,
     string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII))
hint_MU_with_model2(dt1_m,
     calc_loading(116 / (2 * WIDERST_D_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_M_DC_WITH_SUBTYPE, 62, 380,
     STR_SECTIONS_EMU_dt1,
     2016, 2050,
     string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII))
hint_MU_with_model2(dt1_c,
     calc_loading(116 / (2 * WIDERST_D_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_C_DC_WITH_SUBTYPE, 62, 381,
     STR_SECTIONS_EMU_dt1,
     2016, 2050,
     string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII))

item (FEAT_TRAINS, dt1_h, 544) {
  property {
    name: string(STR_NAME_dt1);
    vehicle_dates(2016, 2050, 30, 10, 8, 28)
    vehicle_emu_c(dc, 99.9, 61, 2 * WIDERST_D_DOOR)
  }
  graphics {
                    default: dt1_h_sprites;
                   purchase: dt1_h_purchase_sprites;
           cargo_age_period: return 60;
        running_cost_factor: dt1_h_running_cost_factor;
           articulated_part: articulated_part_dummy5;
           can_attach_wagon: dt1_can_attach_wagon;
                 start_stop: dt1_h_start_stop;
                      power: return 0;
                      speed: dt1_speed;
             cargo_capacity: dt1_h_cargo_capacity;
         cargo_subtype_text: dt1_cargo_subtype_text;
             colour_mapping: any_cc_colour;
             purchase_speed: return 120;
            additional_text: dt1_h_additional_text;
  }
}

item (FEAT_TRAINS, dt1_m, 545) {
  property {
    name: string(STR_NAME_dt1);
    vehicle_dates(2016, 2050, 30, 10, 8, 29)
    vehicle_emu(dc, 1105, 99.9, 55.0, 116, 2 * WIDERST_D_DOOR)
  }
  graphics {
                    default: dt1_m_sprites;
                   purchase: dt1_m_purchase_sprites;
           cargo_age_period: return 60;
        running_cost_factor: dt1_m_running_cost_factor;
           articulated_part: articulated_part_dummy5;
           can_attach_wagon: dt1_can_attach_wagon;
                 start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
                      power: dt1_m_power;
                      speed: dt1_speed;
             cargo_capacity: dt1_m_cargo_capacity;
         cargo_subtype_text: dt1_cargo_subtype_text;
              create_effect: dt1_m_create_effect;
             colour_mapping: any_cc_colour;
             purchase_speed: return 120;
            additional_text: dt1_m_additional_text;
  }
}

item (FEAT_TRAINS, dt1_c, 546) {
  property {
    name: string(STR_NAME_dt1);
    vehicle_dates(2016, 2050, 30, 10, 8, 17)
    vehicle_emu_c(dc, 99.9, 116, 2 * WIDERST_D_DOOR)
  }
  graphics {
                    default: dt1_c_sprites;
                   purchase: dt1_c_purchase_sprites;
           cargo_age_period: return 60;
        running_cost_factor: dt1_c_running_cost_factor;
           articulated_part: articulated_part_dummy5;
           can_attach_wagon: dt1_can_attach_wagon;
                 start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
                      power: return 0;
                      speed: dt1_speed;
             cargo_capacity: dt1_c_cargo_capacity;
         cargo_subtype_text: dt1_cargo_subtype_text;
             colour_mapping: any_cc_colour;
             purchase_speed: return 120;
            additional_text: dt1_c_additional_text;
  }
}

long_name_template(dt1_h, STR_LONGNAME_dt1_H)
long_name_template(dt1_m, STR_LONGNAME_dt1_M)
long_name_template(dt1_c, STR_LONGNAME_dt1_C)
allow_dmu(dt1_h)
allow_dmu(dt1_m)
allow_dmu(dt1_c)
