 /// dummy

spriteset (dummy_sprites, "src/dummy/empty.png")     { [0, 0, 1, 1, 0, 0, CROP]           }
spriteset (dummy_sprites_big, "src/dummy/flag.png")  { [0, 0, 20, 20, -10, -13, CROP]     }

spriteset (icon_sprites_15ac      , "src/dummy/15ac.png")      { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_15ac_15dc , "src/dummy/15ac_15dc.png") { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_15dc      , "src/dummy/15dc.png")      { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_aac_15dc  , "src/dummy/aac_15dc.png")  { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_aac_3dc   , "src/dummy/aac_dc.png")    { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_aac_ddc   , "src/dummy/aac_ddc.png")   { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_25ac      , "src/dummy/ac.png")        { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_25ac_15dc , "src/dummy/ac_15dc.png")   { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_25ac_3dc  , "src/dummy/ac_dc.png")     { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_25ac_ddc  , "src/dummy/ac_ddc.png")    { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_3dc       , "src/dummy/dc.png")        { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_ddc       , "src/dummy/ddc.png")       { [0, 0, 12, 18, -10, -12, CROP] }
spriteset (icon_sprites_next0     , "src/dummy/next0.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next1     , "src/dummy/next1.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next2     , "src/dummy/next2.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next3     , "src/dummy/next3.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next4     , "src/dummy/next4.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_nexta     , "src/dummy/next-add.png")  { [0, 0, 36, 18, -10, -12, CROP | ANIM] }
spriteset (icon_sprites_preva     , "src/dummy/prev.png")      { [0, 0, 36, 18, -10, -12, CROP | ANIM] }
spriteset (icon_sprites_nextb     , "src/dummy/next-add2.png") { [0, 0, 36, 18, -10, -12, CROP | ANIM] }

// Шаблон для dummy, задаём разный length

#define define_dummy_template(size, dID)                             \
item (FEAT_TRAINS, dummy##size, dID)                                 \
{                                                                    \
  property                                                           \
  {                                                                  \
           climates_available: NO_CLIMATE;                           \
                    sprite_id: SPRITE_ID_NEW_TRAIN;                  \
                   misc_flags: bitmask(TRAIN_FLAG_TILT);             \
                   model_life: VEHICLE_NEVER_EXPIRES;                \
    visual_effect_and_powered: disable_visual_effect_and_powered();  \
                   track_type: get_normal_track_type(60);            \
                       length: size;                                 \
          running_cost_factor: 0;                                    \
                  cost_factor: 0;                                    \
  }                                                                  \
  graphics                                                           \
  {                                                                  \
    default: dummy_sprites;                                          \
  }                                                                  \
}                                                                    \

// Определение dummy
define_dummy_template(1, 116)
define_dummy_template(2, 117)
define_dummy_template(3, 118)
define_dummy_template(4, 119)
define_dummy_template(5, 120)
define_dummy_template(6, 121)
define_dummy_template(7, 122)
define_dummy_template(8, 123)

// шаблоны иконок МВПС
// головные
switch (FEAT_TRAINS, SELF, type_head_motor_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB4), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB4), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_prev_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB4), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_preva;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB7), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB7), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor_prev_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB7), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_preva;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xBA), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xBA), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_pant_add_optional,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xBA), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nextb;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xBE), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
// Прицепные
switch (FEAT_TRAINS, SELF, type_car_motor_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0x53), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_car_motor,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xCF), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_car_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xCF), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_car_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0x92), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_car,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0x97), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     dummy_sprites; }
// комбо 2
switch (FEAT_TRAINS, SELF, type_car_motor_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0x97), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_car_motor_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xCF), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_car_motor_car2;
  4: type_car_motor_car2;
  5: icon_sprites_nexta;
     dummy_sprites; }

switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0x53), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     dummy_sprites; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | (ttdall_cc + 0xB4), 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_motor_pant_car_motor_pant2;
  4: type_head_motor_pant_car_motor_pant2;
  5: icon_sprites_nexta;
     dummy_sprites; }
