 /// types

spriteset (icon_sprites_next0     , "src/dummy/next0.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next1     , "src/dummy/next1.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next2     , "src/dummy/next2.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next3     , "src/dummy/next3.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_next4     , "src/dummy/next4.png")     { [0, 0, 36, 18, -20, -12, CROP] }
spriteset (icon_sprites_nexta     , "src/dummy/next-add.png")  { [0, 0, 36, 18, -10, -12, CROP | ANIM] }
spriteset (icon_sprites_preva     , "src/dummy/prev.png")      { [0, 0, 36, 18, -10, -12, CROP | ANIM] }
spriteset (icon_sprites_nextb     , "src/dummy/next-add2.png") { [0, 0, 36, 18, -10, -12, CROP | ANIM] }

// шаблоны иконок МВПС
#define ICO_RED          (ttdall_cc + 0xB4)
#define ICO_CREAM        (ttdall_cc + 0xB7)
#define ICO_ORANGE       (ttdall_cc + 0xBA)
#define ICO_YELLOW       (ttdall_cc + 0xBE)
#define ICO_DKGREEN      (ttdall_cc + 0x53)
#define ICO_GREEN        (ttdall_cc + 0xCF)
#define ICO_BLUE         (ttdall_cc + 0x92)
#define ICO_LTBLUE       (ttdall_cc + 0x97)

// [1] Головной моторный с пантографом
switch (FEAT_TRAINS, SELF, type_head_motor_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_prev_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_preva;
     return CB_FAILED; }
// [2] Головной моторный
switch (FEAT_TRAINS, SELF, type_head_motor,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_add_optional,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nextb;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_prev_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_preva;
     return CB_FAILED; }
// [3] Головной с пантографом
switch (FEAT_TRAINS, SELF, type_head_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_ORANGE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_ORANGE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_pant_add_optional,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_ORANGE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nextb;
     return CB_FAILED; }
// [4] Головной
switch (FEAT_TRAINS, SELF, type_head,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_add_optional,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nextb;
     return CB_FAILED; }
// [5] Прицепной моторный с пантографом
switch (FEAT_TRAINS, SELF, type_car_motor_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
// [6] Прицепной моторный
switch (FEAT_TRAINS, SELF, type_car_motor,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
// [7] Прицепной с пантографом
switch (FEAT_TRAINS, SELF, type_car_pant,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_BLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_BLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
// [8] Прицепной
switch (FEAT_TRAINS, SELF, type_car,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next0;
  2: icon_sprites_nexta;
     return CB_FAILED; }
// комбо 2 --------------------------------------------------------------------
// [14] головной моторный с пантографом или головной
switch (FEAT_TRAINS, SELF, type_head_motor_pant_head2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_head_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_motor_pant_head2;
  4: type_head_motor_pant_head2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_head_add_optional,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_motor_pant_head2;
  4: type_head_motor_pant_head2;
  5: icon_sprites_nextb;
     return CB_FAILED; }
// [15] головной моторный с пантографом или прицепной моторный с пантографом
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_motor_pant_car_motor_pant2;
  4: type_head_motor_pant_car_motor_pant2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [26] головной моторный или прицепной моторный
switch (FEAT_TRAINS, SELF, type_head_motor_car_motor2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_motor_car_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_motor_car_motor2;
  4: type_head_motor_car_motor2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [45] Головной или прицепной моторный с токоприёмником
switch (FEAT_TRAINS, SELF, type_head_car_motor_pant2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_car_motor_pant_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_car_motor_pant2;
  4: type_head_car_motor_pant2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [46] Головной или прицепной моторный
switch (FEAT_TRAINS, SELF, type_head_car_motor2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_car_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_car_motor2;
  4: type_head_car_motor2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [48] Головной или прицепной
switch (FEAT_TRAINS, SELF, type_head_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_head_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_head_car2;
  4: type_head_car2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [56] прицепной моторный с патографом или прицепной моторный
switch (FEAT_TRAINS, SELF, type_car_motor_pant_car_motor2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_motor_pant_car_motor_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_car_motor_pant_car_motor2;
  4: type_car_motor_pant_car_motor2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [58] прицепной моторный с патографом или прицепной
switch (FEAT_TRAINS, SELF, type_car_motor_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_motor_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_car_motor_pant_car2;
  4: type_car_motor_pant_car2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [68] прицепной моторный или прицепной
switch (FEAT_TRAINS, SELF, type_car_motor_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_motor_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_car_motor_car2;
  4: type_car_motor_car2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [78] прицепной с патографом или прицепной
switch (FEAT_TRAINS, SELF, type_car_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 3: icon_sprites_next3;
  4: icon_sprites_next4;
     return CB_FAILED; }
switch (FEAT_TRAINS, SELF, type_car_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_BLUE, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next2;
  3: type_car_pant_car2;
  4: type_car_pant_car2;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// комбо 3 --------------------------------------------------------------------
// [158] Головной моторный с токоприёмником, прицепной моторный с токоприёмником или прицепной
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant_car3,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100), 0])
{ icon_sprites_next2; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100), 0])
{ icon_sprites_next3; }
switch (FEAT_TRAINS, SELF, type_head_motor_pant_car_motor_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_RED, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next4;
  3: type_head_motor_pant_car_motor_pant_car2;
  4: type_head_motor_pant_car_motor_pant_car3;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [258] Головной моторный, прицепной моторный с токоприёмником или прицепной
switch (FEAT_TRAINS, SELF, type_head_motor_car_motor_pant_car3,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100), 0])
{ icon_sprites_next2; }
switch (FEAT_TRAINS, SELF, type_head_motor_car_motor_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100), 0])
{ icon_sprites_next3; }
switch (FEAT_TRAINS, SELF, type_head_motor_car_motor_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_CREAM, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next4;
  3: type_head_motor_car_motor_pant_car2;
  4: type_head_motor_car_motor_pant_car3;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [458] Головной, прицепной моторный с токоприёмником или прицепной
switch (FEAT_TRAINS, SELF, type_head_car_motor_pant_car3,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_DKGREEN, 0x100), 0])
{ icon_sprites_next2; }
switch (FEAT_TRAINS, SELF, type_head_car_motor_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100), 0])
{ icon_sprites_next3; }
switch (FEAT_TRAINS, SELF, type_head_car_motor_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_YELLOW, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next4;
  3: type_head_car_motor_pant_car2;
  4: type_head_car_motor_pant_car3;
  5: icon_sprites_nexta;
     return CB_FAILED; }
// [678] Прицепной моторный, прицепной с токоприёмником или прицепной
switch (FEAT_TRAINS, SELF, type_car_motor_car_pant_car3,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_BLUE, 0x100), 0])
{ icon_sprites_next2; }
switch (FEAT_TRAINS, SELF, type_car_motor_car_pant_car2,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_LTBLUE, 0x100), 0])
{ icon_sprites_next3; }
switch (FEAT_TRAINS, SELF, type_car_motor_car_pant_car_add_mandatory,
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | ICO_GREEN, 0x100),
  getbits(extra_callback_info1, 8, 8) ])
{ 1: icon_sprites_next1;
  2: icon_sprites_next4;
  3: type_car_motor_car_pant_car2;
  4: type_car_motor_car_pant_car3;
  5: icon_sprites_nexta;
     return CB_FAILED; }

// end
