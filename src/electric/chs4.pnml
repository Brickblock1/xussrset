 // chs4

// Спрайты
// 1965-1966: 1 заводская (годы выпуска)
// 1967-1976: 2 заводские, вместо первой
// с 1976   : +3 деповских, для любого года выпуска

#define IMAGEFILE  "src/electric/chs4.png"

// покупка
purchase_spriteset(chs4, 0, 0)

// нет тока
spriteset (chs4_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 69, 0)
} 

// аверс: погрузка/перемещение
spriteset (chs4_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 136, 0)
} 

spriteset (chs4_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 203, 0)
} 

spritegroup chs4_spritegroup
{
  loading: chs4_loading_spriteset;
  loaded: chs4_traveling_spriteset;
}

spriteset (chs4_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 270, 0)
} 

// 2: покупка
purchase_spriteset(chs4_v2, 0, 20)

// 2: нет тока
spriteset (chs4_v2_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 362, 0)
} 

// 2: обычный: погрузка/перемещение
spriteset (chs4_v2_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 429, 0)
} 

spriteset (chs4_v2_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 496, 0)
} 

spritegroup chs4_v2_spritegroup
{
  loading: chs4_v2_loading_spriteset;
  loaded: chs4_v2_traveling_spriteset;
}

spriteset (chs4_v2_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 563, 0)
} 

// 3: нет тока
spriteset (chs4_v3_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 655, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs4_v3_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 722, 0)
} 

spriteset (chs4_v3_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 789, 0)
} 

spritegroup chs4_v3_spritegroup
{
  loading: chs4_v3_loading_spriteset;
  loaded: chs4_v3_traveling_spriteset;
}

spriteset (chs4_v3_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 856, 0)
} 

// 4: нет тока
spriteset (chs4_v4_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 948, 0)
} 

// 4: обычный: погрузка/перемещение
spriteset (chs4_v4_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 1015, 0)
} 

spriteset (chs4_v4_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 1082, 0)
} 

spritegroup chs4_v4_spritegroup
{
  loading: chs4_v4_loading_spriteset;
  loaded: chs4_v4_traveling_spriteset;
}

spriteset (chs4_v4_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 1149, 0)
} 

// 5: нет тока
spriteset (chs4_v5_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 1241, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs4_v5_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 1308, 0)
} 

spriteset (chs4_v5_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 1375, 0)
} 

spritegroup chs4_v5_spritegroup
{
  loading: chs4_v5_loading_spriteset;
  loaded: chs4_v5_traveling_spriteset;
}
                 
spriteset (chs4_v5_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 1442, 0)
} 

// 6: нет тока
spriteset (chs4_v6_notpowered_spriteset, IMAGEFILE)
{
  s12_template(0, 1534, 0)
} 

// 6: обычный: погрузка/перемещение
spriteset (chs4_v6_loading_spriteset, IMAGEFILE)
{
  s12_template(0, 1601, 0)
} 

spriteset (chs4_v6_traveling_spriteset, IMAGEFILE)
{
  s12_template(0, 1668, 0)
} 

spritegroup chs4_v6_spritegroup
{
  loading: chs4_v6_loading_spriteset;
  loaded: chs4_v6_traveling_spriteset;
}

spriteset (chs4_v6_speedoverTH_spriteset, IMAGEFILE)
{
  s12_template(0, 1735, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, chs4_get_spriteset2,
  ((LOAD_TEMP(1) > threshold_of_speed()) + 1) *
    (!(vehicle_is_not_powered || vehicle_is_in_depot)) +
  // поправка на нет тока
  ((build_year >= 1967) * 3) +
  (((LOAD_TEMP(2) >= 1976) && (build_year < 1967) &&
    (cargo_subtype > 0)) * 6) +
  cargo_subtype * 3
)
{
  0: chs4_notpowered_spriteset;
  1: chs4_spritegroup;
  2: chs4_speedoverTH_spriteset;
  3: chs4_v2_notpowered_spriteset;
  4: chs4_v2_spritegroup;
  5: chs4_v2_speedoverTH_spriteset;
  6: chs4_v3_notpowered_spriteset;
  7: chs4_v3_spritegroup;
  8: chs4_v3_speedoverTH_spriteset;

  9: chs4_v4_notpowered_spriteset;
  10: chs4_v4_spritegroup;
  11: chs4_v4_speedoverTH_spriteset;
  12: chs4_v5_notpowered_spriteset;
  13: chs4_v5_spritegroup;
  14: chs4_v5_speedoverTH_spriteset;
  15: chs4_v6_notpowered_spriteset;
  16: chs4_v6_spritegroup;
  chs4_v6_speedoverTH_spriteset;
}

switch (FEAT_TRAINS, PARENT, chs4_get_spriteset1,
[ STORE_TEMP(count_veh_id(chs4), 0),                         
  STORE_TEMP(current_speed, 1),                              
  STORE_TEMP(date_of_last_service, 2) ])                     
{
  chs4_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, chs4_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  chs4_get_spriteset1;
}

// покупка
switch (FEAT_TRAINS, SELF, chs4_get_purchase_spriteset,
  current_year >= 1967)
{
  0: chs4_purchase_spriteset;
  chs4_v2_purchase_spriteset;
}

switch (FEAT_TRAINS, SELF, chs4_cargo_subtype_text4,
  current_year >= 1976)
{
  1: string(STR_REFIT_RZD1);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, chs4_cargo_subtype_text3,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_V1);
  1: string(STR_REFIT_FACTORY_V2);
  2: chs4_cargo_subtype_text4;
  3: string(STR_REFIT_RZD2);
  4: string(STR_REFIT_UKRAINIAN_RAILWAY_DEPOT);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, chs4_cargo_subtype_text2,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY);
  1: chs4_cargo_subtype_text4;
  2: string(STR_REFIT_RZD2);
  3: string(STR_REFIT_UKRAINIAN_RAILWAY_DEPOT);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, chs4_cargo_subtype_text,
  build_year >= 1967)
{
  0: chs4_cargo_subtype_text2;
  chs4_cargo_subtype_text3;
}

// Макс. скорость: 160 км/ч (без вагонов 180), с 1990 - 140 км/ч
#define MAX_SPEED 160

switch (FEAT_TRAINS, SELF, chs4_purchase_speed,
  MAX_SPEED)
{
  return;
}

switch (FEAT_TRAINS, SELF, chs4_speed,
[
  STORE_TEMP(get_max_speed(30, 140, MAX_SPEED), 0),
  is_penalise_speed() ? get_penalised_speed(LOAD_TEMP(0)) : LOAD_TEMP(0)
])
{
  return;
}

#undef MAX_SPEED

engine_penalise_speed0(chs4)

item (FEAT_TRAINS, chs4) 
{
  property
  {
    name: string(STR_CHS4_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1965), 1, 1);
    vehicle_life: 30; // срок службы
    model_life: get_model_life(1965,1972);
    retire_early: get_retire_early(1965,1972); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: 108;
    running_cost_factor: get_electric_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_ac_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 6710 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 1;
    weight: 123 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(165.0, 123);
    length: 8;
    visual_effect_and_powered: electric_visual_effect_and_powered(0);
  }
  graphics {
    default: chs4_get_spriteset;
    purchase: chs4_get_purchase_spriteset;
    articulated_part: articulated_part_dummy4;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: return string(STR_CHS4_PURCHASE_HINT);
    cargo_subtype_text: chs4_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: chs4_speed;
    purchase_speed: chs4_purchase_speed;
    bitmask_vehicle_info: chs4_bitmask_vehicle_info;
  }
}
