 // chs8

// Спрайты
// 1983-2000: 2 заводские
// с 1990   : +1 деповская
// с 1995   : +7 деповских

#define IMAGEFILE  "src/electric/chs8.png"

// покупка
spriteset (chs8_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 0)
}

// нет тока
spriteset (chs8_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 50, 0)
} 

// аверс: погрузка/перемещение
spriteset (chs8_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 116, 0)
} 

spriteset (chs8_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 182, 0)
} 

spritegroup chs8_spritegroup
{
  loading: chs8_loading_spriteset;
  loaded: chs8_traveling_spriteset;
}

spriteset (chs8_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 248, 0)
} 

// нет тока
spriteset (chs8_b_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 50, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_spriteset, IMAGEFILE)
{
  s9_template(440, 116, 0)
} 

// 2: нет тока
spriteset (chs8_v2_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 330, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v2_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 396, 0)
} 

spriteset (chs8_v2_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 462, 0)
} 

spritegroup chs8_v2_spritegroup
{
  loading: chs8_v2_loading_spriteset;
  loaded: chs8_v2_traveling_spriteset;
}

spriteset (chs8_v2_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 528, 0)
} 

spriteset (chs8_b_v2_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 330, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v2_spriteset, IMAGEFILE)
{
  s9_template(440, 396, 0)
} 

// 3: нет тока
spriteset (chs8_v3_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 610, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v3_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 676, 0)
} 

spriteset (chs8_v3_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 742, 0)
} 

spritegroup chs8_v3_spritegroup
{
  loading: chs8_v3_loading_spriteset;
  loaded: chs8_v3_traveling_spriteset;
}

spriteset (chs8_v3_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 808, 0)
} 

spriteset (chs8_b_v3_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 610, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v3_spriteset, IMAGEFILE)
{
  s9_template(440, 676, 0)
} 

// 4: нет тока
spriteset (chs8_v4_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 890, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v4_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 956, 0)
} 

spriteset (chs8_v4_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 1022, 0)
} 

spritegroup chs8_v4_spritegroup
{
  loading: chs8_v4_loading_spriteset;
  loaded: chs8_v4_traveling_spriteset;
}

spriteset (chs8_v4_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 1088, 0)
} 

// b: нет тока
spriteset (chs8_b_v4_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 890, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v4_spriteset, IMAGEFILE)
{
  s9_template(440, 956, 0)
} 

// 5: нет тока
spriteset (chs8_v5_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 1170, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v5_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 1236, 0)
} 

spriteset (chs8_v5_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 1302, 0)
} 

spritegroup chs8_v5_spritegroup
{
  loading: chs8_v5_loading_spriteset;
  loaded: chs8_v5_traveling_spriteset;
}
                 
spriteset (chs8_v5_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 1368, 0)
} 

spriteset (chs8_b_v5_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 1170, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_b_v5_spriteset, IMAGEFILE)
{
  s9_template(440, 1236, 0)
} 

// 6: нет тока
spriteset (chs8_v6_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 1450, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v6_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 1516, 0)
} 

spriteset (chs8_v6_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 1582, 0)
} 

spritegroup chs8_v6_spritegroup
{
  loading: chs8_v6_loading_spriteset;
  loaded: chs8_v6_traveling_spriteset;
}

spriteset (chs8_v6_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 1648, 0)
} 

spriteset (chs8_b_v6_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 1450, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v6_spriteset, IMAGEFILE)
{
  s9_template(440, 1516, 0)
} 

// 7: нет тока
spriteset (chs8_v7_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 1730, 0)
} 

// аверс: погрузка/перемещение
spriteset (chs8_v7_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 1796, 0)
} 

spriteset (chs8_v7_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 1862, 0)
} 

spritegroup chs8_v7_spritegroup
{
  loading: chs8_v7_loading_spriteset;
  loaded: chs8_v7_traveling_spriteset;
}

spriteset (chs8_v7_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 1928, 0)
} 

// нет тока
spriteset (chs8_b_v7_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 1730, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v7_spriteset, IMAGEFILE)
{
  s9_template(440, 1796, 0)
} 

// 8: нет тока
spriteset (chs8_v8_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 2010, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v8_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 2076, 0)
} 

spriteset (chs8_v8_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 2142, 0)
} 

spritegroup chs8_v8_spritegroup
{
  loading: chs8_v8_loading_spriteset;
  loaded: chs8_v8_traveling_spriteset;
}

spriteset (chs8_v8_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 2208, 0)
} 

spriteset (chs8_b_v8_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 2010, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v8_spriteset, IMAGEFILE)
{
  s9_template(440, 2076, 0)
} 

// 9: нет тока
spriteset (chs8_v9_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 2290, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v9_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 2356, 0)
} 

spriteset (chs8_v9_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 2422, 0)
} 

spritegroup chs8_v9_spritegroup
{
  loading: chs8_v9_loading_spriteset;
  loaded: chs8_v9_traveling_spriteset;
}

spriteset (chs8_v9_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 2488, 0)
} 

spriteset (chs8_b_v9_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 2290, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v9_spriteset, IMAGEFILE)
{
  s9_template(440, 2356, 0)
} 

// 10: нет тока
spriteset (chs8_v10_notpowered_spriteset, IMAGEFILE)
{
  s9_template(0, 2570, 0)
} 

// обычный: погрузка/перемещение
spriteset (chs8_v10_loading_spriteset, IMAGEFILE)
{
  s9_template(0, 2636, 0)
} 

spriteset (chs8_v10_traveling_spriteset, IMAGEFILE)
{
  s9_template(0, 2702, 0)
} 

spritegroup chs8_v10_spritegroup
{
  loading: chs8_v10_loading_spriteset;
  loaded: chs8_v10_traveling_spriteset;
}

spriteset (chs8_v10_speedover50_spriteset, IMAGEFILE)
{
  s9_template(0, 2768, 0)
} 

// b: нет тока
spriteset (chs8_b_v10_notpowered_spriteset, IMAGEFILE)
{
  s9_template(440, 2570, 0)
} 

// погрузка/перемещение
spriteset (chs8_b_v10_spriteset, IMAGEFILE)
{
  s9_template(440, 2636, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, chs8_get_spriteset2,
  (((LOAD_TEMP(0) - count_veh_id(chs8)) % 2) * 3) +
  // поправка на нет тока
  ((LOAD_TEMP(1) > threshold_of_speed()) + 1) *
    (!(vehicle_is_not_powered || vehicle_is_in_depot)) +
  cargo_subtype * 6
)
{
  0: chs8_notpowered_spriteset;
  1: chs8_spritegroup;
  2: chs8_speedover50_spriteset;
  3: chs8_b_notpowered_spriteset;
  4..5: chs8_b_spriteset;

  6: chs8_v2_notpowered_spriteset;
  7: chs8_v2_spritegroup;
  8: chs8_v2_speedover50_spriteset;
  9: chs8_b_v2_notpowered_spriteset;
  10..11: chs8_b_v2_spriteset;
  12: chs8_v3_notpowered_spriteset;
  13: chs8_v3_spritegroup;
  14: chs8_v3_speedover50_spriteset;
  15: chs8_b_v3_notpowered_spriteset;
  16..17: chs8_b_v3_spriteset;
  18: chs8_v4_notpowered_spriteset;
  19: chs8_v4_spritegroup;
  20: chs8_v4_speedover50_spriteset;
  21: chs8_b_v4_notpowered_spriteset;
  22..23: chs8_b_v4_spriteset;
  24: chs8_v5_notpowered_spriteset;
  25: chs8_v5_spritegroup;
  26: chs8_v5_speedover50_spriteset;
  27: chs8_b_v5_notpowered_spriteset;
  28..29: chs8_b_v5_spriteset;
  30: chs8_v6_notpowered_spriteset;
  31: chs8_v6_spritegroup;
  32: chs8_v6_speedover50_spriteset;
  33: chs8_b_v6_notpowered_spriteset;
  34..35: chs8_b_v6_spriteset;
  36: chs8_v7_notpowered_spriteset;
  37: chs8_v7_spritegroup;
  38: chs8_v7_speedover50_spriteset;
  39: chs8_b_v7_notpowered_spriteset;
  40..41: chs8_b_v7_spriteset;
  42: chs8_v8_notpowered_spriteset;
  43: chs8_v8_spritegroup;
  44: chs8_v8_speedover50_spriteset;
  45: chs8_b_v8_notpowered_spriteset;
  46..47: chs8_b_v8_spriteset;
  48: chs8_v9_notpowered_spriteset;
  49: chs8_v9_spritegroup;
  50: chs8_v9_speedover50_spriteset;
  51: chs8_b_v9_notpowered_spriteset;
  52..53: chs8_b_v9_spriteset;
  54: chs8_v10_notpowered_spriteset;
  55: chs8_v10_spritegroup;
  56: chs8_v10_speedover50_spriteset;
  57: chs8_b_v10_notpowered_spriteset;
  58..59: chs8_b_v10_spriteset;
  align_9_spriteset; // параллелепипед
}

switch (FEAT_TRAINS, PARENT, chs8_get_spriteset1,
[
  STORE_TEMP(count_veh_id(chs8), 0),
  STORE_TEMP(current_speed, 1)
])
{
  chs8_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, chs8_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  chs8_get_spriteset1;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, chs8_can_attach_wagon,
  0)
{
  return CB_RESULT_ATTACH_ALLOW;
}

// Если хотя бы 2 не следуют др. за др., то не выпускать
switch (FEAT_TRAINS, PARENT, chs8_start_stop2,
[
  set_offset_to(2),
  prev_vehicle_type_id() == chs8
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_NEED_AT_LEAST_2_CONSECUTIVE_ENGINE);
}

// Если локомотивов меньше двух, то не выпускать
switch (FEAT_TRAINS, PARENT, chs8_start_stop,
  count_veh_id(chs8) >= 2)
{
  1: chs8_start_stop2;
  return string(STR_START_STOP_NEED_2_OR_MORE_ENGINE);
}

switch (FEAT_TRAINS, SELF, chs8_cargo_subtype_text3,
  current_year >= 1995)
{
  1: string(STR_REFIT_RZD_WITH_YELLOW_STRIPE);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, chs8_cargo_subtype_text2,
  current_year >= 1990)
{
  1: string(STR_REFIT_DEPOT_MPS);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, chs8_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_SKODA1);
  1: string(STR_REFIT_FACTORY_SKODA2);
  2: chs8_cargo_subtype_text2;
  3: chs8_cargo_subtype_text3;
  4: string(STR_REFIT_RZD_WITH_BLUE_STRIPE);
  5: string(STR_REFIT_RZD_SOCHI);
  6: string(STR_REFIT_RZD_KUBAN);
  7: string(STR_REFIT_UKRAINIAN_RAILWAY_ARENA_2000);
  8: string(STR_REFIT_UKRAINIAN_RAILWAY_STANDARD_TCH1_KIEV);
  9: string(STR_REFIT_UKRAINIAN_RAILWAY_CAPITAL_EXPRESS);
  return CB_RESULT_NO_TEXT;
}

// Макс. скорость: 160 км/ч
#define MAX_SPEED num_vehs_in_consist > 2 ? 160 : 180

switch (FEAT_TRAINS, SELF, chs8_purchase_speed,
  160)
{
  return;
}

switch (FEAT_TRAINS, SELF, chs8_speed,
[
  STORE_TEMP(MAX_SPEED, 0),
  is_penalise_speed() ? get_penalised_speed(LOAD_TEMP(0)) : LOAD_TEMP(0)
])
{
  return;
}

#undef MAX_SPEED

switch (FEAT_TRAINS, SELF, chs8_bitmask_vehicle_info3,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(chs8), 0),
  (last_computed_result && (position_in_consist == 2 * LOAD_TEMP(0)) &&
    LOAD_TEMP(0) < 2)
])
{
  1: return 0;
  return FLAG_PENALISE_SPEED;
}

switch (FEAT_TRAINS, PARENT, chs8_bitmask_vehicle_info2,
[
  STORE_TEMP(count_veh_id(chs8), 0),
  vehicle_type_id == chs8
])
{
  chs8_bitmask_vehicle_info3;
}

switch (FEAT_TRAINS, SELF, chs8_bitmask_vehicle_info,
  position_in_consist == 0)
{
  1: return 0;
  chs8_bitmask_vehicle_info2;
}

switch (FEAT_TRAINS, SELF, chs8_cost_factor,
  (current_year >= 1985) +
  (current_year >= 1991) +
  (current_year >= 1996))
{
  1: return 180;
  2: return 200;
  3: return 224;
  return 169;
}

item (FEAT_TRAINS, chs8) 
{
  property
  {
    name: string(STR_CHS8_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1983, 1, 1);
    vehicle_life: 40; // срок службы
    model_life: get_model_life(1983,2000); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: get_electric_cost_factor();
    running_cost_factor: get_electric_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_ac_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 5765 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 1;
    weight: 87 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: (144.0/175/9.8);
    length: 8;
    visual_effect_and_powered: electric_visual_effect_and_powered(0);
  }
  graphics {
    default: chs8_get_spriteset;
    purchase: chs8_purchase_spriteset;
    articulated_part: articulated_part_dummy1;
    can_attach_wagon: chs8_can_attach_wagon;
    start_stop: chs8_start_stop;
    additional_text: return string(STR_CHS8_PURCHASE_HINT);
    cargo_subtype_text: chs8_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: chs8_speed;
    purchase_speed: chs8_purchase_speed;
    bitmask_vehicle_info: chs8_bitmask_vehicle_info;
    cost_factor: chs8_cost_factor;
  }
}
