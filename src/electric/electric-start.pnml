// некорректные составы (собранные из разных сетов)

switch (FEAT_TRAINS, PARENT, wrong_consist_start_stop,
  is_wrong_consist())
{
  1: return string(STR_START_STOP_WRONG_CONSIST);
     return CB_RESULT_NO_TEXT;
}

// для локомотивов, требующих 2+ часть, необходимо проверить, что в конце он не одинок
// (ВЛ80С, 2ЭС5К, 3ЭС5К, ВЛ11, 2ЭС4К, 2ЭС6, ВЛ82, ВЛ15 и др)

switch (FEAT_TRAINS, PARENT, q_2ev120_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2ev120) &&
   (!(prev_vehicle_type_id() == _2ev120)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     return wrong_consist_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl15_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl15) &&
   (!(prev_vehicle_type_id() == vl15)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2ev120_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl82_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl82) &&
   (!(prev_vehicle_type_id() == vl82))])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl15_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl82m_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == vl82m) ||
    (LOAD_TEMP(3) == vl82m_type1978)) &&
   (!((prev_vehicle_type_id() == vl82m) ||
      (prev_vehicle_type_id() == vl82m_type1978) ))])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl82_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl11_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11) &&
   (!(prev_vehicle_type_id() == vl11)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl82m_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl11m_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11m) &&
   (!(prev_vehicle_type_id() == vl11m)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl11_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl80s_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl80s) &&
   (!(prev_vehicle_type_id() == vl80s)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl11m_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl85_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl85) &&
   (!(prev_vehicle_type_id() == vl85)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl80s_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es5_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es5) ||
    (LOAD_TEMP(3) == _2es5_type2015) ) &&
   (!((prev_vehicle_type_id() == _2es5) ||
      (prev_vehicle_type_id() == _2es5_type2015))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl85_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es5s_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es5s) &&
   (!(prev_vehicle_type_id() == _2es5s)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es5_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es8_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es8) ||
    (LOAD_TEMP(3) == _3es8)) &&
   (!((prev_vehicle_type_id() == _2es8) ||
      (prev_vehicle_type_id() == _3es8) ||
      (prev_vehicle_type_id() == _3es8_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es5s_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es6_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es6_pre) ||
    (LOAD_TEMP(3) == _2es6_type2007) ||
    (LOAD_TEMP(3) == _2es6_type2009) ||
    (LOAD_TEMP(3) == _2es6_type2012) ) &&
   (!((prev_vehicle_type_id() == _2es6_pre) ||
      (prev_vehicle_type_id() == _2es6_type2007) ||
      (prev_vehicle_type_id() == _2es6_type2009) ||
      (prev_vehicle_type_id() == _2es6_type2012) ||
      (prev_vehicle_type_id() == _2es6_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es8_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es7_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es7_pre) ||
    (LOAD_TEMP(3) == _2es7)) &&
   (!((prev_vehicle_type_id() == _2es7_pre) ||
      (prev_vehicle_type_id() == _2es7))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es6_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es10_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es10) ||
    (LOAD_TEMP(3) == _2es10_type2020)) &&
   (!((prev_vehicle_type_id() == _2es10) ||
      (prev_vehicle_type_id() == _2es10_type2020) ||
      (prev_vehicle_type_id() == _2es10_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es7_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2_3es5k_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es5k_pre) ||
    (LOAD_TEMP(3) == _2es5k_type2006) ||
    (LOAD_TEMP(3) == _2es5k_type2007) ||
    (LOAD_TEMP(3) == _2es5k_type2009) ||
    (LOAD_TEMP(3) == _2es5k_type2010) ||
    (LOAD_TEMP(3) == _2es5k_type2013) ||
    (LOAD_TEMP(3) == _3es5k_type2007) ||
    (LOAD_TEMP(3) == _3es5k_type2009) ||
    (LOAD_TEMP(3) == _3es5k_type2010) ||
    (LOAD_TEMP(3) == _3es5k_type2012) ) &&
   (!((prev_vehicle_type_id() == _2es5k_pre) ||
      (prev_vehicle_type_id() == _2es5k_type2006) ||
      (prev_vehicle_type_id() == _2es5k_type2007) ||
      (prev_vehicle_type_id() == _2es5k_type2009) ||
      (prev_vehicle_type_id() == _2es5k_type2010) ||
      (prev_vehicle_type_id() == _2es5k_type2013) ||
      (prev_vehicle_type_id() == _3es5k_type2007) ||
      (prev_vehicle_type_id() == _3es5k_type2009) ||
      (prev_vehicle_type_id() == _3es5k_type2010) ||
      (prev_vehicle_type_id() == _3es5k_type2012) ||
      (prev_vehicle_type_id() == _3es5k_m_type2007) ||
      (prev_vehicle_type_id() == _3es5k_m_type2009) ||
      (prev_vehicle_type_id() == _3es5k_m_type2010) ||
      (prev_vehicle_type_id() == _3es5k_m_type2012) )) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es10_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2_3es4k_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es4k) ||
    (LOAD_TEMP(3) == _2es4k_type2009) ||
    (LOAD_TEMP(3) == _2es4k_type2010) ||
    (LOAD_TEMP(3) == _2es4k_type2011) ||
    (LOAD_TEMP(3) == _2es4k_type2012) ||
    (LOAD_TEMP(3) == _3es4k)) &&
   (!((prev_vehicle_type_id() == _2es4k) ||
      (prev_vehicle_type_id() == _2es4k_type2009) ||
      (prev_vehicle_type_id() == _2es4k_type2010) ||
      (prev_vehicle_type_id() == _2es4k_type2011) ||
      (prev_vehicle_type_id() == _2es4k_type2012) ||
      (prev_vehicle_type_id() == _3es4k) ||
      (prev_vehicle_type_id() == _3es4k_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2_3es5k_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2el4_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2el4) &&
   (!(prev_vehicle_type_id() == _2el4) ) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2_3es4k_start_stop;
}

switch (FEAT_TRAINS, PARENT, any_start_stop_mid,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section()])
{
  1: return string(STR_START_STOP_MIDDLE_MUST_NOT_BE_LAST);
     q_2el4_start_stop;
}

// Моторные думпкары

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd_total,
  (count_veh_id(pe2) + count_veh_id(pe2m) + count_veh_id(pe2u)) * 3 -
   count_veh_id(pwd_dumpcar) >= 0)
{
  1: any_start_stop_mid;
  return string(STR_START_STOP_POWER_UNIT_REQUIRED);
}

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd4,
[  set_offset_to(num_vehs_in_consist-8),
   prev_vehicle_type_id()])
{
   pe2: any_start_stop_pwdd_total;
  pe2m: any_start_stop_pwdd_total;
  pe2u: any_start_stop_pwdd_total;
  return string(STR_START_STOP_POWER_UNIT_REQUIRED);
}

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd3,
[  set_offset_to(num_vehs_in_consist-6),
   prev_vehicle_type_id()])
{
  pwd_dumpcar: any_start_stop_pwdd4;
          pe2: any_start_stop_pwdd_total;
         pe2m: any_start_stop_pwdd_total;
         pe2u: any_start_stop_pwdd_total;
  return string(STR_START_STOP_POWER_UNIT_REQUIRED);
}

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd2,
[  set_offset_to(num_vehs_in_consist-4),
   prev_vehicle_type_id()])
{
  pwd_dumpcar: any_start_stop_pwdd3;
          pe2: any_start_stop_pwdd_total;
         pe2m: any_start_stop_pwdd_total;
         pe2u: any_start_stop_pwdd_total;
  return string(STR_START_STOP_POWER_UNIT_REQUIRED);
}

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd1,
[  set_offset_to(num_vehs_in_consist-2),
   prev_vehicle_type_id()])
{
  pwd_dumpcar: any_start_stop_pwdd2;
  any_start_stop_pwdd_total;
}

switch (FEAT_TRAINS, PARENT, any_start_stop_pwdd,
  (count_veh_id(pwd_dumpcar) > 0) * 2 +
  ((count_veh_id(pe2) == 0) && (count_veh_id(pe2m) == 0) && (count_veh_id(pe2u) == 0)))
{
  3: return string(STR_START_STOP_POWER_UNIT_REQUIRED);
  2: any_start_stop_pwdd1;
  any_start_stop_pwdd_total;
}

// некорректные грузы

switch (FEAT_TRAINS, PARENT, any_start_stop,
  has_inadmissible_cargo())
{
  1: return string(STR_START_STOP_INADMISSIBLE_CARGO);
     any_start_stop_pwdd;
}
