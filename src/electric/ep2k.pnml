 // ep2k

// Спрайты

#define IMAGEFILE  "src/electric/ep2k.png"

// покупка
purchase_spriteset(ep2k, 0, 0)

// нет тока
spriteset (ep2k_notpowered_spriteset, IMAGEFILE)
{
  s13_template(0, 37, 0)
} 

// аверс: погрузка/перемещение
spriteset (ep2k_loading_spriteset, IMAGEFILE)
{
  s13_template(0, 104, 0)
} 

spriteset (ep2k_traveling_spriteset, IMAGEFILE)
{
  s13_template(0, 171, 0)
} 

spritegroup ep2k_spritegroup
{
  loading: ep2k_loading_spriteset;
  loaded: ep2k_traveling_spriteset;
}

spriteset (ep2k_speedoverTH_spriteset, IMAGEFILE)
{
  s13_template(0, 238, 0)
} 

// нет тока
spriteset (ep2k_b_notpowered_spriteset, IMAGEFILE)
{
  s13_template(452, 37, 0)
} 

// аверс: погрузка/перемещение
spriteset (ep2k_b_loading_spriteset, IMAGEFILE)
{
  s13_template(452, 104, 0)
} 

spriteset (ep2k_b_traveling_spriteset, IMAGEFILE)
{
  s13_template(452, 171, 0)
} 

spritegroup ep2k_b_spritegroup
{
  loading: ep2k_b_loading_spriteset;
  loaded: ep2k_b_traveling_spriteset;
}

spriteset (ep2k_b_speedoverTH_spriteset, IMAGEFILE)
{
  s13_template(452, 238, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, ep2k_get_spriteset2,
  (((LOAD_TEMP(0) - count_veh_id(ep2k)) % 2) * 3) +
  // поправка на нет тока
  ((LOAD_TEMP(1) > threshold_of_speed()) + 1) *
    (!(vehicle_is_not_powered || vehicle_is_in_depot))
)
{
  0: ep2k_notpowered_spriteset;
  1: ep2k_spritegroup;
  2: ep2k_speedoverTH_spriteset;
  3: ep2k_b_notpowered_spriteset;
  4: ep2k_b_spritegroup;
  5: ep2k_b_speedoverTH_spriteset;
  align_13_spriteset; // параллелепипед
}

switch (FEAT_TRAINS, PARENT, ep2k_get_spriteset1,
[
  STORE_TEMP(count_veh_id(ep2k), 0),
  STORE_TEMP(current_speed, 1)
])
{
  ep2k_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, ep2k_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  ep2k_get_spriteset1;
}


engine_speed_with_reduce(ep2k, 160, 130, 30)

engine_penalise_speed(ep2k, 2)

item (FEAT_TRAINS, ep2k) 
{
  property
  {
    name: string(STR_EP2K_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(2006), 1, 1);
    vehicle_life: 30; // срок службы
    model_life: get_model_life(2006,2025);
    retire_early: get_retire_early(2006,2025); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cost_factor: get_electric_cost_factor();
    running_cost_factor: get_electric_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 160 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 5745 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    weight: 135 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(167.0, 135);
    length: 8;
    visual_effect_and_powered: electric_visual_effect_and_powered(0);
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cargo_capacity: 1;
  }
  graphics {
    default: ep2k_get_spriteset;
    purchase: ep2k_purchase_spriteset;
    articulated_part: articulated_part_dummy5;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: return string(STR_EP2K_PURCHASE_HINT);
    speed: ep2k_speed;
    purchase_speed: ep2k_purchase_speed;
    bitmask_vehicle_info: ep2k_bitmask_vehicle_info;
    cargo_subtype_text: cargo_subtype_text_default;
    cargo_capacity: return 0;
    cost_factor: return 432;
  }
}
