 // f

// Спрайты

#define IMAGEFILE  "src/electric/f.png"

// покупка
spriteset (f_purchase_spriteset, IMAGEFILE)
{
  s14_purchase_template(0, 23, -12)
}

// обычный: погрузка/перемещение
spriteset (f_loading_spriteset, IMAGEFILE)
{
  s14_template(0, 23, 0)
} 

spriteset (f_traveling_spriteset, IMAGEFILE)
{
  s14_template(0, 90, 0)
} 

spritegroup f_spritegroup
{
  loading: f_loading_spriteset;
  loaded: f_traveling_spriteset;
}

spriteset (f_speedover50_spriteset, IMAGEFILE)
{
  s14_template(0, 157, 0)
} 

// развёрнутый: погрузка/перемещение
spriteset (f_r_loading_spriteset, IMAGEFILE)
{
  s14_template(440, 23, 0)
} 

spriteset (f_r_traveling_spriteset, IMAGEFILE)
{
  s14_template(440, 90, 0)
} 

spritegroup f_r_spritegroup
{
  loading: f_r_loading_spriteset;
  loaded: f_r_traveling_spriteset;
}

spriteset (f_r_speedover50_spriteset, IMAGEFILE)
{
  s14_template(440, 157, 0)
} 

// 2: обычный: погрузка/перемещение
spriteset (f_v2_loading_spriteset, IMAGEFILE)
{
  s14_template(0, 234, 0)
} 

spriteset (f_v2_traveling_spriteset, IMAGEFILE)
{
  s14_template(0, 301, 0)
} 

spritegroup f_v2_spritegroup
{
  loading: f_v2_loading_spriteset;
  loaded: f_v2_traveling_spriteset;
}

spriteset (f_v2_speedover50_spriteset, IMAGEFILE)
{
  s14_template(0, 368, 0)
} 

// развёрнутый: погрузка/перемещение
spriteset (f_r_v2_loading_spriteset, IMAGEFILE)
{
  s14_template(440, 234, 0)
} 

spriteset (f_r_v2_traveling_spriteset, IMAGEFILE)
{
  s14_template(440, 301, 0)
} 

spritegroup f_r_v2_spritegroup
{
  loading: f_r_v2_loading_spriteset;
  loaded: f_r_v2_traveling_spriteset;
}

spriteset (f_r_v2_speedover50_spriteset, IMAGEFILE)
{
  s14_template(440, 368, 0)
} 


#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, f_get_spriteset2,
  ((LOAD_TEMP(0) - count_veh_id(f)) % 2) +
  // x км/ч * 0.2778 == value
  ((LOAD_TEMP(1) > 13) * 2) +  // 50 км/ч --> 13.89
  cargo_subtype * 4
)
{
  0: f_spritegroup;
  1: f_r_spritegroup;
  2: f_speedover50_spriteset;
  3: f_r_speedover50_spriteset;
  4: f_v2_spritegroup;
  5: f_r_v2_spritegroup;
  6: f_v2_speedover50_spriteset;
  f_r_v2_speedover50_spriteset;
}

switch (FEAT_TRAINS, PARENT, f_get_spriteset1,
[
  STORE_TEMP(count_veh_id(f), 0),
  STORE_TEMP(current_speed, 1)
])
{
  f_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, f_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  f_get_spriteset1;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, f_can_attach_wagon,
  0)
{
  return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, f_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, f_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_F_REFIT_V1);
  1: string(STR_F_REFIT_V2);
  return CB_RESULT_NO_TEXT;
}

item (FEAT_TRAINS, f) 
{
  property
  {
    name: string(STR_F_NAME);
    climates_available: bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL);
    introduction_date: date(1959, 1, 1);
    vehicle_life: 15; // срок службы
    model_life: 15; // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    refittable_cargo_classes: bitmask(CC_PASSENGERS);
//    loading_speed: 12; // скорость погрузки/выгрузки, пассажиров
    cost_factor: 2;
    running_cost_factor: 10;
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 100 km/h;
    misc_flags: bitmask(TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: ELRL;
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 6080 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    dual_headed: 0;
    cargo_capacity: 1;
    weight: 138 ton;
    ai_engine_rank: 0;
    engine_class: ENGINE_CLASS_ELECTRIC;
    extra_power_per_wagon: 0 kW;
    tractive_effort_coefficient: 0.24622892;
    air_drag_coefficient: 0.06;
    shorten_vehicle: SHORTEN_TO_8_8;
    extra_weight_per_wagon: 0;
    bitmask_vehicle_info: 0;
    visual_effect_and_powered:
      visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 1, DISABLE_WAGON_POWER);
  }
  graphics {
    default: f_get_spriteset;
    purchase: f_purchase_spriteset;
    articulated_part: articulated_part_dummy6;
    can_attach_wagon: f_can_attach_wagon;
    start_stop: f_start_stop;
    additional_text: return string(STR_F_PURCHASE_HINT);
    cargo_subtype_text: f_cargo_subtype_text;
    cargo_capacity: return 0;
  }
}
