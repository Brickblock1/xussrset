 // fp

// Спрайты

#define IMAGEFILE  "src/electric/fp.png"

// покупка
spriteset (fp_purchase_spriteset, IMAGEFILE)
{
  s14_purchase_template(0, 23, -12)
}

// обычный: погрузка/перемещение
spriteset (fp_loading_spriteset, IMAGEFILE)
{
  s14_template(0, 23, 0)
} 

spriteset (fp_traveling_spriteset, IMAGEFILE)
{
  s14_template(0, 90, 0)
} 

spritegroup fp_spritegroup
{
  loading: fp_loading_spriteset;
  loaded: fp_traveling_spriteset;
}

spriteset (fp_speedover50_spriteset, IMAGEFILE)
{
  s14_template(0, 157, 0)
} 

// развёрнутый: погрузка/перемещение
spriteset (fp_r_loading_spriteset, IMAGEFILE)
{
  s14_template(440, 23, 0)
} 

spriteset (fp_r_traveling_spriteset, IMAGEFILE)
{
  s14_template(440, 90, 0)
} 

spritegroup fp_r_spritegroup
{
  loading: fp_r_loading_spriteset;
  loaded: fp_r_traveling_spriteset;
}

spriteset (fp_r_speedover50_spriteset, IMAGEFILE)
{
  s14_template(440, 157, 0)
} 

// 2: обычный: погрузка/перемещение
spriteset (fp_v2_loading_spriteset, IMAGEFILE)
{
  s14_template(0, 234, 0)
} 

spriteset (fp_v2_traveling_spriteset, IMAGEFILE)
{
  s14_template(0, 301, 0)
} 

spritegroup fp_v2_spritegroup
{
  loading: fp_v2_loading_spriteset;
  loaded: fp_v2_traveling_spriteset;
}

spriteset (fp_v2_speedover50_spriteset, IMAGEFILE)
{
  s14_template(0, 368, 0)
} 

// развёрнутый: погрузка/перемещение
spriteset (fp_r_v2_loading_spriteset, IMAGEFILE)
{
  s14_template(440, 234, 0)
} 

spriteset (fp_r_v2_traveling_spriteset, IMAGEFILE)
{
  s14_template(440, 301, 0)
} 

spritegroup fp_r_v2_spritegroup
{
  loading: fp_r_v2_loading_spriteset;
  loaded: fp_r_v2_traveling_spriteset;
}

spriteset (fp_r_v2_speedover50_spriteset, IMAGEFILE)
{
  s14_template(440, 368, 0)
} 


#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, fp_get_spriteset2,
  ((LOAD_TEMP(0) - count_veh_id(fp)) % 2) +
  ((LOAD_TEMP(1) > threshold_of_speed()) * 2) +
  cargo_subtype * 4
)
{
  0: fp_spritegroup;
  1: fp_r_spritegroup;
  2: fp_speedover50_spriteset;
  3: fp_r_speedover50_spriteset;
  4: fp_v2_spritegroup;
  5: fp_r_v2_spritegroup;
  6: fp_v2_speedover50_spriteset;
  fp_r_v2_speedover50_spriteset;
}

switch (FEAT_TRAINS, PARENT, fp_get_spriteset1,
[
  STORE_TEMP(count_veh_id(fp), 0),
  STORE_TEMP(current_speed, 1)
])
{
  fp_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, fp_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  fp_get_spriteset1;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, fp_can_attach_wagon,
  0)
{
  return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, fp_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, fp_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_FP_REFIT_V1);
  1: string(STR_FP_REFIT_V2);
  return CB_RESULT_NO_TEXT;
}

// меняем скорость: 160 до 1975, 120 - после
switch (FEAT_TRAINS, SELF, fp_speed,
  current_year >= 1975)
{
  0: return 160;
  return 120;
}

item (FEAT_TRAINS, fp) 
{
  property
  {
    name: string(STR_FP_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1960, 1, 1);
    vehicle_life: 20; // срок службы
    model_life: 20; // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    cost_factor: get_electric_cost_factor();
    running_cost_factor: get_electric_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 160 km/h;
    misc_flags: bitmask(TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: ELRL;
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 6090 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 1;
    weight: 131 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: 0.165913693;
    shorten_vehicle: SHORTEN_TO_8_8;
    visual_effect_and_powered: electric_visual_effect_and_powered(0);
  }
  graphics {
    default: fp_get_spriteset;
    purchase: fp_purchase_spriteset;
    articulated_part: articulated_part_dummy6;
    can_attach_wagon: fp_can_attach_wagon;
    start_stop: fp_start_stop;
    additional_text: return string(STR_FP_PURCHASE_HINT);
    cargo_subtype_text: fp_cargo_subtype_text;
    cargo_capacity: return 0;
    speed: fp_speed;
  }
}
