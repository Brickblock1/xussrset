 // vl61d

// Спрайты

#define IMAGEFILE  "src/electric/vl61-vl61d.png"

// покупка
spriteset (vl61d_purchase_spriteset, IMAGEFILE)
{
  s10_purchase_template(95, 604, -4)
}

// нет тока
spriteset (vl61d_notpowered_spriteset, IMAGEFILE)
{
  s10_template(95, 604, 0)
} 

// обычный: погрузка/перемещение
spriteset (vl61d_loading_spriteset, IMAGEFILE)
{
  s10_template(95, 671, 0)
} 

spriteset (vl61d_traveling_spriteset, IMAGEFILE)
{
  s10_template(95, 738, 0)
} 

spritegroup vl61d_spritegroup
{
  loading: vl61d_loading_spriteset;
  loaded: vl61d_traveling_spriteset;
}

spriteset (vl61d_speedover50_spriteset, IMAGEFILE)
{
  s10_template(95, 805, 0)
} 

// нет тока
spriteset (vl61d_b_notpowered_spriteset, IMAGEFILE)
{
  s10_template(536, 604, 0)
} 

// секция Б: погрузка/перемещение
spriteset (vl61d_b_loading_spriteset, IMAGEFILE)
{
  s10_template(536, 671, 0)
} 

spriteset (vl61d_b_traveling_spriteset, IMAGEFILE)
{
  s10_template(536, 738, 0)
} 

spritegroup vl61d_b_spritegroup
{
  loading: vl61d_b_loading_spriteset;
  loaded: vl61d_b_traveling_spriteset;
}

spriteset (vl61d_b_speedover50_spriteset, IMAGEFILE)
{
  s10_template(536, 805, 0)
} 

// 2: покупка
spriteset (vl61d_v2_purchase_spriteset, IMAGEFILE)
{
  s10_purchase_template(95, 897, -4)
}

// нет тока
spriteset (vl61d_v2_notpowered_spriteset, IMAGEFILE)
{
  s10_template(95, 897, 0)
}
 
// обычный: погрузка/перемещение
spriteset (vl61d_v2_loading_spriteset, IMAGEFILE)
{
  s10_template(95, 964, 0)
} 

spriteset (vl61d_v2_traveling_spriteset, IMAGEFILE)
{
  s10_template(95, 1031, 0)
} 

spritegroup vl61d_v2_spritegroup
{
  loading: vl61d_v2_loading_spriteset;
  loaded: vl61d_v2_traveling_spriteset;
}

spriteset (vl61d_v2_speedover50_spriteset, IMAGEFILE)
{
  s10_template(95, 1098, 0)
} 

// нет тока
spriteset (vl61d_b_v2_notpowered_spriteset, IMAGEFILE)
{
  s10_template(536, 897, 0)
}
 
// секция Б: погрузка/перемещение
spriteset (vl61d_b_v2_loading_spriteset, IMAGEFILE)
{
  s10_template(536, 964, 0)
} 

spriteset (vl61d_b_v2_traveling_spriteset, IMAGEFILE)
{
  s10_template(536, 1031, 0)
} 

spritegroup vl61d_b_v2_spritegroup
{
  loading: vl61d_b_v2_loading_spriteset;
  loaded: vl61d_b_v2_traveling_spriteset;
}

spriteset (vl61d_b_v2_speedover50_spriteset, IMAGEFILE)
{
  s10_template(536, 1098, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, vl61d_get_spriteset2,
  (((LOAD_TEMP(0) - count_veh_id(vl61d)) % 2) * 3) +
  // поправка на нет тока
  (((LOAD_TEMP(1) > threshold_of_speed()) + 1) *
    (!(vehicle_is_not_powered || vehicle_is_in_depot))) +
  ((current_year >= 1972) * 6)
)
{
  0: vl61d_notpowered_spriteset;
  1: vl61d_spritegroup;
  2: vl61d_speedover50_spriteset;
  3: vl61d_b_notpowered_spriteset;
  4: vl61d_b_spritegroup;
  5: vl61d_b_speedover50_spriteset;
  6: vl61d_v2_notpowered_spriteset;
  7: vl61d_v2_spritegroup;
  8: vl61d_v2_speedover50_spriteset;
  9: vl61d_b_v2_notpowered_spriteset;
  10: vl61d_b_v2_spritegroup;
  11: vl61d_b_v2_speedover50_spriteset;
  align_10_spriteset; // параллелепипед
}

switch (FEAT_TRAINS, PARENT, vl61d_get_spriteset1,
[
  STORE_TEMP(count_veh_id(vl61d), 0),
  STORE_TEMP(current_speed, 1)
])
{
  vl61d_get_spriteset2;
}

// Если рисуем на карте и следующий в цепочке вагон скрыт, то
// отдаём пустышку
switch (FEAT_TRAINS, SELF, vl61d_get_spriteset,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  vl61d_get_spriteset1;
}

// Что присоединяем?
switch (FEAT_TRAINS, SELF, vl61d_can_attach_wagon,
  0)
{
  return CB_RESULT_ATTACH_ALLOW;
}

switch (FEAT_TRAINS, PARENT, vl61d_start_stop,
  0)
{
  return CB_RESULT_NO_TEXT;
}

// Макс. скорость: 85 км/ч
#define MAX_SPEED 85

switch (FEAT_TRAINS, SELF, vl61d_purchase_speed,
  MAX_SPEED)
{
  return;
}

switch (FEAT_TRAINS, SELF, vl61d_speed,
[
  STORE_TEMP(MAX_SPEED, 0),
  is_penalise_speed() ? get_penalised_speed(LOAD_TEMP(0)) : LOAD_TEMP(0)
])
{
  return;
}

#undef MAX_SPEED

switch (FEAT_TRAINS, SELF, vl61d_bitmask_vehicle_info3,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(vl61d), 0),
  (last_computed_result && (position_in_consist == 2 * LOAD_TEMP(0)) &&
    LOAD_TEMP(0) < 2)
])
{
  1: return 0;
  return FLAG_PENALISE_SPEED;
}

switch (FEAT_TRAINS, PARENT, vl61d_bitmask_vehicle_info2,
[
  STORE_TEMP(count_veh_id(vl61d), 0),
  vehicle_type_id == vl61d
])
{
  vl61d_bitmask_vehicle_info3;
}

switch (FEAT_TRAINS, SELF, vl61d_bitmask_vehicle_info,
  position_in_consist == 0)
{
  1: return 0;
  vl61d_bitmask_vehicle_info2;
}

item (FEAT_TRAINS, vl61d) 
{
  property
  {
    name: string(STR_VL61D_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1963, 1, 1);
    vehicle_life: 15; // срок службы
    model_life: 15; // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cost_factor: 80;
    running_cost_factor: get_electric_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_dual_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 2660 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    weight: 131 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: 0.12696681;
    length: 8;
    visual_effect_and_powered: electric_visual_effect_and_powered(0);
    cargo_allow_refit: [MAIL];
    default_cargo_type: MAIL;
    cargo_capacity: 1;
  }
  graphics {
    default: vl61d_get_spriteset;
    purchase: vl61d_purchase_spriteset;
    articulated_part: articulated_part_dummy2;
    can_attach_wagon: vl61d_can_attach_wagon;
    start_stop: vl61d_start_stop;
    additional_text: return string(STR_VL61D_PURCHASE_HINT);
    speed: vl61d_speed;
    purchase_speed: vl61d_purchase_speed;
    bitmask_vehicle_info: vl61d_bitmask_vehicle_info;
    cargo_subtype_text: cargo_subtype_text_default;
    cargo_capacity: return 0;
  }
}
