 // ed4m

// Спрайты

#define IMAGEFILE  "src/emu/ed4m.png"
purchase_sprites(ed4m_h, 0, 0)
purchase_sprites(ed4m_m, 120, 0)
purchase_sprites(ed4m_c, 240, 0)

MU_4r_0_0_sprites(13, ed4m_v1, 32, 40)
MU_0_3_0_sprites(13, ed4m_v1, 32, 40)
MU_0_0_2_sprites(13, ed4m_v1, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, ed4m_h_sprites_l,
  (LOAD_TEMP(4) == ed4m_h) *
  (1 + (position_in_consist == 0)))
{
  0: ed4m_v1_h_notpowered_sprites_left;
  1: ed4m_v1_h_notpowered_normal_sprites_left;
  2: ed4m_v1_h_sprites_left;
     align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_h_sprites_r,
  (LOAD_TEMP(4) == ed4m_h) *
  (1 + (position_in_consist_from_end == 1)))
{
  0: ed4m_v1_h_notpowered_sprites_right;
  1: ed4m_v1_h_notpowered_normal_sprites_right;
  2: ed4m_v1_h_sprites_right;
     align_13_sprites;
}

engine_direction_template3m2(ed4m_h, ed4m_m, ed4m_c, )

long_vehicle(ed4m_h)

switch (FEAT_TRAINS, SELF, ed4m_m_direction_right,
  (LOAD_TEMP(4) != ed4m_h) * 100 )
{
    0: ed4m_v1_m_sprites_right;
  100: ed4m_v1_m_notpowered_sprites_right;
       align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_m_direction_left,
  (LOAD_TEMP(4) != ed4m_h) * 100 )
{
    0: ed4m_v1_m_sprites_left;
  100: ed4m_v1_m_notpowered_sprites_left;
       align_13_sprites;
}

EMU_46789101112_m_template(ed4m)

EMU_direction_calculation_template(ed4m, _m)

long_vehicle_dir(ed4m_m)

switch (FEAT_TRAINS, SELF, ed4m_c_direction_right,
  (LOAD_TEMP(4) != ed4m_h) * 100)
{
    0: ed4m_v1_c_sprites_right;
  100: ed4m_v1_c_notpowered_sprites_right;
       align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_c_direction_left,
  (LOAD_TEMP(4) != ed4m_h) * 100)
{
    0: ed4m_v1_c_sprites_left;
  100: ed4m_v1_c_notpowered_sprites_left;
       align_13_sprites;
}

EMU_46789101112_c_template(ed4m)

EMU_direction_calculation_template(ed4m, _c)

long_vehicle_dir(ed4m_c)

EMU_46789101112_can_attach_wagon_template(ed4m)

EMU_attach_calculation_template(ed4m)

switch (FEAT_TRAINS, SELF, ed4m_can_attach_wagon1, vehicle_type_id)
{
  ed4m_h: ed4m_can_attach_wagon_template;
  ed4m_m: ed4m_can_attach_wagon_template;
  ed4m_c: ed4m_can_attach_wagon_template;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, ed4m_can_attach_wagon, count_veh_id(ed4m_h))
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
  1: ed4m_can_attach_wagon1;
  2: ed4m_can_attach_wagon_head;
  3: ed4m_can_attach_wagon1;
     return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
}

switch (FEAT_TRAINS, PARENT, ed4m_h_start_stop,
  count_veh_id(ed4m_h))
{
  2: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

// Моторный самостоятельно выпускать из депо нельзя
switch (FEAT_TRAINS, SELF, ed4m_m_start_stop,
  0)
{
     return string(STR_START_STOP_MOTORIZED_CAR_CANNOT_LEAVE_DEPOT);
}

// Визуализируем эффекты тяги у ed4m_m, только если локомотив - ed4m_h

EMU_46789101112_m_create_effect_template(ed4m, -1, 6)

EMU_direction_calculation_template(ed4m, _m_create_effect)

switch (FEAT_TRAINS, PARENT, ed4m_m_create_effect,
  vehicle_type_id == ed4m_h)
{
  1: ed4m_m_create_effect_direction_template;
     return disable_create_effect();
}

// Даём тягу, только если локомотив - ed4m_h
switch (FEAT_TRAINS, PARENT, ed4m_m_power,
  vehicle_type_id == ed4m_h)
{
  1: return get_power_in_cb(1039);
     return 0;
}

// Допускается эксплуатация с пассажирами только если голова - ed4m_h
switch (FEAT_TRAINS, PARENT, ed4m_h_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 86;
     return 0;
}

switch (FEAT_TRAINS, PARENT, ed4m_m_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 116;
     return 0;
}

switch (FEAT_TRAINS, PARENT, ed4m_c_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 116;
     return 0;
}

switch (FEAT_TRAINS, SELF, ed4m_cargo_subtype_text, 0)
{
  string(STR_REFIT_FACTORY_62301, string(STR_REFIT_TTD_63));
}

item (FEAT_TRAINS, ed4m_h)
{
  property
  {
    name: string(STR_ED4M_H_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1997), 1, 1);
    model_life: get_model_life(1997,2050);
    retire_early: get_retire_early(1997,2050);
    vehicle_life: 30;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 130 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 86;
    weight: 44.2 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    length: 8;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_NONE;
  }
  graphics {
    default: ed4m_h_sprites;
    purchase: ed4m_h_purchase_sprites;
    articulated_part: articulated_part_dummy5;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_h_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_ED4M_H_PURCHASE_HINT, string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12));
    power: return 0;
    cargo_capacity: ed4m_h_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
  }
}

item (FEAT_TRAINS, ed4m_m)
{
  property
  {
    name: string(STR_ED4M_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1997), 1, 1);
    model_life: get_model_life(1997,2030);
    retire_early: get_retire_early(1997,2030);
    vehicle_life: 30;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1039 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 116;
    weight: 57.75 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(52.0, 57.75);
    length: 8;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;
  }
  graphics {
    default: ed4m_m_sprites;
    purchase: ed4m_m_purchase_sprites;
    articulated_part: articulated_part_dummy5;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_m_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_ED4M_M_PURCHASE_HINT, string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12));
    power: ed4m_m_power;
    cargo_capacity: ed4m_m_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
    create_effect: ed4m_m_create_effect;
  }
}

item (FEAT_TRAINS, ed4m_c)
{
  property
  {
    name: string(STR_ED4M_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1997), 1, 1);
    model_life: get_model_life(1997,2030);
    retire_early: get_retire_early(1997,2030);
    vehicle_life: 30;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 116;
    weight: 41 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    length: 8;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_NONE;
  }
  graphics {
    default: ed4m_c_sprites;
    purchase: ed4m_c_purchase_sprites;
    articulated_part: articulated_part_dummy5;
    additional_text: return string(STR_ED4M_C_PURCHASE_HINT, string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12));
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_m_start_stop;
    power: return 0;
    cargo_capacity: ed4m_c_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, ed4m_h)
  {
    property
    { name: string(STR_ED4M_H_NAME_LONG); }
  }
  item (FEAT_TRAINS, ed4m_m)
  {
    property
    { name: string(STR_ED4M_M_NAME_LONG); }
  }
  item (FEAT_TRAINS, ed4m_c)
  {
    property
    { name: string(STR_ED4M_C_NAME_LONG); }
  }
}

