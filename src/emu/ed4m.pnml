 // ed4m
// 409 (199h) 410 (19Ah) 411 (19Bh)

#define IMAGEFILE  "src/emu/ed4m.png"
purchase_sprites(ed4m_h, 0, 0)
purchase_sprites(ed4m_m, 120, 0)
purchase_sprites(ed4m_c, 240, 0)

MU_4r_0_0_sprites(13anim, ed4m_v1, 32, 40)
MU_0_3_0_sprites(13, ed4m_v1, 32, 40)
MU_0_0_2_sprites(13, ed4m_v1, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, ed4m_h_sprites_left,
  (LOAD_TEMP(4) == ed4m_h) *
  (1 + (position_in_consist == 0)))
{
  0: ed4m_v1_h_notpowered_sprites_left;
  1: ed4m_v1_h_notpowered_normal_sprites_left;
  2: ed4m_v1_h_sprites_left;
     align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_h_sprites_right,
  (LOAD_TEMP(4) == ed4m_h) *
  (1 + (position_in_consist_from_end == 1)))
{
  0: ed4m_v1_h_notpowered_sprites_right;
  1: ed4m_v1_h_notpowered_normal_sprites_right;
  2: ed4m_v1_h_sprites_right;
     align_13_sprites;
}

engine_direction_template3m2(ed4m_h, ed4m_m, ed4m_c, )

long_vehicle(ed4m_h)

switch (FEAT_TRAINS, SELF, ed4m_m_direction_right,
  (LOAD_TEMP(4) != ed4m_h) * 100 )
{
    0: ed4m_v1_m_sprites_right;
  100: ed4m_v1_m_notpowered_sprites_right;
       align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_m_direction_left,
  (LOAD_TEMP(4) != ed4m_h) * 100 )
{
    0: ed4m_v1_m_sprites_left;
  100: ed4m_v1_m_notpowered_sprites_left;
       align_13_sprites;
}

EMU_46789101112_m_template(ed4m)

EMU_direction_calculation_template(ed4m, _m)

long_vehicle_dir(ed4m_m)

switch (FEAT_TRAINS, SELF, ed4m_c_direction_right,
  (LOAD_TEMP(4) != ed4m_h) * 100)
{
    0: ed4m_v1_c_sprites_right;
  100: ed4m_v1_c_notpowered_sprites_right;
       align_13_sprites;
}

switch (FEAT_TRAINS, SELF, ed4m_c_direction_left,
  (LOAD_TEMP(4) != ed4m_h) * 100)
{
    0: ed4m_v1_c_sprites_left;
  100: ed4m_v1_c_notpowered_sprites_left;
       align_13_sprites;
}

EMU_46789101112_c_template(ed4m)

EMU_direction_calculation_template(ed4m, _c)

long_vehicle_dir(ed4m_c)

EMU_46789101112_can_attach_wagon_template(ed4m)

EMU_attach_calculation_template(ed4m)

switch (FEAT_TRAINS, SELF, ed4m_can_attach_wagon1, vehicle_type_id)
{
  ed4m_h: ed4m_can_attach_wagon_template;
  ed4m_m: ed4m_can_attach_wagon_template;
  ed4m_c: ed4m_can_attach_wagon_template;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, ed4m_can_attach_wagon, count_veh_id(ed4m_h))
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
  1: ed4m_can_attach_wagon1;
  2: ed4m_can_attach_wagon_head;
  3: ed4m_can_attach_wagon1;
     return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
}

switch (FEAT_TRAINS, PARENT, ed4m_h_start_stop,
  count_veh_id(ed4m_h))
{
  2: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

// Моторный самостоятельно выпускать из депо нельзя
switch (FEAT_TRAINS, SELF, ed4m_m_start_stop,
  0)
{
     return string(STR_START_STOP_MOTORIZED_CAR_CANNOT_LEAVE_DEPOT);
}

// Визуализируем эффекты тяги у ed4m_m, только если локомотив - ed4m_h

EMU_46789101112_m_create_effect_template(ed4m, -1, 6)

EMU_direction_calculation_template(ed4m, _m_create_effect)

switch (FEAT_TRAINS, PARENT, ed4m_m_create_effect,
  vehicle_type_id == ed4m_h)
{
  1: ed4m_m_create_effect_direction_template;
     return disable_create_effect();
}

// Даём тягу, только если локомотив - ed4m_h
switch (FEAT_TRAINS, PARENT, ed4m_m_power,
  vehicle_type_id == ed4m_h)
{
  1: return get_power_in_cb(1039);
     return 0;
}

// Допускается эксплуатация с пассажирами только если голова - ed4m_h
switch (FEAT_TRAINS, PARENT, ed4m_h_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 86;
     return 0;
}

switch (FEAT_TRAINS, PARENT, ed4m_m_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 116;
     return 0;
}

switch (FEAT_TRAINS, PARENT, ed4m_c_cargo_capacity,
  (vehicle_type_id == ed4m_h) )
{
  1: return 116;
     return 0;
}

switch (FEAT_TRAINS, SELF, ed4m_cargo_subtype_text, 0)
{
  string(STR_REFIT_FACTORY_62301, string(STR_REFIT_TTD_63));
}

general_running_cost(ed4m_m_v1, 115)

switch (FEAT_TRAINS, PARENT, ed4m_m_running_cost_factor,
  vehicle_type_id == ed4m_h)
{
  1: ed4m_m_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

general_running_cost(ed4m_h_v1, 101)

switch (FEAT_TRAINS, PARENT, ed4m_h_running_cost_factor,
  vehicle_type_id == ed4m_h)
{
  1: ed4m_h_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

general_running_cost(ed4m_c_v1, 62)

switch (FEAT_TRAINS, PARENT, ed4m_c_running_cost_factor,
  vehicle_type_id == ed4m_h)
{
  1: ed4m_c_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}
                           
item (FEAT_TRAINS, ed4m_h, 409) {
  property {
    name: string(STR_NAME_ED4M);
    vehicle_dates(1997, 2030, 30, 10, 8, 15)
    vehicle_dcemu(1, 44.2, 0, 86, 60)
  }
  graphics {
    default: ed4m_h_sprites;
    purchase: ed4m_h_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: ed4m_h_running_cost_factor;
    articulated_part: articulated_part_dummy5;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_h_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_2TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_H_DC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_303)),
                                   string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12_M2),
                                   string(STR_PURCHASE_HINT_FROMTO, 1997, 2030),
                                   string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII));
    power: return 0;
    cargo_capacity: ed4m_h_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
  }
}

item (FEAT_TRAINS, ed4m_m, 410) {
  property {
    name: string(STR_NAME_ED4M);
    vehicle_dates(1997, 2030, 30, 10, 8, 13)
    vehicle_dcemu(1039, 57.75, 104.0, 116, 60)
  }
  graphics {
    default: ed4m_m_sprites;
    purchase: ed4m_m_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: ed4m_m_running_cost_factor;
    articulated_part: articulated_part_dummy5;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_m_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_1TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_M_DC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_302)),
                                   string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12_M2),
                                   string(STR_PURCHASE_HINT_FROMTO, 1997, 2030),
                                   string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII));
    power: ed4m_m_power;
    cargo_capacity: ed4m_m_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
    create_effect: ed4m_m_create_effect;
  }
}

item (FEAT_TRAINS, ed4m_c, 411) {
  property {
    name: string(STR_NAME_ED4M);
    vehicle_dates(1997, 2030, 30, 10, 8, 8)
    vehicle_dcemu(1, 41, 0, 116, 60)
  }
  graphics {
    default: ed4m_c_sprites;
    purchase: ed4m_c_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: ed4m_c_running_cost_factor;
    articulated_part: articulated_part_dummy5;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_2TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_C_DC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_304)),
                                   string(STR_SECTIONS_EMU_4_6_7_8_9_10_11_12_M2),
                                   string(STR_PURCHASE_HINT_FROMTO, 1997, 2030),
                                   string(STR_PURCHASE_HINT_FACTORY_DEMIKHOVSKII));
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    can_attach_wagon: ed4m_can_attach_wagon;
    start_stop: ed4m_m_start_stop;
    power: return 0;
    cargo_capacity: ed4m_c_cargo_capacity;
    cargo_subtype_text: ed4m_cargo_subtype_text;
  }
}

long_name_template(ed4m_h, STR_LONGNAME_ED4M_H)
long_name_template(ed4m_m, STR_LONGNAME_ED4M_M)
long_name_template(ed4m_c, STR_LONGNAME_ED4M_C)
allow_dcemu(ed4m_h)
allow_dcemu(ed4m_m)
allow_dcemu(ed4m_c)
