 // em167

// CН (1954-1956), электросекция постоянного тока.
#define IMAGEFILE  "src/emu/em167.png"
purchase_sprites(em167, 0, 0)

MU_3r_0_0_sprites(10, em167, 32, 40)
MU_0_0_2_sprites(10, em167, 32, 40)
MU_3r_0_0_sprites(10, em167_middle, 32, 442)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, em167_toomany_sections_sprites,
  position_in_vehid_chain % 4)
{
  0: em167_h_notpowered_sprites_left;
  2: em167_c_notpowered_sprites_left;
     dummy_sprites;
}

switch (FEAT_TRAINS, SELF, em167_1sections,
  position_in_vehid_chain % 4)
{
  0: em167_h_sprites_left;
  2: em167_c_sprites_left;
     dummy_sprites;
}

switch (FEAT_TRAINS, SELF, em167_2sections,
  position_in_vehid_chain % 8)
{
  0: em167_h_sprites_left;
  2: em167_c_sprites_left;
  4: em167_c_sprites_right;
  6: em167_h_sprites_right;
     dummy_sprites;
}

switch (FEAT_TRAINS, SELF, em167_3sections,
  position_in_vehid_chain % 12)
{
  0: em167_h_sprites_left;
  2: em167_c_sprites_left;
  4: em167_c_sprites_right;
  6: em167_middle_h_sprites_right;
  8: em167_c_sprites_right;
 10: em167_h_sprites_right;
     dummy_sprites;
}

switch (FEAT_TRAINS, SELF, em167_4sections,
  position_in_vehid_chain % 16)
{
  0: em167_h_sprites_left;
  2: em167_c_sprites_left;
  4: em167_c_sprites_right;
  6: em167_middle_h_sprites_right;
  8: em167_middle_h_sprites_left;
 10: em167_c_sprites_left;
 12: em167_c_sprites_right;
 14: em167_h_sprites_right;
     dummy_sprites;
}

switch (FEAT_TRAINS, SELF, em167_sprites_start,
  num_vehs_in_vehid_chain +
  ((LOAD_TEMP(4) != em167) * 100) )
{
    1..3: align_10_sprites;
       4: em167_1sections;
    5..7: align_10_sprites;
       8: em167_2sections;
   9..11: align_10_sprites;
      12: em167_3sections;
  13..15: align_10_sprites;
      16: em167_4sections;
          em167_toomany_sections_sprites;
}

long_vehicle(em167)

switch (FEAT_TRAINS, PARENT, em167_can_attach_wagon1,
  count_veh_id(em167) < 13)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, SELF, em167_can_attach_wagon,
  vehicle_type_id == em167)
{
  1: em167_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, em167_articulated_part,
  extra_callback_info1)
{
  1: return em167; // Сделано без dummy для того, чтобы проверять длину цепочки
  2: return em167;
  3: return em167;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Визуализируем эффекты тяги у em167, только если локомотив - em167
engine_electric1_2all_effect(em167, -2, 4)

switch (FEAT_TRAINS, SELF, em167_create_effect_1sections,
  position_in_vehid_chain % 4)
{
  0: em167_create_effect_sprites_start;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, em167_create_effect_2sections,
  position_in_vehid_chain % 8)
{
  0: em167_create_effect_sprites_start;
  6: em167_create_effect_sprites_start;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, em167_create_effect_3sections,
  position_in_vehid_chain % 12)
{
  0: em167_create_effect_sprites_start;
  6: em167_create_effect_sprites_start;
 10: em167_create_effect_sprites_start;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, em167_create_effect_4sections,
  position_in_vehid_chain % 16)
{
  0: em167_create_effect_sprites_start;
  6: em167_create_effect_sprites_start;
  8: em167_create_effect_sprites_start;
 14: em167_create_effect_sprites_start;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, em167_create_effect1,
  num_vehs_in_vehid_chain)
{
   4: em167_create_effect_1sections;
   8: em167_create_effect_2sections;
  12: em167_create_effect_3sections;
  16: em167_create_effect_4sections;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, em167_create_effect,
  vehicle_type_id == em167)
{
  1: em167_create_effect1;
     return disable_create_effect();
}

// Даём тягу, только если локомотив - em167
switch (FEAT_TRAINS, SELF, em167_power1,
  position_in_articulated_veh)
{
  0: return get_power_in_cb(483);
     return 0;
}

switch (FEAT_TRAINS, PARENT, em167_power,
  vehicle_type_id == em167)
{
  1: em167_power1;
     return 0;
}

// Допускается эксплуатация с пассажирами только если голова - em167
switch (FEAT_TRAINS, SELF, em167_capacity1,
  position_in_articulated_veh)
{
  0: return 175+137;
     return 0;
}

switch (FEAT_TRAINS, PARENT, em167_cargo_capacity,
  vehicle_type_id == em167)
{
  1: em167_capacity1;
     return 0;
}

emu_running_cost(em167_v1, 46, 41)

switch (FEAT_TRAINS, SELF, em167_running_cost_factor1,
  position_in_articulated_veh)
{
  0: em167_v1_running_cost_factor;
     return 0;
}

switch (FEAT_TRAINS, PARENT, em167_running_cost_factor,
  vehicle_type_id == em167)
{
  1: em167_running_cost_factor1;
     return RC_MU_AS_CAR * 3;
}

item (FEAT_TRAINS, em167) {
  property {
    name: string(STR_EM167_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1945), 1, 1);
    vehicle_life: 20;
    model_life: get_model_life(1945,1945);
    retire_early: get_retire_early(1945,1945);
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: 4 + 4;
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 80 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 483 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    loading_speed: (24*4*2);
    cargo_capacity: 255;
    weight: 38.4+27.5 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(25.0, 38.4+27.5);
    length: 5;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC;
  }
  graphics {
    default: em167_sprites;
    purchase: em167_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: em167_running_cost_factor;
    articulated_part: em167_articulated_part;
    can_attach_wagon: em167_can_attach_wagon;
    additional_text: return string(STR_EM167_PURCHASE_HINT, string(STR_SECTIONS_MU_S1_2of2));
    cargo_capacity: em167_cargo_capacity;
    power: em167_power;
    create_effect: em167_create_effect;
  }
}

if (enable_long_names) {
  item (FEAT_TRAINS, em167) {
    property { name: string(STR_EM167_NAME_LONG); }
  }
}

