 // epg

// Электропоезд переменного тока ЭПг - Stadler FLIRT для городских линий Минска
// ЭПг (Stadler FLIRT)
// Спрайты

#define IMAGEFILE  "src/emu/epg-stadler-flirt.png"

// покупка
purchase_sprites(epg, 0, 0)

// обычный: погрузка/перемещение
spriteset (epg_loading_spriteset, IMAGEFILE)
{
  s11_template(200, 252, 0)
} 

spriteset (epg_traveling_spriteset, IMAGEFILE)
{
  s11_template(200, 319, 0)
} 

spritegroup epg_sprites_2
{
  loading: epg_loading_spriteset;
  loaded: epg_traveling_spriteset;
}

// обычный развёрнутый: погрузка/перемещение
spriteset (epg_d_sprites_2, IMAGEFILE)
{
  s11_template(640, 252, 0)
} 

// промежуточный 1
spriteset (epg_b_spriteset, IMAGEFILE)
{
  s10_template(200, 401, 0)
} 

// промежуточный 2: погрузка/перемещение
spriteset (epg_c_loading_spriteset, IMAGEFILE)
{
  s10_template(640, 401, 0)
} 

spriteset (epg_c_traveling_spriteset, IMAGEFILE)
{
  s10_template(640, 468, 0)
} 

spritegroup epg_c_spritegroup
{
  loading: epg_c_loading_spriteset;
  loaded: epg_c_traveling_spriteset;
}

#undef IMAGEFILE

long_vehicle_simple(epg)

switch (FEAT_TRAINS, SELF, epg_b_sprites_2,
  !(vehicle_is_not_powered || vehicle_is_in_depot))
{
  0..1: epg_b_spriteset; // нет визуальной разницы
        align_10_spriteset;
}

long_vehicle_simple(epg_b)

switch (FEAT_TRAINS, SELF, epg_c_sprites2,
  !(vehicle_is_not_powered || vehicle_is_in_depot
    || LOAD_TEMP(0) != epg))
{
  0: epg_c_loading_spriteset; // нет тяги
  1: epg_c_spritegroup;
     align_10_spriteset;
}

switch (FEAT_TRAINS, PARENT, epg_c_sprites_2,
  STORE_TEMP(vehicle_type_id, 0))
{
  epg_c_sprites2;
}

long_vehicle_simple(epg_c)

long_vehicle_simple(epg_d)

// Можно ли ещё присоединить? (1..3 секции)
switch (FEAT_TRAINS, SELF, epg_can_attach_wagon2,
  ((vehicle_type_id == epg) && (LOAD_TEMP(0) < 3)))
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return CB_RESULT_ATTACH_DISALLOW;
}

// считаем уже имеющиеся вагоны

switch (FEAT_TRAINS, PARENT, epg_can_attach_wagon,
  STORE_TEMP(count_veh_id(epg)/2, 0))
{
  epg_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, epg_articulated_part,
  extra_callback_info1)
{
  1: return dummy3;
  2: return unitb;
  3: return dummy2;
  4: return unitc;
  5: return dummy2;
  6: return unitd;
  7: return dummy3;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// даём тягу, если локомотив epg
switch (FEAT_TRAINS, PARENT, epg_power,
  vehicle_type_id == epg)
{
  1: return get_power_in_cb(2719); // -37 Поправка, чтобы показывалось 2719
     return 0;
}

// показываем визуальные эффекты, если локомотив epg
switch (FEAT_TRAINS, PARENT, epg_c_visual_effect_and_powered,
  vehicle_type_id == epg)
{
  1: return electric_visual_effect_and_powered(0);
     return disable_visual_effect_and_powered();
}

// Допускается эксплуатация с пассажирами только если голова - epg
switch (FEAT_TRAINS, PARENT, epg_cargo_capacity,
  (vehicle_type_id == epg) )
{
  1: return 260;
     return 0;
}

item (FEAT_TRAINS, epg) 
{
  property
  {
    name: string(STR_EPG_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(2011), 1, 1);
    vehicle_life: 30; // срок службы
    model_life: get_model_life(2011,2050);
    retire_early: get_retire_early(2011,2050); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 160 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_ac_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 2719 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    loading_speed: (260/8);
    cargo_capacity: 255; // 260
    weight: 132 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(150.0, 132);
    length: 8;
    visual_effect_and_powered:
      visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 1, DISABLE_WAGON_POWER);
  }
  graphics {
    default: epg_sprites;
    purchase: epg_purchase_sprites;
    articulated_part: epg_articulated_part;
    can_attach_wagon: epg_can_attach_wagon;
    additional_text: return string(STR_EPG_PURCHASE_HINT);
    power: epg_power;
    cargo_capacity: epg_cargo_capacity;
    cost_factor: return 1344;
  }
  livery_override(unitb)
  {
    length: return 8;
    epg_b_sprites;

  }
  livery_override(unitc)
  {
    length: return 8;
    visual_effect_and_powered: epg_c_visual_effect_and_powered;
    epg_c_sprites;

  }
  livery_override(unitd)
  {
    length: return 8;
    epg_d_sprites;

  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, epg)
  {
    property
    { name: string(STR_EPG_NAME_LONG); }
  }
}

