// epr

#define IMAGEFILE  "src/emu/epr_h.png"
purchase_sprites(epr, 0, 0)
MU_head_middle_sprites(11, epr_h, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/epr_m1.png"
EMU_motor1_middle_sprites(10, epr_m1, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/epr_m2.png"
EMU_motor1_middle_sprites(10, epr_m2, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, epr_h_sprites_left_check,
  position_in_consist == 0)
{
  1: epr_h_sprites_left;
     epr_h_notpowered_normal_sprites_left;
}

switch (FEAT_TRAINS, SELF, epr_b_sprites_start,
[  set_offset_to(-2),
   ((LOAD_TEMP(4) != epr) * 2) +
   (prev_vehicle_randombits() & 0x01)])
{
  0: epr_m1_notpowered_normal_sprites_left;
  1: epr_m2_notpowered_normal_sprites_right;
  2: epr_m1_notpowered_sprites_left;
  3: epr_m2_notpowered_sprites_right;
     align_11_sprites;
}

switch (FEAT_TRAINS, SELF, epr_c_sprites_start,
[  set_offset_to(-4),
   ((LOAD_TEMP(4) != epr) * 2) +
   (prev_vehicle_randombits() & 0x01)])
{
  0: epr_m2_sprites_left;
  1: epr_m1_sprites_right;
  2: epr_m2_notpowered_sprites_left;
  3: epr_m1_notpowered_sprites_right;
     align_11_sprites;
}

switch (FEAT_TRAINS, SELF, epr_h_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: epr_h_sprites_right;
     epr_h_notpowered_normal_sprites_right;
}

switch (FEAT_TRAINS, SELF, epr_never_train, position_in_articulated_veh)
{
  1: epr_m1_sprites_left;
  2: epr_m1_normal_sprites;
  3: epr_m2_sprites_right;
  4: epr_m2_normal_sprites_right;
     align_11_sprites;
}

switch (FEAT_TRAINS, SELF, epr_d_sprites_start,
  LOAD_TEMP(4) == epr)
{
   1: epr_h_sprites_right_check;
   0: epr_h_notpowered_sprites_right;
      epr_never_train;
}

switch (FEAT_TRAINS, SELF, epr_sprites_start,
  position_in_articulated_veh)
{
  0: epr_h_sprites_left_check;
  2: epr_b_sprites_start;
  4: epr_c_sprites_start;
  6: epr_d_sprites_start;
     dummy_sprites;
}

long_vehicle(epr)

switch (FEAT_TRAINS, SELF, epr_can_attach_wagon2,
  LOAD_TEMP(0) < 3)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, epr_can_attach_wagon1,
  STORE_TEMP(count_veh_id(epr) + count_veh_id(epg), 0))
{
  epr_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, epr_can_attach_wagon,
  (vehicle_type_id == epr) || (vehicle_type_id == epg))
{
  1: epr_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, epr_articulated_part,
  extra_callback_info1)
{
  1: return dummy3;
  2: return epr_part2;
  3: return dummy2;
  4: return epr_part2;
  5: return dummy2;
  6: return epr_part2;
  7: return dummy3;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, epr_c_create_effect1,
  electric_create_effect(4)) { return 1; }

switch (FEAT_TRAINS, PARENT, epr_c_create_effect,
  (vehicle_type_id == epr) || (vehicle_type_id == epg))
{
  1: epr_c_create_effect1;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, epr_create_effect,
  position_in_articulated_veh)
{
  4: epr_c_create_effect;
     return disable_create_effect();
}

engine_power_MU2(epr, 2719, epr, epg)
engine_capacity_MU2(epr, 217, epr, epg)

RC_head_check2_new(epr, epr, epg)
switch (FEAT_TRAINS, SELF, epr_running_cost_factor,
[  STORE_TEMP(709, 0),  // Моторы
   STORE_TEMP(35, 1),   // Бригада
   STORE_TEMP(249, 2),  // Износ
   STORE_TEMP(0, 3),    // Сопровождение
   STORE_TEMP(174, 4),  // ТО
   STORE_TEMP(12, 5),   // Сертификация

   STORE_TEMP(160, 6),                 // Скорость
   STORE_TEMP(132, 7),                 // Тара
   STORE_TEMP(LOAD_TEMP(7) + 28, 8)])  // Максимальная масса
{ epr_check_running_cost_factor; }     // 436 * 2+186 * 2

engine_speed(epr, 160)
hint_MU_with_subtype_sme_noto(epr,
     calc_loading(216 / (6 * WIDERST_D_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_2_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_SR_AC_WITH_SUBTYPE, STR_PURCHASE_HINT_FLIRT,
     STR_SECTIONS_MU_S1_3of4_WITH_ATTACH, STR_NAME_EPG,
     2011,
     string(STR_PURCHASE_HINT_FACTORY_BUSSNANG))

item (FEAT_TRAINS, epr, 226) {
  property {
    name: string(STR_NAME_EPR);
    vehicle_dates(2011, 2050, 30, 10, 8, 276)
    vehicle_emu(ac, 2719, 132, 200.0, 216, 6 * WIDERST_D_DOOR)
  }
  graphics {
        additional_text: epr_additional_text;
       articulated_part: epr_articulated_part;
       can_attach_wagon: epr_can_attach_wagon;
       cargo_age_period: return 90;
         cargo_capacity: epr_cargo_capacity;
         colour_mapping: any_cc_colour;
            cost_factor: return 276;
          create_effect: epr_create_effect;
                default: epr_sprites;
                  power: epr_power;
               purchase: epr_purchase_sprites;
         purchase_speed: return 160;
    running_cost_factor: epr_running_cost_factor;
                  speed: epr_speed;
  }
}

long_name_template(epr, STR_LONGNAME_EPR)
allow_acemu(epr)

item (FEAT_TRAINS, epr_part2, 456) {
  property {
    vehicle_no_dates(2011, 2050, 30, 10, 8, 0)
    vehicle_emu_empty(ac)
  }
  graphics {
   colour_mapping: any_cc_colour;
    create_effect: epr_create_effect;
          default: epr_sprites;
  }
}
