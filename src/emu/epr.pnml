 // epr

// Электропоезд переменного тока ЭПг - Stadler FLIRT для городских линий Минска
// ЭПг (Stadler FLIRT)
// Спрайты

#define IMAGEFILE  "src/emu/epr-stadler-flirt.png"

// покупка
purchase_sprites(epr, 0, 0)

// обычный: погрузка/перемещение
spriteset (epr_loading_spriteset, IMAGEFILE)
{
  s11_template(200, 252, 0)
} 

spriteset (epr_traveling_spriteset, IMAGEFILE)
{
  s11_template(200, 319, 0)
} 

spritegroup epr_sprites_start
{
  loading: epr_loading_spriteset;
  loaded: epr_traveling_spriteset;
}

// обычный развёрнутый: погрузка/перемещение
spriteset (epr_d_sprites_start, IMAGEFILE)
{
  s11_template(640, 252, 0)
} 

// промежуточный 1
spriteset (epr_b_spriteset, IMAGEFILE)
{
  s10_template(200, 401, 0)
} 

// промежуточный 2: погрузка/перемещение
spriteset (epr_c_loading_spriteset, IMAGEFILE)
{
  s10_template(640, 401, 0)
} 

spriteset (epr_c_traveling_spriteset, IMAGEFILE)
{
  s10_template(640, 468, 0)
} 

spritegroup epr_c_spritegroup
{
  loading: epr_c_loading_spriteset;
  loaded: epr_c_traveling_spriteset;
}

#undef IMAGEFILE

long_vehicle(epr)

switch (FEAT_TRAINS, SELF, epr_b_sprites_start,
  !(vehicle_is_not_powered || vehicle_is_in_depot))
{
  0..1: epr_b_spriteset;
        align_10_sprites;
}

long_vehicle_nocount(epr_b)

switch (FEAT_TRAINS, SELF, epr_c_sprites2,
  !(vehicle_is_not_powered || vehicle_is_in_depot
    || LOAD_TEMP(0) != epr))
{
  0: epr_c_loading_spriteset;
  1: epr_c_spritegroup;
     align_10_sprites;
}

switch (FEAT_TRAINS, PARENT, epr_c_sprites_start,
  STORE_TEMP(vehicle_type_id, 0))
{
  epr_c_sprites2;
}

long_vehicle_nocount(epr_c)

long_vehicle_nocount(epr_d)

// Можно ли ещё присоединить? (1..3 секции)
switch (FEAT_TRAINS, SELF, epr_can_attach_wagon2,
  LOAD_TEMP(0) < 3)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

// считаем уже имеющиеся вагоны

switch (FEAT_TRAINS, PARENT, epr_can_attach_wagon1,
  STORE_TEMP(count_veh_id(epr), 0))
{
  epr_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, epr_can_attach_wagon,
  vehicle_type_id == epr)
{
  1: epr_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, epr_articulated_part,
  extra_callback_info1)
{
  1: return dummy3;
  2: return unitb;
  3: return dummy2;
  4: return unitc;
  5: return dummy2;
  6: return unitd;
  7: return dummy3;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// даём тягу, если локомотив epr
switch (FEAT_TRAINS, PARENT, epr_power,
  vehicle_type_id == epr)
{
  1: return get_power_in_cb(2719);
     return 0;
}

// показываем визуальные эффекты, если локомотив epr
switch (FEAT_TRAINS, PARENT, epr_c_visual_effect_and_powered,
  vehicle_type_id == epr)
{
  1: return electric_visual_effect_and_powered(0);
     return disable_visual_effect_and_powered();
}

// Допускается эксплуатация с пассажирами только если голова - epr
switch (FEAT_TRAINS, PARENT, epr_cargo_capacity,
  (vehicle_type_id == epr))
{
  1: return 217;
     return 0;
}

item (FEAT_TRAINS, epr) 
{
  property
  {
    name: string(STR_EPR_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(2011), 1, 1);
    vehicle_life: 30;
    model_life: get_model_life(2011,2050);
    retire_early: get_retire_early(2011,2050);
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 160 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_ac_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 2719 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    loading_speed: (217/8);
    cargo_capacity: 217;
    weight: 132 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(150.0, 132);
    length: 8;
    visual_effect_and_powered: visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 1, DISABLE_WAGON_POWER);
  }
  graphics {
    default: epr_sprites;
    purchase: epr_purchase_sprites;
    articulated_part: epr_articulated_part;
    can_attach_wagon: epr_can_attach_wagon;
    additional_text: return string(STR_EPR_PURCHASE_HINT, string(STR_SECTIONS_MU_S1_3of4));
    power: epr_power;
    cost_factor: return 1346;
    cargo_capacity: epr_cargo_capacity;
  }
  livery_override(unitb)
  {
    length: return 8;
    epr_b_sprites;

  }
  livery_override(unitc)
  {
    length: return 8;
    visual_effect_and_powered: epr_c_visual_effect_and_powered;
    epr_c_sprites;

  }
  livery_override(unitd)
  {
    length: return 8;
    epr_d_sprites;

  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, epr)
  {
    property
    { name: string(STR_EPR_NAME_LONG); }
  }
}

