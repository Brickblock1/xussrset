 // er2

// Спрайты
// 2 ливреи, до 1972 года и после (принудительная замена),
// плюс 3 ливреи для всех выпущенных с 1972
// С 1974 года выпуск новых в 2-х ливреях, старые бегают по старому
// плюс 3 ливреи 1974 для новых, плюс 2 ливреи с 1990 для новых
// Вариант с электросекциями
// Для моторных: до 1968 старые пантографы, после 1968 - новые

#define IMAGEFILE  "src/emu/er2-1962-1984.png"

/// Головной
// покупка, вариант 1
spriteset (er2_h_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 0)
}

// покупка, вариант 3
spriteset (er2_h_v3_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 0)
}

// покупка, вариант 8
spriteset (er2_h_v8_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(100, 0)
}

// вариант 1, погрузка/перемещение
spriteset (er2_h_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 275, 0)
} 

spriteset (er2_h_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 275, 0)
} 

spritegroup er2_h_spritegroup
{
  loading: er2_h_loading_spriteset;
  loaded: er2_h_traveling_spriteset;
}

// вариант 2: погрузка/перемещение
spriteset (er2_h_v2_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 344, 0)
} 

spriteset (er2_h_v2_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 344, 0)
} 

spritegroup er2_h_v2_spritegroup
{
  loading: er2_h_v2_loading_spriteset;
  loaded: er2_h_v2_traveling_spriteset;
}

// вариант 3: погрузка/перемещение
spriteset (er2_h_v3_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 413, 0)
} 

spriteset (er2_h_v3_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 413, 0)
} 

spritegroup er2_h_v3_spritegroup
{
  loading: er2_h_v3_loading_spriteset;
  loaded: er2_h_v3_traveling_spriteset;
}

// вариант 4: погрузка/перемещение
spriteset (er2_h_v4_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 482, 0)
} 

spriteset (er2_h_v4_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 482, 0)
} 

spritegroup er2_h_v4_spritegroup
{
  loading: er2_h_v4_loading_spriteset;
  loaded: er2_h_v4_traveling_spriteset;
}

// вариант 5: погрузка/перемещение
spriteset (er2_h_v5_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 551, 0)
} 

spriteset (er2_h_v5_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 551, 0)
} 

spritegroup er2_h_v5_spritegroup
{
  loading: er2_h_v5_loading_spriteset;
  loaded: er2_h_v5_traveling_spriteset;
}

// вариант 6: погрузка/перемещение
spriteset (er2_h_v6_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 620, 0)
} 

spriteset (er2_h_v6_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 620, 0)
} 

spritegroup er2_h_v6_spritegroup
{
  loading: er2_h_v6_loading_spriteset;
  loaded: er2_h_v6_traveling_spriteset;
}

// вариант 7: погрузка/перемещение
spriteset (er2_h_v7_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 689, 0)
} 

spriteset (er2_h_v7_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 689, 0)
} 

spritegroup er2_h_v7_spritegroup
{
  loading: er2_h_v7_loading_spriteset;
  loaded: er2_h_v7_traveling_spriteset;
}

// вариант 8: погрузка/перемещение
spriteset (er2_h_v8_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 758, 0)
} 

spriteset (er2_h_v8_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 758, 0)
} 

spritegroup er2_h_v8_spritegroup
{
  loading: er2_h_v8_loading_spriteset;
  loaded: er2_h_v8_traveling_spriteset;
}

// вариант 9: погрузка/перемещение
spriteset (er2_h_v9_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 827, 0)
} 

spriteset (er2_h_v9_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 827, 0)
} 

spritegroup er2_h_v9_spritegroup
{
  loading: er2_h_v9_loading_spriteset;
  loaded: er2_h_v9_traveling_spriteset;
}

// вариант 10: погрузка/перемещение
spriteset (er2_h_v10_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 896, 0)
} 

spriteset (er2_h_v10_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 896, 0)
} 

spritegroup er2_h_v10_spritegroup
{
  loading: er2_h_v10_loading_spriteset;
  loaded: er2_h_v10_traveling_spriteset;
}

// вариант 11: погрузка/перемещение
spriteset (er2_h_v11_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 965, 0)
} 

spriteset (er2_h_v11_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 965, 0)
} 

spritegroup er2_h_v11_spritegroup
{
  loading: er2_h_v11_loading_spriteset;
  loaded: er2_h_v11_traveling_spriteset;
}

// вариант 12: погрузка/перемещение
spriteset (er2_h_v12_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 1034, 0)
} 

spriteset (er2_h_v12_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 1034, 0)
} 

spritegroup er2_h_v12_spritegroup
{
  loading: er2_h_v12_loading_spriteset;
  loaded: er2_h_v12_traveling_spriteset;
}

// вариант 13: погрузка/перемещение
spriteset (er2_h_v13_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 1103, 0)
} 

spriteset (er2_h_v13_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 1103, 0)
} 

spritegroup er2_h_v13_spritegroup
{
  loading: er2_h_v13_loading_spriteset;
  loaded: er2_h_v13_traveling_spriteset;
}

// вариант 14: погрузка/перемещение
spriteset (er2_h_v14_loading_spriteset, IMAGEFILE)
{
  s12_template(608, 1172, 0)
} 

spriteset (er2_h_v14_traveling_spriteset, IMAGEFILE)
{
  s12_template(1059, 1172, 0)
} 

spritegroup er2_h_v14_spritegroup
{
  loading: er2_h_v14_loading_spriteset;
  loaded: er2_h_v14_traveling_spriteset;
}

/// Головной развёрнутый

spriteset (er2_hr_spriteset, IMAGEFILE)
{
  s12_template(608, 1244, 0)
} 

spriteset (er2_hr_v2_spriteset, IMAGEFILE)
{
  s12_template(608, 1313, 0)
} 

spriteset (er2_hr_v3_spriteset, IMAGEFILE)
{
  s12_template(608, 1382, 0)
} 

spriteset (er2_hr_v4_spriteset, IMAGEFILE)
{
  s12_template(608, 1451, 0)
} 

spriteset (er2_hr_v5_spriteset, IMAGEFILE)
{
  s12_template(608, 1520, 0)
} 
spriteset (er2_hr_v6_spriteset, IMAGEFILE)
{
  s12_template(608, 1589, 0)
} 
spriteset (er2_hr_v7_spriteset, IMAGEFILE)
{
  s12_template(608, 1658, 0)
} 

spriteset (er2_hr_v8_spriteset, IMAGEFILE)
{
  s12_template(608, 1727, 0)
} 
spriteset (er2_hr_v9_spriteset, IMAGEFILE)
{
  s12_template(608, 1796, 0)
} 

spriteset (er2_hr_v10_spriteset, IMAGEFILE)
{
  s12_template(608, 1865, 0)
} 

spriteset (er2_hr_v11_spriteset, IMAGEFILE)
{
  s12_template(608, 1934, 0)
} 

spriteset (er2_hr_v12_spriteset, IMAGEFILE)
{
  s12_template(608, 2003, 0)
} 

spriteset (er2_hr_v13_spriteset, IMAGEFILE)
{
  s12_template(608, 2072, 0)
} 

spriteset (er2_hr_v14_spriteset, IMAGEFILE)
{
  s12_template(608, 2141, 0)
} 

/// Моторный
// покупка
spriteset (er2_m_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 20)
}

spriteset (er2_m_v3_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 20)
}

spriteset (er2_m_spriteset, IMAGEFILE)
{
  s12_template(608, 2210, 0)
} 

spriteset (er2_m_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2210, 0)
} 

spriteset (er2_m_v2_spriteset, IMAGEFILE)
{
  s12_template(608, 2279, 0)
} 

spriteset (er2_m_v2_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2279, 0)
} 

spriteset (er2_m_v3_spriteset, IMAGEFILE)
{
  s12_template(608, 2348, 0)
} 

spriteset (er2_m_v3_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2348, 0)
} 

spriteset (er2_m_v4_spriteset, IMAGEFILE)
{
  s12_template(608, 2417, 0)
} 

spriteset (er2_m_v4_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2417, 0)
} 

spriteset (er2_m_v5_spriteset, IMAGEFILE)
{
  s12_template(608, 2486, 0)
} 

spriteset (er2_m_v5_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2486, 0)
} 

spriteset (er2_m_v6_spriteset, IMAGEFILE)
{
  s12_template(608, 2555, 0)
} 

spriteset (er2_m_v6_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2555, 0)
} 

spriteset (er2_m_v7_spriteset, IMAGEFILE)
{
  s12_template(608, 2624, 0)
} 

spriteset (er2_m_v7_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2624, 0)
} 

spriteset (er2_m_v8_spriteset, IMAGEFILE)
{
  s12_template(608, 2693, 0)
} 

spriteset (er2_m_v8_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2693, 0)
} 

spriteset (er2_m_v9_spriteset, IMAGEFILE)
{
  s12_template(608, 2762, 0)
} 

spriteset (er2_m_v9_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2762, 0)
} 

/// моторный развёрнутый
spriteset (er2_mr_spriteset, IMAGEFILE)
{
  s12_template(608, 2831, 0)
} 

spriteset (er2_mr_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2831, 0)
} 

spriteset (er2_mr_v2_spriteset, IMAGEFILE)
{
  s12_template(608, 2900, 0)
} 

spriteset (er2_mr_v2_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2900, 0)
} 

spriteset (er2_mr_v3_spriteset, IMAGEFILE)
{
  s12_template(608, 2969, 0)
} 

spriteset (er2_mr_v3_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 2969, 0)
} 

spriteset (er2_mr_v4_spriteset, IMAGEFILE)
{
  s12_template(608, 3038, 0)
} 

spriteset (er2_mr_v4_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3038, 0)
} 

spriteset (er2_mr_v5_spriteset, IMAGEFILE)
{
  s12_template(608, 3107, 0)
} 

spriteset (er2_mr_v5_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3107, 0)
} 

spriteset (er2_mr_v6_spriteset, IMAGEFILE)
{
  s12_template(608, 3176, 0)
} 

spriteset (er2_mr_v6_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3176, 0)
} 

spriteset (er2_mr_v7_spriteset, IMAGEFILE)
{
  s12_template(608, 3245, 0)
} 

spriteset (er2_mr_v7_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3245, 0)
} 

spriteset (er2_mr_v8_spriteset, IMAGEFILE)
{
  s12_template(608, 3314, 0)
} 

spriteset (er2_mr_v8_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3314, 0)
} 

spriteset (er2_mr_v9_spriteset, IMAGEFILE)
{
  s12_template(608, 3383, 0)
} 

spriteset (er2_mr_v9_notpowered_spriteset, IMAGEFILE)
{
  s12_template(157, 3383, 0)
} 

/// прицепной

spriteset (er2_c_purchase_spriteset, IMAGEFILE)
{
  new_purchase_template(0, 40)
}

spriteset (er2_c_spriteset, IMAGEFILE)
{
  s12_template(608, 3452, 0)
} 

spriteset (er2_c_v2_spriteset, IMAGEFILE)
{
  s12_template(608, 3521, 0)
} 

spriteset (er2_c_v3_spriteset, IMAGEFILE)
{
  s12_template(608, 3590, 0)
} 

spriteset (er2_c_v4_spriteset, IMAGEFILE)
{
  s12_template(608, 3659, 0)
} 

spriteset (er2_c_v5_spriteset, IMAGEFILE)
{
  s12_template(608, 3728, 0)
} 

spriteset (er2_c_v6_spriteset, IMAGEFILE)
{
  s12_template(608, 3797, 0)
} 

spriteset (er2_c_v7_spriteset, IMAGEFILE)
{
  s12_template(608, 3866, 0)
} 

spriteset (er2_cr_spriteset, IMAGEFILE)
{
  s12_template(608, 3935, 0)
} 

spriteset (er2_cr_v2_spriteset, IMAGEFILE)
{
  s12_template(608, 4004, 0)
} 

spriteset (er2_cr_v3_spriteset, IMAGEFILE)
{
  s12_template(608, 4073, 0)
} 

spriteset (er2_cr_v4_spriteset, IMAGEFILE)
{
  s12_template(608, 4142, 0)
} 

spriteset (er2_cr_v5_spriteset, IMAGEFILE)
{
  s12_template(608, 4211, 0)
} 

spriteset (er2_cr_v6_spriteset, IMAGEFILE)
{
  s12_template(608, 4280, 0)
} 

spriteset (er2_cr_v7_spriteset, IMAGEFILE)
{
  s12_template(608, 4349, 0)
} 

/// паззл
// головной
spriteset (er2_h_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 275, 0)
} 

spriteset (er2_h_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 275, 0)
} 

spriteset (er2_h_v2_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 344, 0)
} 

spriteset (er2_h_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 344, 0)
} 

spriteset (er2_h_v3_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 413, 0)
} 

spriteset (er2_h_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 413, 0)
} 

spriteset (er2_h_v4_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 482, 0)
} 

spriteset (er2_h_v4_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 482, 0)
} 

spriteset (er2_h_v5_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 551, 0)
} 

spriteset (er2_h_v5_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 551, 0)
} 

spriteset (er2_h_v6_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 620, 0)
} 

spriteset (er2_h_v6_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 620, 0)
} 

spriteset (er2_h_v7_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 689, 0)
} 

spriteset (er2_h_v7_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 689, 0)
} 

spriteset (er2_h_v8_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 758, 0)
} 

spriteset (er2_h_v8_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 758, 0)
} 

spriteset (er2_h_v9_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 827, 0)
} 

spriteset (er2_h_v9_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 827, 0)
} 

spriteset (er2_h_v10_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 896, 0)
} 

spriteset (er2_h_v10_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 896, 0)
} 

spriteset (er2_h_v11_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 965, 0)
} 

spriteset (er2_h_v11_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 965, 0)
} 

spriteset (er2_h_v12_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 1034, 0)
} 

spriteset (er2_h_v12_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 1034, 0)
} 

spriteset (er2_h_v13_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 1103, 0)
} 

spriteset (er2_h_v13_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 1103, 0)
} 

spriteset (er2_h_v14_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 1172, 0)
} 

spriteset (er2_h_v14_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 1172, 0)
} 

// головной развёрнутый
spriteset (er2_hr_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1244, 0)
} 

spriteset (er2_hr_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1313, 0)
} 

spriteset (er2_hr_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1382, 0)
} 

spriteset (er2_hr_v4_wrong_place_spriteset, IMAGEFILE)
{                   
  s12ui1_template(1775, 1451, 0)
} 

spriteset (er2_hr_v5_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1520, 0)
} 

spriteset (er2_hr_v6_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1589, 0)
} 

spriteset (er2_hr_v7_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1658, 0)
} 

spriteset (er2_hr_v8_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1727, 0)
} 

spriteset (er2_hr_v9_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1796, 0)
} 

spriteset (er2_hr_v10_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1865, 0)
} 

spriteset (er2_hr_v11_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 1934, 0)
} 

spriteset (er2_hr_v12_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2003, 0)
} 

spriteset (er2_hr_v13_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2072, 0)
} 

spriteset (er2_hr_v14_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2141, 0)
} 

// моторный
spriteset (er2_m_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2210, 0)
} 

spriteset (er2_m_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2210, 0)
} 

spriteset (er2_m_v2_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2279, 0)
} 

spriteset (er2_m_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2279, 0)
} 

spriteset (er2_m_v3_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2348, 0)
} 

spriteset (er2_m_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2348, 0)
} 

spriteset (er2_m_v4_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2417, 0)
} 

spriteset (er2_m_v4_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2417, 0)
} 

spriteset (er2_m_v5_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2486, 0)
} 

spriteset (er2_m_v5_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2486, 0)
} 
spriteset (er2_m_v6_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2555, 0)
} 

spriteset (er2_m_v6_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2555, 0)
} 
spriteset (er2_m_v7_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2624, 0)
} 

spriteset (er2_m_v7_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2624, 0)
} 
spriteset (er2_m_v8_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2693, 0)
} 

spriteset (er2_m_v8_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2693, 0)
} 
spriteset (er2_m_v9_cannot_start_spriteset, IMAGEFILE)
{
  s12ui1_template(1701, 2762, 0)
} 

spriteset (er2_m_v9_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2762, 0)
} 

// моторный развёрнутый
spriteset (er2_mr_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2831, 0)
} 

spriteset (er2_mr_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2900, 0)
} 

spriteset (er2_mr_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 2969, 0)
} 

spriteset (er2_mr_v4_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3038, 0)
} 

spriteset (er2_mr_v5_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3107, 0)
} 

spriteset (er2_mr_v6_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3176, 0)
} 

spriteset (er2_mr_v7_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3245, 0)
} 

spriteset (er2_mr_v8_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3314, 0)
} 

spriteset (er2_mr_v9_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3383, 0)
} 

// прицепной
spriteset (er2_c_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3452, 0)
} 

spriteset (er2_c_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3521, 0)
} 

spriteset (er2_c_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3590, 0)
} 

spriteset (er2_c_v4_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3659, 0)
} 

spriteset (er2_c_v5_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3728, 0)
} 

spriteset (er2_c_v6_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3797, 0)
} 

spriteset (er2_c_v7_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3866, 0)
} 

// прицепной развёрнутый
spriteset (er2_cr_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 3935, 0)
} 

spriteset (er2_cr_v2_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4004, 0)
} 

spriteset (er2_cr_v3_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4073, 0)
} 

spriteset (er2_cr_v4_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4142, 0)
} 

spriteset (er2_cr_v5_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4211, 0)
} 

spriteset (er2_cr_v6_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4280, 0)
} 

spriteset (er2_cr_v7_wrong_place_spriteset, IMAGEFILE)
{
  s12ui1_template(1775, 4349, 0)
} 

#undef IMAGEFILE

// Рисуем вариант в депо
// R0 - длина  состава, R1 - позиция вагона в составе
// R2 - кол-во элементов Г в составе --> позиция среди элементов Г в составе
switch (FEAT_TRAINS, SELF, er2_h_get_spriteset5,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(er2_h) - count_veh_id(er2_m)
    - count_veh_id(er2_c), 1),
  STORE_TEMP(LOAD_TEMP(2) - count_veh_id(er2_h), 2),
  ((LOAD_TEMP(1) == 0) || (
    LOAD_TEMP(1) == 3 ? LOAD_TEMP(0) <= 4 :
    LOAD_TEMP(1) == 5 ? LOAD_TEMP(0) <= 6 :
    LOAD_TEMP(1) == 7 ? LOAD_TEMP(0) <= 8 :
    LOAD_TEMP(1) == 9 ? LOAD_TEMP(0) <= 10 :
    LOAD_TEMP(1) == 11 ? LOAD_TEMP(0) <= 12 : 0) * (LOAD_TEMP(2) < 2)) +
  ((LOAD_TEMP(2) % 2) * 2) +
  (cargo_subtype * 4) +
  ((current_year >= 1972) * 8) +
  ((build_year >= 1974) * 20)
])
{
  0: er2_h_wrong_place_spriteset;
  1: er2_h_spritegroup;
  2: er2_hr_wrong_place_spriteset;
  3: er2_hr_spriteset;
  4: er2_h_v2_wrong_place_spriteset;
  5: er2_h_v2_spritegroup;
  6: er2_hr_v2_wrong_place_spriteset;
  7: er2_hr_v2_spriteset;
  8: er2_h_v3_wrong_place_spriteset;
  9: er2_h_v3_spritegroup;
  10: er2_hr_v3_wrong_place_spriteset;
  11: er2_hr_v3_spriteset;
  12: er2_h_v4_wrong_place_spriteset;
  13: er2_h_v4_spritegroup;
  14: er2_hr_v4_wrong_place_spriteset;
  15: er2_hr_v4_spriteset;

  16: er2_h_v5_wrong_place_spriteset;
  17: er2_h_v5_spritegroup;
  18: er2_hr_v5_wrong_place_spriteset;
  19: er2_hr_v5_spriteset;
  20: er2_h_v6_wrong_place_spriteset;
  21: er2_h_v6_spritegroup;
  22: er2_hr_v6_wrong_place_spriteset;
  23: er2_hr_v6_spriteset;
  24: er2_h_v7_wrong_place_spriteset;
  25: er2_h_v7_spritegroup;
  26: er2_hr_v7_wrong_place_spriteset;
  27: er2_hr_v7_spriteset;
  28: er2_h_v8_wrong_place_spriteset;
  29: er2_h_v8_spritegroup;
  30: er2_hr_v8_wrong_place_spriteset;
  31: er2_hr_v8_spriteset;
  32: er2_h_v9_wrong_place_spriteset;
  33: er2_h_v9_spritegroup;
  34: er2_hr_v9_wrong_place_spriteset;
  35: er2_hr_v9_spriteset;
  36: er2_h_v10_wrong_place_spriteset;
  37: er2_h_v10_spritegroup;
  38: er2_hr_v10_wrong_place_spriteset;
  39: er2_hr_v10_spriteset;
  40: er2_h_v11_wrong_place_spriteset;
  41: er2_h_v11_spritegroup;
  42: er2_hr_v11_wrong_place_spriteset;
  43: er2_hr_v11_spriteset;
  44: er2_h_v12_wrong_place_spriteset;
  45: er2_h_v12_spritegroup;
  46: er2_hr_v12_wrong_place_spriteset;
  47: er2_hr_v12_spriteset;
  48: er2_h_v13_wrong_place_spriteset;
  49: er2_h_v13_spritegroup;
  50: er2_hr_v13_wrong_place_spriteset;
  51: er2_hr_v13_spriteset;
  52: er2_h_v14_wrong_place_spriteset;
  53: er2_h_v14_spritegroup;
  54: er2_hr_v14_wrong_place_spriteset;
  55: er2_hr_v14_spriteset;
  align_12_spriteset;
}


switch (FEAT_TRAINS, PARENT, er2_h_get_spriteset4,
[
  STORE_TEMP(count_veh_id(er2_h) + count_veh_id(er2_m)
    + count_veh_id(er2_c), 0), // длина поезда в элементах ЭР2
  STORE_TEMP(count_veh_id(er2_h), 2) // для определения реверса
])
{
  er2_h_get_spriteset5;
}

// Рисуем вариант не в депо, разворачиваем каждый второй
switch (FEAT_TRAINS, SELF, er2_h_get_spriteset3,
[
  ((last_computed_result - count_veh_id(er2_h)) % 2) +
  (cargo_subtype * 2) +
  ((current_year >= 1972) * 4) +
  ((build_year >= 1974) * 10)
])
{
  0: er2_h_spritegroup;
  1: er2_hr_spriteset;
  2: er2_h_v2_spritegroup;
  3: er2_hr_v2_spriteset;
  4: er2_h_v3_spritegroup;
  5: er2_hr_v3_spriteset;
  6: er2_h_v4_spritegroup;
  7: er2_hr_v4_spriteset;
  8: er2_h_v5_spritegroup;
  9: er2_hr_v5_spriteset;
  10: er2_h_v6_spritegroup;
  11: er2_hr_v6_spriteset;
  12: er2_h_v7_spritegroup;
  13: er2_hr_v7_spriteset;
  14: er2_h_v8_spritegroup;
  15: er2_hr_v8_spriteset;
  16: er2_h_v9_spritegroup;
  17: er2_hr_v9_spriteset;
  18: er2_h_v10_spritegroup;
  19: er2_hr_v10_spriteset;
  20: er2_h_v11_spritegroup;
  21: er2_hr_v11_spriteset;
  22: er2_h_v12_spritegroup;
  23: er2_hr_v12_spriteset;
  24: er2_h_v13_spritegroup;
  25: er2_hr_v13_spriteset;
  26: er2_h_v14_spritegroup;
  27: er2_hr_v14_spriteset;
  align_12_spriteset;
}

switch (FEAT_TRAINS, PARENT, er2_h_get_spriteset2,
  count_veh_id(er2_h)) // для определения реверса
{
  er2_h_get_spriteset3;
}

// рисуем на карте?
switch (FEAT_TRAINS, SELF, er2_h_get_spriteset1,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  er2_h_get_spriteset2;
}

// рисуем в депо?
switch (FEAT_TRAINS, SELF, er2_h_get_spriteset,
  is_drawn_in_depot())
{
  1: er2_h_get_spriteset4;
  er2_h_get_spriteset1;
}

// Рисуем вариант в депо
// R0 - длина  поезда, R1 - позиция вагона
// R2 - кол-во элементов М в составе
switch (FEAT_TRAINS, SELF, er2_m_get_spriteset5,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(er2_h) - count_veh_id(er2_m)
    - count_veh_id(er2_c), 1),
  STORE_TEMP(LOAD_TEMP(2) - count_veh_id(er2_m), 3),
  (((LOAD_TEMP(1) == 1) || (
    LOAD_TEMP(1) == 2 ? LOAD_TEMP(0) <= 4 :
    LOAD_TEMP(1) == 3 ? LOAD_TEMP(0) > 4 :
    LOAD_TEMP(1) == 4 ? (LOAD_TEMP(0) > 4) && (LOAD_TEMP(0) <= 8) :
    LOAD_TEMP(1) == 5 ? LOAD_TEMP(0) > 8 :
    LOAD_TEMP(1) == 6 ? LOAD_TEMP(0) > 6 :
    LOAD_TEMP(1) == 8 ? LOAD_TEMP(0) > 8 :
    LOAD_TEMP(1) == 10 ? LOAD_TEMP(0) > 10 : 0)) *
    ((!(vehicle_is_not_powered || vehicle_is_in_depot || LOAD_TEMP(4))) + 1) *
    (LOAD_TEMP(3) < 6)) +
  ((LOAD_TEMP(3) >= ((LOAD_TEMP(2) / 2) + (LOAD_TEMP(2) % 2))) * 3) +
  (cargo_subtype * 6) +
  ((build_year >= 1968) * 12)
])
{
  0: er2_m_wrong_place_spriteset;
  1: er2_m_notpowered_spriteset;
  2: er2_m_spriteset;
  3: er2_mr_wrong_place_spriteset;
  4: er2_mr_notpowered_spriteset;
  5: er2_mr_spriteset;

  6: er2_m_v2_wrong_place_spriteset;
  7: er2_m_v2_notpowered_spriteset;
  8: er2_m_v2_spriteset;
  9: er2_mr_v2_wrong_place_spriteset;
  10: er2_mr_v2_notpowered_spriteset;
  11: er2_mr_v2_spriteset;
  12: er2_m_v3_wrong_place_spriteset;
  13: er2_m_v3_notpowered_spriteset;
  14: er2_m_v3_spriteset;
  15: er2_mr_v3_wrong_place_spriteset;
  16: er2_mr_v3_notpowered_spriteset;
  17: er2_mr_v3_spriteset;
  18: er2_m_v4_wrong_place_spriteset;
  19: er2_m_v4_notpowered_spriteset;
  20: er2_m_v4_spriteset;
  21: er2_mr_v4_wrong_place_spriteset;
  22: er2_mr_v4_notpowered_spriteset;
  23: er2_mr_v4_spriteset;
  24: er2_m_v5_wrong_place_spriteset;
  25: er2_m_v5_notpowered_spriteset;
  26: er2_m_v5_spriteset;
  27: er2_mr_v5_wrong_place_spriteset;
  28: er2_mr_v5_notpowered_spriteset;
  29: er2_mr_v5_spriteset;
  30: er2_m_v6_wrong_place_spriteset;
  31: er2_m_v6_notpowered_spriteset;
  32: er2_m_v6_spriteset;
  33: er2_mr_v6_wrong_place_spriteset;
  34: er2_mr_v6_notpowered_spriteset;
  35: er2_mr_v6_spriteset;
  36: er2_m_v7_wrong_place_spriteset;
  37: er2_m_v7_notpowered_spriteset;
  38: er2_m_v7_spriteset;
  39: er2_mr_v7_wrong_place_spriteset;
  40: er2_mr_v7_notpowered_spriteset;
  41: er2_mr_v7_spriteset;
  42: er2_m_v8_wrong_place_spriteset;
  43: er2_m_v8_notpowered_spriteset;
  44: er2_m_v8_spriteset;
  45: er2_mr_v8_wrong_place_spriteset;
  46: er2_mr_v8_notpowered_spriteset;
  47: er2_mr_v8_spriteset;
  48: er2_m_v9_wrong_place_spriteset;
  49: er2_m_v9_notpowered_spriteset;
  50: er2_m_v9_spriteset;
  51: er2_mr_v9_wrong_place_spriteset;
  52: er2_mr_v9_notpowered_spriteset;
  53: er2_mr_v9_spriteset;
  align_12_spriteset;
}


switch (FEAT_TRAINS, PARENT, er2_m_get_spriteset4,
[
  STORE_TEMP(count_veh_id(er2_h) + count_veh_id(er2_m)
    + count_veh_id(er2_c), 0), // длина поезда в элементах ЭР2
  STORE_TEMP(count_veh_id(er2_m), 2), // для определения реверса
  STORE_TEMP(vehicle_type_id != er2_h, 4) // локомотив не er2_h
])
{
  er2_m_get_spriteset5;
}

// Рисуем вариант не в депо
// R2 - кол-во элементов Г в составе
// R3 - наличие тяги (локомотив er2_h)
switch (FEAT_TRAINS, SELF, er2_m_get_spriteset3,
[
  ((!(vehicle_is_not_powered || vehicle_is_in_depot)) && LOAD_TEMP(3)) +
  (((LOAD_TEMP(2) - count_veh_id(er2_m)) >=
    ((LOAD_TEMP(2) / 2) + (LOAD_TEMP(2) % 2))) * 2) +
  (cargo_subtype * 4) +
  ((build_year >= 1968) * 8)
])
{
  0: er2_m_notpowered_spriteset;
  1: er2_m_spriteset;
  2: er2_mr_notpowered_spriteset;
  3: er2_mr_spriteset;

  4: er2_m_v2_notpowered_spriteset;
  5: er2_m_v2_spriteset;
  6: er2_mr_v2_notpowered_spriteset;
  7: er2_mr_v2_spriteset;
  8: er2_m_v3_notpowered_spriteset;
  9: er2_m_v3_spriteset;
  10: er2_mr_v3_notpowered_spriteset;
  11: er2_mr_v3_spriteset;
  12: er2_m_v4_notpowered_spriteset;
  13: er2_m_v4_spriteset;
  14: er2_mr_v4_notpowered_spriteset;
  15: er2_mr_v4_spriteset;
  16: er2_m_v5_notpowered_spriteset;
  17: er2_m_v5_spriteset;
  18: er2_mr_v5_notpowered_spriteset;
  19: er2_mr_v5_spriteset;
  20: er2_m_v6_notpowered_spriteset;
  21: er2_m_v6_spriteset;
  22: er2_mr_v6_notpowered_spriteset;
  23: er2_mr_v6_spriteset;
  24: er2_m_v7_notpowered_spriteset;
  25: er2_m_v7_spriteset;
  26: er2_mr_v7_notpowered_spriteset;
  27: er2_mr_v7_spriteset;
  28: er2_m_v8_notpowered_spriteset;
  29: er2_m_v8_spriteset;
  30: er2_mr_v8_notpowered_spriteset;
  31: er2_mr_v8_spriteset;
  32: er2_m_v9_notpowered_spriteset;
  33: er2_m_v9_spriteset;
  34: er2_mr_v9_notpowered_spriteset;
  35: er2_mr_v9_spriteset;
  align_12_spriteset;
}


switch (FEAT_TRAINS, PARENT, er2_m_get_spriteset2,
[
  STORE_TEMP(count_veh_id(er2_m), 2), // для определения реверса
  STORE_TEMP(vehicle_type_id == er2_h, 3) // для определения наличия тяги
])
{
  er2_m_get_spriteset3;
}

// рисуем на карте?
switch (FEAT_TRAINS, SELF, er2_m_get_spriteset1,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  er2_m_get_spriteset2;
}

// рисуем в депо?
switch (FEAT_TRAINS, SELF, er2_m_get_spriteset,
  is_drawn_in_depot())
{
  1: er2_m_get_spriteset4;
  er2_m_get_spriteset1;
}

// Рисуем вариант в депо
// R0 - длина  поезда, R1 - позиция вагона
// R2 - кол-во элементов М в составе
switch (FEAT_TRAINS, SELF, er2_c_get_spriteset5,
[
  STORE_TEMP(LOAD_TEMP(0) - count_veh_id(er2_h) - count_veh_id(er2_m)
    - count_veh_id(er2_c), 1),
  STORE_TEMP(LOAD_TEMP(2) - count_veh_id(er2_c), 3),
  ((LOAD_TEMP(1) == 2 ? (LOAD_TEMP(0) > 4) :
    LOAD_TEMP(1) == 4 ? LOAD_TEMP(0) > 8 :
    LOAD_TEMP(1) == 5 ? (LOAD_TEMP(0) > 6) && (LOAD_TEMP(0) <= 8) :
    LOAD_TEMP(1) == 7 ? LOAD_TEMP(0) > 8 :
    LOAD_TEMP(1) == 9 ? LOAD_TEMP(0) > 10 : 0) * (LOAD_TEMP(3) < 4)) +
  ((LOAD_TEMP(3) > ((LOAD_TEMP(2) / 2) + (LOAD_TEMP(2) % 2))) * 2) +
  (cargo_subtype * 4)
])
{
  0: er2_c_wrong_place_spriteset;
  1: er2_c_spriteset;
  2: er2_cr_wrong_place_spriteset;
  3: er2_cr_spriteset;

  4: er2_c_v2_wrong_place_spriteset;
  5: er2_c_v2_spriteset;
  6: er2_cr_v2_wrong_place_spriteset;
  7: er2_cr_v2_spriteset;
  8: er2_c_v3_wrong_place_spriteset;
  9: er2_c_v3_spriteset;
  10: er2_cr_v3_wrong_place_spriteset;
  11: er2_cr_v3_spriteset;
  12: er2_c_v4_wrong_place_spriteset;
  13: er2_c_v4_spriteset;
  14: er2_cr_v4_wrong_place_spriteset;
  15: er2_cr_v4_spriteset;
  16: er2_c_v5_wrong_place_spriteset;
  17: er2_c_v5_spriteset;
  18: er2_cr_v5_wrong_place_spriteset;
  19: er2_cr_v5_spriteset;
  20: er2_c_v6_wrong_place_spriteset;
  21: er2_c_v6_spriteset;
  22: er2_cr_v6_wrong_place_spriteset;
  23: er2_cr_v6_spriteset;
  24: er2_c_v7_wrong_place_spriteset;
  25: er2_c_v7_spriteset;
  26: er2_cr_v7_wrong_place_spriteset;
  27: er2_cr_v7_spriteset;
  align_12_spriteset;
}


switch (FEAT_TRAINS, PARENT, er2_c_get_spriteset4,
[
  STORE_TEMP(count_veh_id(er2_h) + count_veh_id(er2_m)
    + count_veh_id(er2_c), 0), // длина поезда в элементах ЭР2
  STORE_TEMP(count_veh_id(er2_c), 2) // для определения реверса
])
{
  er2_c_get_spriteset5;
}

// Рисуем вариант не в депо
// last_computed_result - кол-во элементов Г в составе
switch (FEAT_TRAINS, SELF, er2_c_get_spriteset3,
[
  ((last_computed_result - count_veh_id(er2_c)) >
    ((last_computed_result / 2) + (last_computed_result % 2))) +
  (cargo_subtype * 2)
])
{
  0: er2_c_spriteset;
  1: er2_cr_spriteset;
  2: er2_c_v2_spriteset;
  3: er2_cr_v2_spriteset;
  4: er2_c_v3_spriteset;
  5: er2_cr_v3_spriteset;
  6: er2_c_v4_spriteset;
  7: er2_cr_v4_spriteset;
  8: er2_c_v5_spriteset;
  9: er2_cr_v5_spriteset;
  10: er2_c_v6_spriteset;
  11: er2_cr_v6_spriteset;
  12: er2_c_v7_spriteset;
  13: er2_cr_v7_spriteset;
  align_12_spriteset;
}


switch (FEAT_TRAINS, PARENT, er2_c_get_spriteset2,
  count_veh_id(er2_c)) // для определения реверса
{
  er2_c_get_spriteset3;
}

// рисуем на карте?
switch (FEAT_TRAINS, SELF, er2_c_get_spriteset1,
  is_drawn_in_viewport() && is_hidden_at(1))
{
  1: dummy_spriteset;
  er2_c_get_spriteset2;
}

// рисуем в депо?
switch (FEAT_TRAINS, SELF, er2_c_get_spriteset,
  is_drawn_in_depot())
{
  1: er2_c_get_spriteset4;
  er2_c_get_spriteset1;
}

// покупка
switch (FEAT_TRAINS, SELF, er2_m_get_purchase_spriteset,
  (current_year >= 1968)
)
{
  0: er2_m_purchase_spriteset;
  er2_m_v3_purchase_spriteset;
}

switch (FEAT_TRAINS, SELF, er2_h_get_purchase_spriteset,
  (current_year >= 1972)+
  (current_year >= 1974)
)
{
  0: er2_h_purchase_spriteset;
  1: er2_h_v3_purchase_spriteset;
  er2_h_v8_purchase_spriteset;
}

// Более 2-х головных вагонов нельзя
// После головного присоединять нельзя
// Более 12 вагонов в составе нельзя
switch (FEAT_TRAINS, PARENT, er2_h_can_attach_wagon1,
  (count_veh_id(er2_h) > 1) ? (last_computed_result == er2_h ? 0 : 1) :
    (num_vehs_in_consist >= 12 * 2) ? 2 : 3
)
{
  0: return string(STR_CAN_ATTACH_NO_MORE_THAN_2_HEAD);
  1: return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
  2: return string(STR_CAN_ATTACH_NO_MORE_THAN_12_UNITS);
  return CB_RESULT_ATTACH_ALLOW;
}

// Можно присоединять только компоненты ЭР1
switch (FEAT_TRAINS, SELF, er2_h_can_attach_wagon,
  vehicle_type_id)
{
  er2_h: er2_h_can_attach_wagon1;
  er2_m: er2_h_can_attach_wagon1;
  er2_c: er2_h_can_attach_wagon1;
  return CB_RESULT_ATTACH_DISALLOW;
}

// Можно присоединять только компоненты ЭР1
switch (FEAT_TRAINS, SELF, er2_m_can_attach_wagon,
  vehicle_type_id)
{
  er2_h: return CB_RESULT_ATTACH_ALLOW;
  er2_m: return CB_RESULT_ATTACH_ALLOW;
  er2_c: return CB_RESULT_ATTACH_ALLOW;
  return CB_RESULT_ATTACH_DISALLOW;
}

// TL == 12
switch (FEAT_TRAINS, PARENT, er2_h_start_stop5,
[
  set_offset_to(2),
  STORE_TEMP(prev_vehicle_type_id() == er2_m, 0),
  set_offset_to(4),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(6),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(8),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(10),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(12),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(14),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(16),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(18),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(20),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(22),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_h), 0),
  LOAD_TEMP(0)
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_WRONG_STRUCTURE_OF_TRAIN_12);
}

// TL == 10
switch (FEAT_TRAINS, PARENT, er2_h_start_stop4,
[
  set_offset_to(2),
  STORE_TEMP(prev_vehicle_type_id() == er2_m, 0),
  set_offset_to(4),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(6),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(8),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(10),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(12),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(14),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(16),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(18),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_h), 0),
  LOAD_TEMP(0)
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_WRONG_STRUCTURE_OF_TRAIN_10);
}

// TL == 8
switch (FEAT_TRAINS, PARENT, er2_h_start_stop3,
[
  set_offset_to(2),
  STORE_TEMP(prev_vehicle_type_id() == er2_m, 0),
  set_offset_to(4),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(6),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(8),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(10),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(12),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(14),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_h), 0),
  LOAD_TEMP(0)
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_WRONG_STRUCTURE_OF_TRAIN_8);
}

// TL == 6
switch (FEAT_TRAINS, PARENT, er2_h_start_stop2,
[
  set_offset_to(2),
  STORE_TEMP(prev_vehicle_type_id() == er2_m, 0),
  set_offset_to(4),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_c), 0),
  set_offset_to(6),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(8),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(10),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_h), 0),
  LOAD_TEMP(0)
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_WRONG_STRUCTURE_OF_TRAIN_6);
}

// TL == 4
switch (FEAT_TRAINS, PARENT, er2_h_start_stop1,
[
  set_offset_to(2),
  STORE_TEMP(prev_vehicle_type_id() == er2_m, 0),
  set_offset_to(4),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_m), 0),
  set_offset_to(6),
  STORE_TEMP(LOAD_TEMP(0) && (prev_vehicle_type_id() == er2_h), 0),
  LOAD_TEMP(0)
])
{
  1: return CB_RESULT_NO_TEXT;
  return string(STR_START_STOP_WRONG_STRUCTURE_OF_TRAIN_4);
}

switch (FEAT_TRAINS, PARENT, er2_h_start_stop,
  // длина состава в элементах ЭР2
  count_veh_id(er2_h) + count_veh_id(er2_m) + count_veh_id(er2_c))
{
  4: er2_h_start_stop1;
  6: er2_h_start_stop2;
  8: er2_h_start_stop3;
  10: er2_h_start_stop4;
  12: er2_h_start_stop5;
  return string(STR_START_STOP_WRONG_TRAIN_LENGTH_SHOULD_BE_4_6_8_10_12);
}

// Моторный самостоятельно выпускать из депо нельзя
switch (FEAT_TRAINS, SELF, er2_m_start_stop,
  0)
{
  return string(STR_START_STOP_MOTORIZED_CAR_CANNOT_LEAVE_DEPOT);
}

// Визуализируем эффекты тяги у er2_m, только если локомотив - er2_h
switch (FEAT_TRAINS, PARENT, er2_m_visual_effect_and_powered,
  vehicle_type_id == er2_h)
{
  1: return electric_visual_effect_and_powered(0);
  return disable_visual_effect_and_powered();
}

// Даём тягу, только если локомотив - er2_h
switch (FEAT_TRAINS, PARENT, er2_m_power,
  vehicle_type_id == er2_h)
{
  1: return get_power_in_cb(959); // -12 Поправка, чтобы показывалось 959
  return 0;
}

switch (FEAT_TRAINS, SELF, er2_cargo_subtype_text3,
  build_year >= 1990)
{
  1: string(STR_REFIT_UKRAINIAN_RAILWAY);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, er2_cargo_subtype_text2,
  build_year >= 1972)
{
  1: string(STR_REFIT_MOSCOW_RAILWAY);
  return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, er2_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_GREEN_GRASS);
  1: string(STR_REFIT_RAL_6020);
  2: er2_cargo_subtype_text2;
  3: string(STR_REFIT_OCTOBER_RAILWAY);
  4: string(STR_REFIT_WEST_SIBERIAN_RAILWAY);
  5: er2_cargo_subtype_text3;
  6: string(STR_REFIT_LDZ);
  return CB_RESULT_NO_TEXT;
}

item (FEAT_TRAINS, er2_h) 
{
  property
  {
    name: string(STR_ER2_H_NAME);
    climates_available: get_climates_available();
    introduction_date: date(1962, 1, 1);
    model_life: 30; // VEHICLE_NEVER_EXPIRES;
    vehicle_life: 30; // срок службы
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12; // скорость погрузки/выгрузки, пассажиров
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 130 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 84;
    weight: 40.9 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: er2_h_get_spriteset;
    purchase: er2_h_get_purchase_spriteset;
    articulated_part: articulated_part_dummy4;
    can_attach_wagon: er2_h_can_attach_wagon;
    start_stop: er2_h_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_ER2_H_PURCHASE_HINT);
    cargo_subtype_text: er2_cargo_subtype_text;
    power: return 0;
  }
}

item (FEAT_TRAINS, er2_m) 
{
  property
  {
    name: string(STR_ER2_M_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1962), 1, 1);
    model_life: 30;
    vehicle_life: 30;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 959 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 110;
    weight: 54.6 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: 0.06541;
    length: 8;
  }
  graphics {
    default: er2_m_get_spriteset;
    purchase: er2_m_get_purchase_spriteset;
    articulated_part: articulated_part_dummy4;
    can_attach_wagon: er2_m_can_attach_wagon;
    start_stop: er2_m_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_ER2_M_PURCHASE_HINT);
    cargo_subtype_text: er2_cargo_subtype_text;
    visual_effect_and_powered: er2_m_visual_effect_and_powered;
    power: er2_m_power;
  }
}

item (FEAT_TRAINS, er2_c) 
{
  property
  {
    name: string(STR_ER2_C_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_car_year(1962), 1, 1);
    model_life: 30; // VEHICLE_NEVER_EXPIRES;
    vehicle_life: 30;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    loading_speed: 12;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    cargo_capacity: 108;
    weight: 38.3 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: er2_c_get_spriteset;
    purchase: er2_c_purchase_spriteset;
    articulated_part: articulated_part_dummy4;
    additional_text: return string(STR_ER2_C_PURCHASE_HINT);
    cargo_subtype_text: er2_cargo_subtype_text;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    power: return 0;
    can_attach_wagon: er2_m_can_attach_wagon;
    start_stop: return string(STR_CANNOT_START_HEAD);
  }
}
