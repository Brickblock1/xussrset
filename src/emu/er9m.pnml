 // er9m
// 387 (183h) 388 (184h) 389 (185h)

#define IMAGEFILE  "src/emu/er9m.png"
purchase_sprites(er9m_h, 0, 0)
purchase_sprites(er9m_m, 120, 0)
purchase_sprites(er9m_c, 240, 0)

MU_3r_0_0_sprites(12, er9m_v1, 32, 40)
MU_0_3_0_sprites(12, er9m_v1, 32, 40)
MU_0_0_2_sprites(12, er9m_v1, 32, 40)
#undef IMAGEFILE
                              
#define IMAGEFILE  "src/emu/er9m-uz.png"
MU_3r_0_0_sprites(12, er9m_v2, 32, 40)
MU_0_3_0_sprites(12, er9m_v2, 32, 40)
MU_0_0_2_sprites(12, er9m_v2, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, er9m_h_sprites_left,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_h_sprites_left;
    1: er9m_v2_h_sprites_left;
  100: er9m_v1_h_notpowered_sprites_left;
  101: er9m_v2_h_notpowered_sprites_left;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9m_h_sprites_right,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_h_sprites_right;
    1: er9m_v2_h_sprites_right;
  100: er9m_v1_h_notpowered_sprites_right;
  101: er9m_v2_h_notpowered_sprites_right;
       align_12_sprites;
}

engine_direction_template3m2(er9m_h, er9m_m, er9m_c, )

long_vehicle(er9m_h)

switch (FEAT_TRAINS, SELF, er9m_m_direction_left,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_m_sprites_left;
    1: er9m_v2_m_sprites_left;
  100: er9m_v1_m_notpowered_sprites_left;
  101: er9m_v2_m_notpowered_sprites_left;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9m_m_direction_right,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_m_sprites_right;
    1: er9m_v2_m_sprites_right;
  100: er9m_v1_m_notpowered_sprites_right;
  101: er9m_v2_m_notpowered_sprites_right;
       align_12_sprites;
}

EMU_46789101112_m_template(er9m)

EMU_direction_calculation_template(er9m, _m)

long_vehicle_dir(er9m_m)

switch (FEAT_TRAINS, SELF, er9m_c_direction_left,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_c_sprites_left;
    1: er9m_v2_c_sprites_left;
  100: er9m_v1_c_notpowered_sprites_left;
  101: er9m_v2_c_notpowered_sprites_left;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9m_c_direction_right,
  cargo_subtype +
  ((LOAD_TEMP(4) != er9m_h) * 100) )
{
    0: er9m_v1_c_sprites_right;
    1: er9m_v2_c_sprites_right;
  100: er9m_v1_c_notpowered_sprites_right;
  101: er9m_v2_c_notpowered_sprites_right;
       align_12_sprites;
}

EMU_46789101112_c_template(er9m)

EMU_direction_calculation_template(er9m, _c)

long_vehicle_dir(er9m_c)

EMU_4681012_can_attach_wagon_template(er9m)

EMU_attach_calculation_template(er9m)

switch (FEAT_TRAINS, SELF, er9m_can_attach_wagon1, vehicle_type_id)
{
  er9m_h: er9m_can_attach_wagon_template;
  er9m_m: er9m_can_attach_wagon_template;
  er9m_c: er9m_can_attach_wagon_template;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, er9m_can_attach_wagon, count_veh_id(er9m_h))
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
  1: er9m_can_attach_wagon1;
     return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
}

switch (FEAT_TRAINS, PARENT, er9m_h_start_stop,
  count_veh_id(er9m_h))
{
  2: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

// Моторный самостоятельно выпускать из депо нельзя
switch (FEAT_TRAINS, SELF, er9m_m_start_stop,
  0)
{
     return string(STR_START_STOP_MOTORIZED_CAR_CANNOT_LEAVE_DEPOT);
}

// Визуализируем эффекты тяги у er9m_m, только если локомотив - er9m_h
EMU_46789101112_m_create_effect_template(er9m, -1, 5)

EMU_direction_calculation_template(er9m, _m_create_effect)

switch (FEAT_TRAINS, PARENT, er9m_m_create_effect,
  vehicle_type_id == er9m_h)
{
  1: er9m_m_create_effect_direction_template;
     return disable_create_effect();
}

// Даём тягу, только если локомотив - er9m_h
switch (FEAT_TRAINS, PARENT, er9m_m_power,
  vehicle_type_id == er9m_h)
{
  1: return get_power_in_cb(826); 
     return 0;
}

// Допускается эксплуатация с пассажирами только если голова - er9m_h
switch (FEAT_TRAINS, PARENT, er9m_h_cargo_capacity,
  (vehicle_type_id == er9m_h) )
{
  1: return 88;
     return 0;
}

switch (FEAT_TRAINS, PARENT, er9m_m_cargo_capacity,
  (vehicle_type_id == er9m_h) )
{
  1: return 107;
     return 0;
}

switch (FEAT_TRAINS, PARENT, er9m_c_cargo_capacity,
  (vehicle_type_id == er9m_h) )
{
  1: return 108;
     return 0;
}

switch (FEAT_TRAINS, SELF, er9m_cargo_subtype_text1,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY_62255, string(STR_REFIT_TTD_53));
  1: return string(STR_REFIT_FACTORY_62255, string(STR_REFIT_UKRAINIAN_RAILWAY));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, er9m_cargo_subtype_text,
  (current_year >= 1990) )
{
  0: return string(STR_REFIT_FACTORY_62255, string(STR_REFIT_TTD_53));
     er9m_cargo_subtype_text1;
}

general_running_cost(er9m_m_v1, 108)

switch (FEAT_TRAINS, PARENT, er9m_m_running_cost_factor,
  vehicle_type_id == er9m_h)
{
  1: er9m_m_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

general_running_cost(er9m_h_v1, 66)

switch (FEAT_TRAINS, PARENT, er9m_h_running_cost_factor,
  vehicle_type_id == er9m_h)
{
  1: er9m_h_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

general_running_cost(er9m_c_v1, 45)

switch (FEAT_TRAINS, PARENT, er9m_c_running_cost_factor,
  vehicle_type_id == er9m_h)
{
  1: er9m_c_v1_running_cost_factor;
     return RC_MU_AS_CAR;
}

item (FEAT_TRAINS, er9m_h, 387) {
  property {
    name: string(STR_NAME_ER9M);
    vehicle_dates(1976, 1983, 30, 10, 8, 9)
    vehicle_acemu_c(39, 88, 48)
  }
  graphics {
    default: er9m_h_sprites;
    purchase: er9m_h_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: er9m_h_running_cost_factor;
    articulated_part: articulated_part_dummy4;
    can_attach_wagon: er9m_can_attach_wagon;
    start_stop: er9m_h_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_2TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_H_AC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_257)),
                                   string(STR_SECTIONS_EMU_4_6_8_10_12),
                                   string(STR_PURCHASE_HINT_FROMTO, 1976, 1983),
                                   string(STR_PURCHASE_HINT_FACTORY_RIGA_CW));
    power: return 0;
    cargo_capacity: er9m_h_cargo_capacity;
    cargo_subtype_text: er9m_cargo_subtype_text;
  }
}

item (FEAT_TRAINS, er9m_m, 388) {
  property {
    name: string(STR_NAME_ER9M);
    vehicle_dates(1976, 1983, 30, 10, 8, 15)
    vehicle_acemu(826, 57, 93.4, 107, 48)
  }
  graphics {
    default: er9m_m_sprites;
    purchase: er9m_m_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: er9m_m_running_cost_factor;
    articulated_part: articulated_part_dummy4;
    can_attach_wagon: er9m_can_attach_wagon;
    start_stop: er9m_m_start_stop;
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_M_AC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_256)),
                                   string(STR_SECTIONS_EMU_4_6_8_10_12),
                                   string(STR_PURCHASE_HINT_FROMTO, 1976, 1983),
                                   string(STR_PURCHASE_HINT_FACTORY_RIGA_CW));
    power: er9m_m_power;
    cargo_capacity: er9m_m_cargo_capacity;
    cargo_subtype_text: er9m_cargo_subtype_text;
    create_effect: er9m_m_create_effect;
  }
}

item (FEAT_TRAINS, er9m_c, 389) {
  property {
    name: string(STR_NAME_ER9M);
    vehicle_dates(1976, 1983, 30, 10, 8, 6)
    vehicle_acemu_c(37, 108, 48)
  }
  graphics {
    default: er9m_c_sprites;
    purchase: er9m_c_purchase_sprites;
    cargo_age_period: return 60;
    running_cost_factor: er9m_c_running_cost_factor;
    articulated_part: articulated_part_dummy4;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_1_1),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_C_AC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_62_258)),
                                   string(STR_SECTIONS_EMU_4_6_8_10_12),
                                   string(STR_PURCHASE_HINT_FROMTO, 1976, 1983),
                                   string(STR_PURCHASE_HINT_FACTORY_RIGA_CW));
    speed: speed_after30_130to110;
    purchase_speed: return 130;
    can_attach_wagon: er9m_can_attach_wagon;
    start_stop: er9m_m_start_stop;
    power: return 0;
    cargo_capacity: er9m_c_cargo_capacity;
    cargo_subtype_text: er9m_cargo_subtype_text;
  }
}

long_name_template(er9m_h, STR_LONGNAME_ER9M_H)
long_name_template(er9m_m, STR_LONGNAME_ER9M_M)
long_name_template(er9m_c, STR_LONGNAME_ER9M_C)
allow_acemu(er9m_h)
allow_acemu(er9m_m)
allow_acemu(er9m_c)
