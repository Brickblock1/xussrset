// es250

#define IMAGEFILE  "src/emu/es250_01.png"
purchase_sprites(es250, 0, 0)
MU_head_sprites(16, es250_h, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/es250_02.png"
MU_car_sprites(15, es250_02, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/es250_03.png"
EMU_motor1_middle_sprites(15, es250_03, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, es250_h_sprites_left_check,
  position_in_consist == 0)
{
  1: es250_h_sprites_left;
     es250_h_notpowered_sprites_left;
}

switch (FEAT_TRAINS, SELF, es250_h_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: es250_h_sprites_right;
     es250_h_notpowered_sprites_right;
}

switch (FEAT_TRAINS, SELF, es250_never_train, position_in_articulated_veh)
{
  1: es250_03_sprites_left;
  2: es250_03_normal_sprites;
     align_15_sprites;
}

switch (FEAT_TRAINS, SELF, es250_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   ((LOAD_TEMP(4) != es250) * 200) +
   (prev_vehicle_randombits() & 0x01) * 100 +
   position_in_articulated_veh])
{
   0: es250_h_sprites_left_check;
   2: es250_02_sprites_left;
   4: es250_03_notpowered_normal_sprites_left;
   6: es250_03_sprites_right;
   8: es250_02_sprites_right;
  10: es250_h_sprites_right_check;

 100: es250_h_sprites_left_check;
 102: es250_02_sprites_left;
 104: es250_03_notpowered_normal_sprites_left;
 106: es250_03_sprites_right;
 108: es250_02_sprites_right;
 110: es250_h_sprites_right_check;

 200: es250_h_sprites_left_check;
 202: es250_02_notpowered_sprites_left;
 204: es250_03_notpowered_sprites_left;
 206: es250_03_notpowered_sprites_right;
 208: es250_02_notpowered_sprites_right;
 210: es250_h_sprites_right_check;

 300: es250_h_sprites_left_check;
 302: es250_02_notpowered_sprites_left;
 304: es250_03_notpowered_sprites_left;
 306: es250_03_notpowered_sprites_right;
 308: es250_02_notpowered_sprites_right;
 310: es250_h_sprites_right_check;

 777: es250_never_train;

      align_15_sprites;
}

long_vehicle(es250)

switch (FEAT_TRAINS, SELF, es250_articulated_part,
  extra_callback_info1)
{
  1: return dummy8;
  2: return es250_part2;
  3: return dummy7;
  4: return es250_part3;
  5: return dummy7;
  6: return es250_part3;
  7: return dummy7;
  8: return es250_part3;
  9: return dummy7;
 10: return es250_part3;
 11: return dummy8;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, es250_create_effect_04,
  electric_create_effect(-2)) { return 1; }

switch (FEAT_TRAINS, SELF, es250_create_effect0,
  position_in_articulated_veh)
{
  6: es250_create_effect_04;
     return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, es250_create_effect,
  vehicle_type_id == es250)
{
  1: es250_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, es250_can_attach_wagon2,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, es250_can_attach_wagon1,
  STORE_TEMP(count_veh_id(es250), 0))
{
  es250_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, es250_can_attach_wagon,
  vehicle_type_id == es250)
{
  1: es250_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

RC_head_check_new(es250, es250)

switch (FEAT_TRAINS, SELF, es250_running_cost_factor,
[  STORE_TEMP(1561, 0),  // Моторы
   STORE_TEMP(219, 1),   // Бригада
   STORE_TEMP(548, 2),   // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(383, 4),   // ТО
   STORE_TEMP(27, 5),    // Сертификация

   STORE_TEMP(250, 6),                                // Скорость
   STORE_TEMP(423, 7),                                // Тара
   STORE_TEMP(LOAD_TEMP(7) + 350 / 16 + 48 / 8, 8)])  // Максимальная масса
{ es250_check_running_cost_factor; }                  // 1921+817

engine_capacity_MU(es250, 48, es250)
engine_power_MU(es250, 7341, es250)

hint_MU_2fact(es250,
     calc_loading(max(350 / (9 * WAGON_DOOR), 48 / WAGON_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_ACDC,
     STR_SECTIONS_MU_S1_2of6,
     1999, 2002,
     string(STR_PURCHASE_HINT_FACTORY_RAO_VSM),
     string(STR_PURCHASE_HINT_FACTORY_TIKHVIN_CBP))

item (FEAT_TRAINS, es250, 445) {
  property {
    name: string(STR_NAME_ES250);
    vehicle_dates(1999, 2002, 30, 10, 8, 2000)
    vehicle_emu(acdc, 7341, 356, 200.0, 48, WAGON_DOOR, _highspeed)
    vehicle_allow_tourists()
  }
  graphics {
        additional_text: es250_additional_text;
       articulated_part: es250_articulated_part;
       can_attach_wagon: es250_can_attach_wagon;
       cargo_age_period: return 370;
         cargo_capacity: es250_cargo_capacity;
         colour_mapping: any_cc_colour;
            cost_factor: return 2000;
          create_effect: es250_create_effect;
                default: es250_sprites;
                  power: es250_power;
               purchase: es250_purchase_sprites;
         purchase_speed: return 250;
             refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    running_cost_factor: es250_running_cost_factor;
                  speed: return 250;
  }
}

long_name_template(es250, STR_LONGNAME_ES250)
allow_acdcemu(es250)

engine_capacity_MU(es250_part2, 350, es250)

item (FEAT_TRAINS, es250_part2, 446) {
  property {
    vehicle_no_dates(1999, 2002, 30, 10, 8, 0)
    vehicle_emu_c(acdc, 0, 350, 9 * WAGON_DOOR, _highspeed)
  }
  graphics {
    cargo_age_period: return 174;
      cargo_capacity: es250_part2_cargo_capacity;
      colour_mapping: any_cc_colour;
       create_effect: es250_create_effect;
             default: es250_sprites;
  }
}

item (FEAT_TRAINS, es250_part3, 447) {
  property {
    vehicle_no_dates(1999, 2002, 30, 10, 8, 0)
    vehicle_emu_empty(acdc, _highspeed)
  }
  graphics {
    colour_mapping: any_cc_colour;
     create_effect: es250_create_effect;
           default: es250_sprites;
  }
}
