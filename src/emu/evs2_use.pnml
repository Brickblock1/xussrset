// evs2

switch (FEAT_TRAINS, SELF, evs2_h_gbt_sprites_left_check,
  position_in_consist == 0)
{
  1: evs1_h_gbt_sprites_left;
     evs1_h_gbt_middle_sprites_left;
}

switch (FEAT_TRAINS, SELF, evs2_h_gbt_sprites_right_check,
  position_in_consist_from_end == 1)
{
  1: evs1_h_gbt_sprites_right;
     evs1_h_gbt_middle_sprites_right;
}

switch (FEAT_TRAINS, SELF, evs2_h_gbt_notpowered_sprites_right_check,
[  set_offset_to(2),
   prev_vehicle_type_id() == evs2])
{
  1: evs1_h_gbt_notpowered_sprites_right;
     evs1_h_gbt_middle_notpowered_sprites_right;
}

is_ERD_ds(evs2_m_dt_sprites_right_railcheck,  evs1_m_dt_sprites_right,  evs1_m_dt_notpowered_normal_sprites_right)
is_ERA_ds(evs2_m_ttr_sprites_right_railcheck, evs1_m_ttr_sprites_right, evs1_m_ttr_notpowered_normal_sprites_right)
is_ERD_ds(evs2_m_dt_sprites_left_railcheck,   evs1_m_dt_sprites_left,   evs1_m_dt_notpowered_normal_sprites_left)

switch (FEAT_TRAINS, SELF, evs2_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   ((LOAD_TEMP(4) != evs2) * 200) +
   (prev_vehicle_randombits() & 0x01) * 100 +
   position_in_articulated_veh])
{
   0: evs2_h_gbt_sprites_left_check;
   2: evs2_m_dt_sprites_left_railcheck;
   4: evs1_m_ttr_notpowered_normal_sprites_left;
   6: evs1_c_tt_sprites_left;
   8: evs1_c_ta_sprites_left;
  10: evs1_c_tab_sprites_right;
  12: evs1_c_tt_sprites_right;
  14: evs2_m_ttr_sprites_right_railcheck;
  16: evs2_m_dt_sprites_right_railcheck;
  18: evs2_h_gbt_sprites_right_check;

 100: evs2_h_gbt_sprites_left_check;
 102: evs2_m_dt_sprites_left_railcheck;
 104: evs1_m_ttr_notpowered_normal_sprites_left;
 106: evs1_c_tt_sprites_left;
 108: evs1_c_tab_sprites_left;
 110: evs1_c_ta_sprites_right;
 112: evs1_c_tt_sprites_right;
 114: evs2_m_ttr_sprites_right_railcheck;
 116: evs2_m_dt_sprites_right_railcheck;
 118: evs2_h_gbt_sprites_right_check;

 200: evs2_h_gbt_sprites_left_check;
 202: evs1_m_dt_notpowered_sprites_left;
 204: evs1_m_ttr_notpowered_sprites_left;
 206: evs1_c_tt_notpowered_sprites_left;
 208: evs1_c_ta_notpowered_sprites_left;
 210: evs1_c_tab_sprites_right;
 212: evs1_c_tt_notpowered_sprites_right;
 214: evs1_m_ttr_notpowered_sprites_right;
 216: evs1_m_dt_notpowered_sprites_right;
 218: evs2_h_gbt_notpowered_sprites_right_check;

 300: evs2_h_gbt_sprites_left_check;
 302: evs1_m_dt_notpowered_sprites_left;
 304: evs1_m_ttr_notpowered_sprites_left;
 306: evs1_c_tt_notpowered_sprites_left;
 308: evs1_c_tab_sprites_left;
 310: evs1_c_ta_notpowered_sprites_right;
 312: evs1_c_tt_notpowered_sprites_right;
 314: evs1_m_ttr_notpowered_sprites_right;
 316: evs1_m_dt_notpowered_sprites_right;
 318: evs2_h_gbt_notpowered_sprites_right_check;

      align_14_sprites;
}

long_vehicle(evs2)

switch (FEAT_TRAINS, SELF, evs2_articulated_part,
  extra_callback_info1)
{
  1: return dummy7;
  2: return evs2_part2;
  3: return dummy6;
  4: return evs2_part3;
  5: return dummy6;
  6: return evs2_part3;
  7: return dummy6;
  8: return evs2_part3;
  9: return dummy6;
 10: return evs2_part3;
 11: return dummy6;
 12: return evs2_part3;
 13: return dummy6;
 14: return evs2_part3;
 15: return dummy6;
 16: return evs2_part3;
 17: return dummy6;
 18: return evs2_part3;
 19: return dummy7;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, evs2_create_effect7,
  electric_create_effect(7)) { return 1; }

switch (FEAT_TRAINS, SELF, evs2_create_effect3,
  electric_create_effect(-3)) { return 1; }

is_ERD_ds(evs2_create_effect16, evs2_create_effect3, return disable_create_effect())
is_ERA_ds(evs2_create_effect14, evs2_create_effect3, return disable_create_effect())
is_ERD_ds(evs2_create_effect2,  evs2_create_effect7, return disable_create_effect())

switch (FEAT_TRAINS, SELF, evs2_create_effect0,
  position_in_articulated_veh)
{
   2: evs2_create_effect2;
  14: evs2_create_effect14;
  16: evs2_create_effect16;
      return disable_create_effect();
}

switch (FEAT_TRAINS, PARENT, evs2_create_effect, vehicle_type_id == evs2)
{
  1: evs2_create_effect0;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, evs2_can_attach_wagon3,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, SELF, evs2_can_attach_wagon2,
  (LOAD_TEMP(1) >= 2014) +
  ((build_year >= 2014) * 100))
{
   0: return string(STR_CAN_ATTACH_NO_MORE);
   1: return string(STR_CAN_ATTACH_WRONG_YEAR,"...-2013","2014-...");
 100: return string(STR_CAN_ATTACH_WRONG_YEAR,"...-2013","2014-...");
 101: evs2_can_attach_wagon3;
      return string(STR_CAN_ATTACH_WRONG_YEAR,"2000","2000");
}

switch (FEAT_TRAINS, PARENT, evs2_can_attach_wagon1,
[  STORE_TEMP(build_year, 1),
   STORE_TEMP(count_veh_id(evs2), 0) ])
{
  evs2_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, evs2_can_attach_wagon,
  vehicle_type_id == evs2)
{
  1: evs2_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

  livery_template_none(evs2_b2014)

  livery_template0(evs2_a2014_alt)
  livery_template_alt(evs2_a2014, WITH_INCREASED_SPEED)
livery_template_build_year(evs2, 2014)

engine_speed(evs2_250, 250)
engine_speed(evs2_300, 300)
switch (FEAT_TRAINS, SELF, evs2_speed,
  cargo_subtype == 1)
{ 1: evs2_300_speed;
     evs2_250_speed; }
engine_refit_cost_for_e2_livery_change(evs2, 1, 105, 105)
engine_capacity_MU_change_build_after(evs2, 460,
                                            433, 2014, evs2)
engine_capacity_MU_change_build_after(evs2_part2, 104,
                                                   75, 2014, evs2)
engine_CAP_change_build_after(evs2_part2, 200,
                                          300, 2014)
engine_power_MU(evs2, 10876, evs2)

RC_head_check_new(evs2, evs2)
switch (FEAT_TRAINS, SELF, evs2_v1_running_cost_factor,
[  STORE_TEMP(3206, 0),  // Моторы
   STORE_TEMP(450, 1),   // Бригада
   STORE_TEMP(1125, 2),  // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(787, 4),   // ТО
   STORE_TEMP(56, 5),    // Сертификация

   STORE_TEMP(250, 6),               // Скорость
   STORE_TEMP(597, 7),               // Тара
   STORE_TEMP(597, 8)])              // Максимальная масса
{ evs2_check_running_cost_factor; }  // 2966+2658
switch (FEAT_TRAINS, SELF, evs2_v2_running_cost_factor,
[  STORE_TEMP(3302, 0),  // Моторы
   STORE_TEMP(463, 1),   // Бригада
   STORE_TEMP(1159, 2),  // Износ
   STORE_TEMP(0, 3),     // Сопровождение
   STORE_TEMP(811, 4),   // ТО
   STORE_TEMP(58, 5),    // Сертификация

   STORE_TEMP(300, 6),                                     // Скорость
   STORE_TEMP(597, 7),                                     // Тара
   STORE_TEMP(673, 8)])                      /* 597+76 */  // Максимальная масса
{ evs2_check_running_cost_factor; }                        // 3055+2738

switch (FEAT_TRAINS, PARENT, evs2_running_cost_factor,
  cargo_subtype == 1)
{
  0: evs2_v1_running_cost_factor;
     evs2_v2_running_cost_factor;
}

hint_MU_with_subtype_noto(evs2_b2014,
     calc_loading(max(460 / (7 * WAGON_DOOR), 104 / (2 * WAGON_DOOR))),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_ACDC_WITH_SUBTYPE, STR_PURCHASE_HINT_VELARO,
     STR_SECTIONS_MU_S1of10,
     2009,
     string(STR_PURCHASE_HINT_FACTORY_SIEMENS))
hint_MU_with_subtype_noto_comment(evs2_a2014,
     calc_loading(max(433 / (7 * WAGON_DOOR), 75 / (2 * WAGON_DOOR))),
     STR_PURCHASE_HINT_AGING_PERIOD_3_2,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_ACDC_WITH_SUBTYPE, STR_PURCHASE_HINT_VELARO,
     STR_SECTIONS_MU_S1_2of10,
     2009,
     string(STR_PURCHASE_HINT_FACTORY_SIEMENS),
     string(STR_PURCHASE_HINT_LIST2_COMMENT,
            string(STR_PURCHASE_HINT_EDITION_NEW_SPEED, 300),
            string(STR_PURCHASE_HINT_ATTACH_YEAR,"...-2013","2014-...")))
hint_change_after(evs2, 2014)

item (FEAT_TRAINS, evs2, 401) {
  property {
    name: string(STR_NAME_EVS2);
    vehicle_dates(2009, 2050, 30, 10, 8, 1748)
    vehicle_emu(acdc, 10876, 596.2, 328.0, 460, 7 * WAGON_DOOR)
  }
  graphics {
                default: evs2_sprites;
               purchase: evs2_purchase_sprites;
       cargo_age_period: return 110;
    running_cost_factor: evs2_running_cost_factor;
       articulated_part: evs2_articulated_part;
       can_attach_wagon: evs2_can_attach_wagon;
        additional_text: evs2_additional_text;
     cargo_subtype_text: evs2_cargo_subtype_text;
                  power: evs2_power;
                  speed: evs2_speed;
         cargo_capacity: evs2_cargo_capacity;
            cost_factor: return 1748;
         colour_mapping: any_cc_colour;
             refit_cost: evs2_refit_cost;
          create_effect: evs2_create_effect;
         purchase_speed: return 250;
  }
}

long_name_template(evs2, STR_LONGNAME_EVS2)
allow_acdcemu(evs2)

item (FEAT_TRAINS, evs2_part2, 449) {
  property {
    vehicle_no_dates(2009, 2050, 30, 10, 8, 0)
    vehicle_emu_c(acdc, 0, 104, 2 * WAGON_DOOR)
    vehicle_allow_tourists()
    default_cargo_type: TOUR;
  }
  graphics {
             default: evs2_sprites;
    cargo_age_period: evs2_part2_cargo_age_period;
       create_effect: evs2_create_effect;
      cargo_capacity: evs2_part2_cargo_capacity;
          refit_cost: return 0 | CB_RESULT_AUTOREFIT;
  }
}

item (FEAT_TRAINS, evs2_part3, 450) {
  property {
    vehicle_no_dates(2009, 2050, 30, 10, 8, 0)
    vehicle_emu_empty(acdc)
  }
  graphics {
          default: evs2_sprites;
    create_effect: evs2_create_effect;
  }
}
