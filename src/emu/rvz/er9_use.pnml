// er9 uses er9p

#define PROP_er9_h_num  2
#define PROP_er9_n_num  0
#define PROP_er9_m_num  5
#define PROP_er9_c_num  3

#define PROP_er9_h_CF  9
#define PROP_er9_h_RC  66
#define PROP_er9_h_SD  130
#define PROP_er9_h_WT  39
#define PROP_er9_h_TE  0
#define PROP_er9_h_PR  0
#define PROP_er9_h_CC  88

#define PROP_er9_n_CF  0
#define PROP_er9_n_RC  0
#define PROP_er9_n_SD  130
#define PROP_er9_n_WT  0
#define PROP_er9_n_TE  0
#define PROP_er9_n_PR  0
#define PROP_er9_n_CC  0

#define PROP_er9_m_CF  15
#define PROP_er9_m_RC  100
#define PROP_er9_m_SD  130
#define PROP_er9_m_WT  59
#define PROP_er9_m_TE  93.4
#define PROP_er9_m_PR  826
#define PROP_er9_m_CC  110

#define PROP_er9_c_CF  6
#define PROP_er9_c_RC  41
#define PROP_er9_c_SD  130
#define PROP_er9_c_WT  37
#define PROP_er9_c_TE  0
#define PROP_er9_c_PR  0
#define PROP_er9_c_CC  108

#define IMAGEFILE  "src/emu/rvz/er9_m.png"
purchase_sprites(er9_m, 0, 0)
EMU_motor1_sprites(12, er9_m_v1_mu, 32, 40)
EMU_motor1_sprites(12, er9_m_v2_mu, 32, 308)
EMU_motor1_sprites(12, er9_m_v3_mu, 32, 576)
EMU_motor1_sprites(12, er9_m_v4_mu, 32, 844)
#undef IMAGEFILE
map_sprites(er9_purchase_sprites, er9p_h_purchase_sprites)

MU_head_direction_template_reuse(er9_h_v1, er9p_h_v1, er9_h)
MU_head_direction_template_reuse(er9_h_v2, er9p_h_v2, er9_h)
MU_head_direction_template_reuse(er9_h_v1u, er9p_h_v1u, er9_h)
MU_head_direction_template_reuse(er9_h_v2u, er9p_h_v2u, er9_h)
MU_head_direction_template_reuse(er9_h_v3u, er9p_h_v3u, er9_h)
MU_head_direction_template_reuse(er9_h_v4u, er9p_h_v4u, er9_h)

switch (FEAT_TRAINS, SELF, er9_h_sprites_left_gr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: er9_h_v1_sprites_left;
     er9_h_v1u_sprites_left;
}

switch (FEAT_TRAINS, SELF, er9_h_sprites_left_dgr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: er9_h_v2_sprites_left;
     er9_h_v2u_sprites_left;
}

switch (FEAT_TRAINS, SELF, er9_h_sprites_left,
  cargo_subtype)
{
                     0: er9_h_sprites_left_gr;
            LV_RAL6002: er9_h_sprites_left_gr;
            LV_RAL6020: er9_h_sprites_left_dgr;
     LV_GORKOV_RAILWAY: er9_h_v3u_sprites_left;
  LV_UKRAINIAN_RAILWAY: er9_h_v4u_sprites_left;
  align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9_h_sprites_right_gr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: er9_h_v1_sprites_right;
     er9_h_v1u_sprites_right;
}

switch (FEAT_TRAINS, SELF, er9_h_sprites_right_dgr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: er9_h_v2_sprites_right;
     er9_h_v2u_sprites_right;
}

switch (FEAT_TRAINS, SELF, er9_h_sprites_right,
  cargo_subtype)
{
                     0: er9_h_sprites_right_gr;
            LV_RAL6002: er9_h_sprites_right_gr;
            LV_RAL6020: er9_h_sprites_right_dgr;
     LV_GORKOV_RAILWAY: er9_h_v3u_sprites_right;
  LV_UKRAINIAN_RAILWAY: er9_h_v4u_sprites_right;
  align_12_sprites;
}

engine_direction_template3m2(er9_h, er9_m, er9_c, )
MU_attach_wagon_icon_template_only(er9_h, er9_h, type_head, type_car_motor_pant_add_mandatory)
long_vehicle_sp(er9_h)

EMU_motor_direction_template(er9_m_v1, er9_h)
EMU_motor_direction_template(er9_m_v2, er9_h)
EMU_motor_direction_template(er9_m_v3, er9_h)
EMU_motor_direction_template(er9_m_v4, er9_h)

switch (FEAT_TRAINS, SELF, er9_m_direction_left,
  cargo_subtype)
{
                     0: er9_m_v1_direction_left;
            LV_RAL6002: er9_m_v1_direction_left;
            LV_RAL6020: er9_m_v2_direction_left;
     LV_GORKOV_RAILWAY: er9_m_v3_direction_left;
  LV_UKRAINIAN_RAILWAY: er9_m_v4_direction_left;
  align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9_m_direction_right,
  cargo_subtype)
{
                     0: er9_m_v1_direction_right;
            LV_RAL6002: er9_m_v1_direction_right;
            LV_RAL6020: er9_m_v2_direction_right;
     LV_GORKOV_RAILWAY: er9_m_v3_direction_right;
  LV_UKRAINIAN_RAILWAY: er9_m_v4_direction_right;
  align_12_sprites;
}

EMU_4_12_m_template(er9)
EMU_direction_calculation_template(er9, _m)
EMU_4681012_attach_wagon_icon_template(er9_m)
EMU_attach_calculation_template(er9, _m_next)
MU_attach_wagon_icon_template(er9_m, er9_h, type_car_motor_pant)
long_vehicle_sp(er9_m)

MU_car_direction_template_reuse(er9_c_v1, er9p_c_v1, er9_h)
MU_car_direction_template_reuse(er9_c_v2, er9p_c_v2, er9_h)
MU_car_direction_template_reuse(er9_c_v3, er9p_c_v3, er9_h)
MU_car_direction_template_reuse(er9_c_v4, er9p_c_v4, er9_h)

switch (FEAT_TRAINS, SELF, er9_c_direction_left,
  cargo_subtype)
{
                     0: er9_c_v1_direction_left;
            LV_RAL6002: er9_c_v1_direction_left;
            LV_RAL6020: er9_c_v2_direction_left;
     LV_GORKOV_RAILWAY: er9_c_v3_direction_left;
  LV_UKRAINIAN_RAILWAY: er9_c_v4_direction_left;
  align_12_sprites;
}

switch (FEAT_TRAINS, SELF, er9_c_direction_right,
  cargo_subtype)
{
                     0: er9_c_v1_direction_right;
            LV_RAL6002: er9_c_v1_direction_right;
            LV_RAL6020: er9_c_v2_direction_right;
     LV_GORKOV_RAILWAY: er9_c_v3_direction_right;
  LV_UKRAINIAN_RAILWAY: er9_c_v4_direction_right;
  align_12_sprites;
}

EMU_4_12_c_template(er9)
EMU_direction_calculation_template(er9, _c)
EMU_4681012_attach_wagon_icon_template(er9_c)
EMU_attach_calculation_template(er9, _c_next)
MU_attach_wagon_icon_template(er9_c, er9_h, type_car)
long_vehicle_sp(er9_c)

EMU_4681012_can_attach_wagon_template(er9)
EMU_attach_calculation_template(er9, )

switch (FEAT_TRAINS, SELF, er9_can_attach_wagon1,
  vehicle_type_id)
{
  er9_h: er9_can_attach_wagon_template;
  er9_m: er9_can_attach_wagon_template;
  er9_c: er9_can_attach_wagon_template;
          return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, PARENT, er9_can_attach_wagon,
  count_veh_id(er9_h))
{
  0: return string(STR_CAN_ATTACH_HEAD_ONLY);
  1: er9_can_attach_wagon1;
     return string(STR_CAN_ATTACH_NO_AFTER_REAR_HEAD);
}

switch (FEAT_TRAINS, PARENT, er9_h_start_stop,
  count_veh_id(er9_h))
{
  2: return CB_RESULT_NO_TEXT;
     return string(STR_START_STOP_NUMBER_OF_HEAD_CAR_MUST_BE_EVEN);
}

livery_template_base_list4(er9, LV_RAL6002, LV_RAL6020, LV_GORKOV_RAILWAY, LV_UKRAINIAN_RAILWAY)
EMU_4_12_m_create_effect_template(er9, -1, 5)
EMU_direction_calculation_template(er9, _m_create_effect)
engine_effects_MU(er9_m, _create_effect_direction_template, er9_h)
engine_power_MU(er9_m, PROP_er9_m_PR, er9_h)
engine_capacity_MU(er9_h, PROP_er9_h_CC, er9_h)
engine_capacity_MU(er9_m, PROP_er9_m_CC, er9_h)
engine_capacity_MU(er9_c, PROP_er9_c_CC, er9_h)

RC_head_check(er9_h, er9_h)
switch (FEAT_TRAINS, SELF, er9_h_running_cost_factor,
[  STORE_TEMP(38, 0),  // Моторы
   STORE_TEMP(5, 1),   // Бригада
   STORE_TEMP(13, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(9, 4),   // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_er9_h_SD, 6),                               // Скорость
   STORE_TEMP(round(PROP_er9_h_WT), 7),                        // Тара
   STORE_TEMP(round(PROP_er9_h_WT + PROP_er9_h_CC / 16), 8)])  // Максимальная масса
{ er9_h_check_running_cost_factor; }                           // 66

RC_head_check(er9_m, er9_h)
switch (FEAT_TRAINS, SELF, er9_m_running_cost_factor,
[  STORE_TEMP(62, 0),  // Моторы
   STORE_TEMP(0, 1),   // Бригада
   STORE_TEMP(22, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(15, 4),  // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_er9_m_SD, 6),                               // Скорость
   STORE_TEMP(round(PROP_er9_m_WT), 7),                        // Тара
   STORE_TEMP(round(PROP_er9_m_WT + PROP_er9_m_CC / 16), 8)])  // Максимальная масса
{ er9_m_check_running_cost_factor; }                           // 100

RC_head_check(er9_c, er9_h)
switch (FEAT_TRAINS, SELF, er9_c_running_cost_factor,
[  STORE_TEMP(26, 0),  // Моторы
   STORE_TEMP(0, 1),   // Бригада
   STORE_TEMP(9, 2),   // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(6, 4),   // ТО
   STORE_TEMP(0, 5),   // Сертификация

   STORE_TEMP(PROP_er9_c_SD, 6),                               // Скорость
   STORE_TEMP(round(PROP_er9_c_WT), 7),                        // Тара
   STORE_TEMP(round(PROP_er9_c_WT + PROP_er9_c_CC / 16), 8)])  // Максимальная масса
{ er9_c_check_running_cost_factor; }                           // 41

name_in_group_subgroup(er9_h, string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_NAME_ER9)),
                              string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_LONGNAME_ER9_H)),
                              string(STR_NAME_ER9))
name_in_group_subgroup(er9_m, string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_NAME_ER9)),
                              string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_LONGNAME_ER9_M)),
                              string(STR_NAME_ER9))
name_in_group_subgroup(er9_c, string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_NAME_ER9)),
                              string(STR_NAME_IN_GROUP, string(STR_NAME_ER9_SERIES), string(STR_LONGNAME_ER9_C)),
                              string(STR_NAME_ER9))

hint_MU_with_model2_2fact(er9_h,
     calc_loading(PROP_er9_h_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_H_AC_WITH_SUBTYPE, 62, 103,
     STR_SECTIONS_EMU_4_6_8_10_12,
     1962, 1964,
     fact_rigacw(),
     fact_tver())
hint_MU_with_model2_PTE(er9_m,
     calc_loading(PROP_er9_m_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_MP_AC_WITH_SUBTYPE, 62, 102,
     STR_SECTIONS_EMU_4_6_8_10_12,
     1962, 1964,
     fact_rigacw(),
     string(STR_NAME_ER9), PROP_er9_m_PR, PROP_er9_m_TE)
hint_MU_with_model2_2fact(er9_c,
     calc_loading(PROP_er9_c_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_C_AC_WITH_SUBTYPE, 62, 104,
     STR_SECTIONS_EMU_4_6_8_10_12,
     1962, 1964,
     fact_rigacw(),
     fact_tver())
map_sprites(er9_additional_text, er9_h_additional_text)

item (FEAT_TRAINS, er9_h, 699) {
  property {
    name: string(STR_NAME_ER9);
    vehicle_dates(1962, 1964, 40, 10, 8, PROP_er9_h_CF)
    vehicle_emu_c(ac, PROP_er9_h_WT, PROP_er9_h_CC, 2 * DOUBLE_DOOR, )
    vehicle_group(er9_group)
  }
  graphics {
  purchase_menu(PROP_er9_h_CF, PROP_er9_h_RC, PROP_er9_h_SD, PROP_er9_h_WT, PROP_er9_h_TE, PROP_er9_h_PR, PROP_er9_h_CC)
        additional_text: er9_h_additional_text;
       articulated_part: articulated_part_dummy4;
       can_attach_wagon: er9_can_attach_wagon;
       cargo_age_period: return 60;
         cargo_capacity: er9_h_cargo_capacity;
     cargo_subtype_text: er9_cargo_subtype_text;
         colour_mapping: any_cc_colour;
                default: er9_h_sprites;
                   name: er9_h_name;
                  power: return 0;
               purchase: er9p_h_purchase_sprites;
    running_cost_factor: er9_h_running_cost_factor;
                  speed: speed_after40_130to110;
             start_stop: er9_h_start_stop;
  }
}

item (FEAT_TRAINS, er9_m, 700) {
  property {
    name: string(STR_NAME_ER9);
    vehicle_dates(1962, 1964, 40, 10, 8, 15)
    vehicle_emu_wagon(ac, PROP_er9_m_WT, PROP_er9_m_CC, 2 * DOUBLE_DOOR, )
    vehicle_group_mu(er9_h)
  }
  graphics {
  purchase_menu_wagon(PROP_er9_m_CF, PROP_er9_m_RC, PROP_er9_m_SD, PROP_er9_m_WT, PROP_er9_m_TE, PROP_er9_m_PR, PROP_er9_m_CC)
                additional_text: er9_m_additional_text;
               articulated_part: articulated_part_dummy4;
               can_attach_wagon: er9_can_attach_wagon;
               cargo_age_period: return 60;
                 cargo_capacity: er9_m_cargo_capacity;
             cargo_subtype_text: er9_cargo_subtype_text;
                 colour_mapping: any_cc_colour;
                  create_effect: er9_m_create_effect;
                        default: er9_m_sprites;
                           name: er9_m_name;
                          power: er9_m_power;
                       purchase: er9_m_purchase_sprites;
            running_cost_factor: er9_m_running_cost_factor;
                          speed: speed_after40_130to110;
                     start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
    tractive_effort_coefficient: return get_tec_int(PROP_er9_m_TE, PROP_er9_m_WT);
  }
}

item (FEAT_TRAINS, er9_c, 701) {
  property {
    name: string(STR_NAME_ER9);
    vehicle_dates(1962, 1964, 40, 10, 8, PROP_er9_c_CF)
    vehicle_emu_wagon(ac, PROP_er9_c_WT, PROP_er9_c_CC, 2 * DOUBLE_DOOR, )
    vehicle_group_mu(er9_h)
  }
  graphics {
  purchase_menu_wagon(PROP_er9_c_CF, PROP_er9_c_RC, PROP_er9_c_SD, PROP_er9_c_WT, PROP_er9_c_TE, PROP_er9_c_PR, PROP_er9_c_CC)
        additional_text: er9_c_additional_text;
       articulated_part: articulated_part_dummy4;
       can_attach_wagon: er9_can_attach_wagon;
       cargo_age_period: return 60;
         cargo_capacity: er9_c_cargo_capacity;
     cargo_subtype_text: er9_cargo_subtype_text;
         colour_mapping: any_cc_colour;
                default: er9_c_sprites;
                   name: er9_c_name;
                  power: return 0;
               purchase: er9p_c_purchase_sprites;
    running_cost_factor: er9_c_running_cost_factor;
                  speed: speed_after40_130to110;
             start_stop: return string(STR_START_STOP_HEAD_REQUIRED);
  }
}

long_name_template(er9_h, STR_LONGNAME_ER9_H)
long_name_template(er9_m, STR_LONGNAME_ER9_M)
long_name_template(er9_c, STR_LONGNAME_ER9_C)
allow_acemu(er9_h)
allow_acemu(er9_m)
allow_acemu(er9_c)
