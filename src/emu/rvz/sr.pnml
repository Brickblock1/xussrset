// emu_sr

#define PROP_emu_sr_h_num  0
#define PROP_emu_sr_n_num  0
#define PROP_emu_sr_m_num  1
#define PROP_emu_sr_c_num  0

#define PROP_emu_sr_h_CF  0
#define PROP_emu_sr_h_RC  0
#define PROP_emu_sr_h_SD  85
#define PROP_emu_sr_h_WT  0
#define PROP_emu_sr_h_TE  0
#define PROP_emu_sr_h_PR  0
#define PROP_emu_sr_h_CC  0

#define PROP_emu_sr_n_CF  8 + 7 + 7
#define PROP_emu_sr_n_RC  63 + 53 + 53
#define PROP_emu_sr_n_SD  85
#define PROP_emu_sr_n_WT  139.5
#define PROP_emu_sr_n_TE  96.1
#define PROP_emu_sr_n_PR  702
#define PROP_emu_sr_n_CC  306

#define PROP_emu_sr_m_CF  (PROP_emu_sr_n_CF) / 3
#define PROP_emu_sr_m_RC  (PROP_emu_sr_n_RC) / 3
#define PROP_emu_sr_m_SD   PROP_emu_sr_n_SD
#define PROP_emu_sr_m_WT  (PROP_emu_sr_n_WT) / 3
#define PROP_emu_sr_m_TE  (PROP_emu_sr_n_TE) / 3
#define PROP_emu_sr_m_PR  (PROP_emu_sr_n_PR) / 3
#define PROP_emu_sr_m_CC  (PROP_emu_sr_n_CC) / 3

#define PROP_emu_sr_c_CF  0
#define PROP_emu_sr_c_RC  0
#define PROP_emu_sr_c_SD  85
#define PROP_emu_sr_c_WT  0
#define PROP_emu_sr_c_TE  0
#define PROP_emu_sr_c_PR  0
#define PROP_emu_sr_c_CC  0

#define IMAGEFILE  "src/emu/rvz/sr_h.png"
purchase_sprites(emu_sr, 0, 0)
MU_head_middle_sprites(12, emu_sr_h_v1, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/rvz/sr_h-bag.png"
MU_head_middle_sprites(12, emu_sr_h_v1u, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/rvz/sr_m.png"
EMU_motor2_sprites(12, emu_sr_m_v1, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, emu_sr_h_sprites_left_check,
  (position_in_consist == 0) +
  ((random_bits & 0x01) * 10))
{
    0: emu_sr_h_v1u_notpowered_normal_sprites_left;
    1: emu_sr_h_v1u_sprites_left;
   10: emu_sr_h_v1_notpowered_normal_sprites_left;
   11: emu_sr_h_v1_sprites_left;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sr_b_sprites_start,
[  set_offset_to(-2),
   (no_emu_s_inR4() * 10) +
   (prev_vehicle_randombits() & 0x01) ])
{
    0: emu_sr_m_v1_sprites_left;
    1: emu_sr_m_v1_sprites_right;
   10: emu_sr_m_v1_notpowered_sprites_left;
   11: emu_sr_m_v1_notpowered_sprites_right;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sr_c_sprites_start,
[ set_offset_to(-4),
  (position_in_consist_from_end == 1) +
  ((prev_vehicle_randombits() & 0x01) * 10)])
{
    0: emu_sr_h_v1_notpowered_normal_sprites_right;
    1: emu_sr_h_v1_sprites_right;
   10: emu_sr_h_v1u_notpowered_normal_sprites_right;
   11: emu_sr_h_v1u_sprites_right;
       align_12_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sr_sprites_start,
  position_in_articulated_veh)
{
  0: emu_sr_h_sprites_left_check;
  2: emu_sr_b_sprites_start;
  4: emu_sr_c_sprites_start;
     dummy_sprites;
}

long_vehicle(emu_sr)

switch (FEAT_TRAINS, PARENT, emu_sr_can_attach_wagon1,
  emu_s_count() < 3)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, SELF, emu_sr_can_attach_wagon,
  any_emu_s())
{
  1: emu_sr_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, emu_sr_articulated_part,
  extra_callback_info1)
{
  1: return dummy4;
  2: return emu_sr_part2;
  3: return dummy4;
  4: return emu_sr_part3;
  5: return dummy4;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, emu_sr_create_effect2,
  electric_create_effect(4)) { return 1; }

switch (FEAT_TRAINS, PARENT, emu_sr_create_effect1,
  any_emu_s())
{
  1: emu_sr_create_effect2;
     return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, emu_sr_create_effect,
  position_in_articulated_veh)
{
  2: emu_sr_create_effect1;
     return disable_create_effect();
}

engine_capacity_MU_emu_s(emu_sr, PROP_emu_sr_n_CC)
engine_power_MU_emu_s(emu_sr, PROP_emu_sr_n_PR)

RC_head_check_emu_s(emu_sr)
switch (FEAT_TRAINS, SELF, emu_sr_running_cost_factor,
[  STORE_TEMP(96, 0),  // Моторы
   STORE_TEMP(14, 1),  // Бригада
   STORE_TEMP(34, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(24, 4),  // ТО
   STORE_TEMP(2, 5),   // Сертификация

   STORE_TEMP(PROP_emu_sr_n_SD, 6),                                  // Скорость
   STORE_TEMP(round(PROP_emu_sr_n_WT), 7),                           // Тара
   STORE_TEMP(round(PROP_emu_sr_n_WT + PROP_emu_sr_n_CC / 16), 8)])  // Максимальная масса
{ emu_sr_check_running_cost_factor; }                                // 63+53+53

name_in_group(emu_sr, string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_NAME_SR)),
                      string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_LONGNAME_SR)))

hint_MU_with_subtype(emu_sr,
     calc_loading(PROP_emu_sr_n_CC / (3 * 2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_AGING_PERIOD_1_1,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_S_DDC_WITH_SUBTYPE, STR_PURCHASE_HINT_62_01,
     STR_SECTIONS_MU_S1_3of3,
     1947, 1951,
     fact_rigacw())

item (FEAT_TRAINS, emu_sr, 442) {
  property {
    name: string(STR_NAME_SR);
    vehicle_dates(1947, 1951, 20, 10, 8, PROP_emu_sr_n_CF)
    vehicle_emu(ddc, PROP_emu_sr_n_PR, PROP_emu_sr_n_WT, PROP_emu_sr_n_TE, PROP_emu_sr_n_CC, 3 * 2 * DOUBLE_DOOR, _lowspeed)
    vehicle_group(emu_s_group)
  }
  graphics {
    purchase_menu(PROP_emu_sr_n_CF, PROP_emu_sr_n_RC, PROP_emu_sr_n_SD, PROP_emu_sr_n_WT, PROP_emu_sr_n_TE, PROP_emu_sr_n_PR, PROP_emu_sr_n_CC)
        additional_text: emu_sr_additional_text;
       articulated_part: emu_sr_articulated_part;
       can_attach_wagon: emu_sr_can_attach_wagon;
       cargo_age_period: return 60;
         cargo_capacity: emu_sr_cargo_capacity;
         colour_mapping: any_cc_colour;
          create_effect: emu_sr_create_effect;
                default: emu_sr_sprites;
                   name: emu_sr_name;
                  power: emu_sr_power;
               purchase: emu_sr_purchase_sprites;
    running_cost_factor: emu_sr_running_cost_factor;
                  speed: return PROP_emu_sr_n_SD;
  }
}

long_name_template(emu_sr, STR_LONGNAME_SR)
allow_dcemu(emu_sr)

item (FEAT_TRAINS, emu_sr_part2, 461) {
  property {
    vehicle_no_dates(1947, 1951, 20, 10, 8, 0)
    vehicle_emu_c_mail(ddc, 0, 20, 10, _lowspeed)
  }
  graphics {
    cargo_age_period: return 60;
      colour_mapping: any_cc_colour;
       create_effect: emu_sr_create_effect;
             default: emu_sr_sprites;
  }
}

item (FEAT_TRAINS, emu_sr_part3, 755) {
  property {
    vehicle_no_dates(1947, 1951, 20, 10, 8, 0)
    vehicle_emu_empty(ddc, _lowspeed)
  }
  graphics {
    colour_mapping: any_cc_colour;
     create_effect: emu_sr_create_effect;
           default: emu_sr_sprites;
  }
}
