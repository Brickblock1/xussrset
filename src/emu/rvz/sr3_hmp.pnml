// sr3_hmp

#define PROP_sr3_m_CF  8
#define PROP_sr3_m_RC  63
#define PROP_sr3_m_SD  85
#define PROP_sr3_m_WT  62
#define PROP_sr3_m_TE  96.1
#define PROP_sr3_m_PR  702
#define PROP_sr3_m_CC  105

#define IMAGEFILE  "src/emu/rvz/sr3_hmp.png"
purchase_sprites(sr3_hmp, 0, 0)
MU_head_middle_sp2_sprites(12, sr3_hmp_v1_mu,  32, 40)
MU_head_middle_sp2_sprites(12, sr3_hmp_v1u_mu, 32, 308)
MU_head_middle_sp2_sprites(12, sr3_hmp_v2_mu,  32, 576)
MU_head_middle_sp2_sprites(12, sr3_hmp_v2u_mu, 32, 844)
#undef IMAGEFILE

// Сейчас СР3 ездит пантографом вперёд. А искрит задним
// это, скорее всего, проблемв в выбраном шаблоне

MU_head_middle_sp_direction_template2(sr3_hmp_v1,  sr3_h, sr3_hmp)
MU_head_middle_sp_direction_template2(sr3_hmp_v1u, sr3_h, sr3_hmp)
MU_head_middle_sp_direction_template2(sr3_hmp_v2,  sr3_h, sr3_hmp)
MU_head_middle_sp_direction_template2(sr3_hmp_v2u, sr3_h, sr3_hmp)

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_left_gr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: sr3_hmp_v1_sprites_left;
     sr3_hmp_v1u_sprites_left;
}

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_left_gr2,
  check_year(GREAT_CHANGE_YEAR))
{
  0: sr3_hmp_v2_sprites_left;
     sr3_hmp_v2u_sprites_left;
}

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_left,
  cargo_subtype)
{
           0: sr3_hmp_sprites_left_gr;
           1: sr3_hmp_sprites_left_gr2;
  LV_RAL6002: sr3_hmp_sprites_left_gr;
  align_12_sprites;
}

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_right_gr,
  check_year(GREAT_CHANGE_YEAR))
{
  0: sr3_hmp_v1_sprites_right;
     sr3_hmp_v1u_sprites_right;
}

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_right_gr2,
  check_year(GREAT_CHANGE_YEAR))
{
  0: sr3_hmp_v2_sprites_right;
     sr3_hmp_v2u_sprites_right;
}

switch (FEAT_TRAINS, SELF, sr3_hmp_sprites_right,
  cargo_subtype)
{
           0: sr3_hmp_sprites_right_gr;
           1: sr3_hmp_sprites_right_gr2;
  LV_RAL6002: sr3_hmp_sprites_right_gr;
  align_12_sprites;
}

// ЕСЛИ первый или последний, то кабиной наружу, а если нет, то как угодно
engine_direction_template3m2(sr3_hmp, sr3_c2, sr3_c3, )
map_sprites(sr3_hmp_direction_template, sr3_hmp_sprites_start)

switch (FEAT_TRAINS, SELF, sr3_hmp_next_can_attach_wagon_template2,
[ set_offset_to(-2),
  prev_vehicle_type_id() ])
{
  sr3_hmp: type_head_motor_pant_head_car_add_optional;
    sr3_h: type_head_motor_pant_head_car_add_optional;
   sr3_c2: type_head_motor_pant_head_add_optional;
   sr3_c3: type_head_motor_pant_head_add_optional;
           dummy_sprites_big;
}

switch (FEAT_TRAINS, PARENT, sr3_hmp_next_can_attach_wagon_template,
  count_veh_id(sr3_hmp))
{ 1: type_head_motor_pant_head_car_add_optional;
  2: sr3_hmp_next_can_attach_wagon_template2;
     type_head_add_optional; }

MU_attach_wagon_icon_template2(sr3_hmp, sr3_h, sr3_hmp, type_head_motor_pant)
long_vehicle_sp(sr3_hmp)

// пантографы симметричны, искрит второй
engine_electric1_1_effect(sr3_hmp_create_effect_sprites, 5)
engine_effects_MU2(sr3_hmp, _create_effect_sprites_left, sr3_h, sr3_hmp)

engine_power_MU2(sr3_hmp, PROP_sr3_m_PR, sr3_hmp, sr3_h)
engine_capacity_MU2(sr3_hmp, PROP_sr3_m_CC, sr3_hmp, sr3_h)

RC_head_check2(sr3_hmp, sr3_h, sr3_hmp)
switch (FEAT_TRAINS, SELF, sr3_hmp_running_cost_factor,
[  STORE_TEMP(36, 0),  // Моторы
   STORE_TEMP(5, 1),   // Бригада
   STORE_TEMP(12, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(9, 4),   // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_sr3_m_SD, 6),                               // Скорость
   STORE_TEMP(round(PROP_sr3_m_WT), 7),                        // Тара
   STORE_TEMP(round(PROP_sr3_m_WT + PROP_sr3_m_CC / 16), 8)])  // Максимальная масса
{ sr3_hmp_check_running_cost_factor; }                         // 63

name_in_group_subgroup(sr3_hmp, string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_NAME_SR3_HMP)),
                                string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_LONGNAME_SR3_HMP)),
                                string(STR_NAME_SR3))

hint_MU(sr3_hmp,
     calc_loading(PROP_sr3_m_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HMP_DC,
     STR_SECTIONS_EMU_SR3,
     1952, 1955,
     fact_rigacw())

item (FEAT_TRAINS, sr3_hmp, 460) {
  property {
    name: string(STR_NAME_SR3_HMP);
    vehicle_dates(1952, 1955, 30, 10, 8, PROP_sr3_m_CF)
    vehicle_emu(dc, PROP_sr3_m_PR, PROP_sr3_m_WT, PROP_sr3_m_TE, PROP_sr3_m_CC, 2 * DOUBLE_DOOR, _lowspeed)
    vehicle_group_mu(sr3_h)
  }
  graphics {
    purchase_menu(PROP_sr3_m_CF, PROP_sr3_m_RC, PROP_sr3_m_SD, PROP_sr3_m_WT, PROP_sr3_m_TE, PROP_sr3_m_PR, PROP_sr3_m_CC)
        additional_text: sr3_hmp_additional_text;
       articulated_part: articulated_part_dummy4;
       can_attach_wagon: sr3_can_attach_wagon;
       cargo_age_period: return CAP_00033_VERY_FAST;
         cargo_capacity: sr3_hmp_cargo_capacity;
     cargo_subtype_text: sr3_cargo_subtype_text;
         colour_mapping: any_cc_colour;
          create_effect: sr3_hmp_create_effect;
                default: sr3_hmp_sprites;
                   name: sr3_hmp_name;
                  power: sr3_hmp_power;
               purchase: sr3_hmp_purchase_sprites;
    running_cost_factor: sr3_hmp_running_cost_factor;
                  speed: return PROP_sr3_m_SD;
             start_stop: sr3_start_stop;
  }
}

long_name_template(sr3_hmp, STR_LONGNAME_SR3_HMP)
allow_dcemu(sr3_hmp)
