// emu_sd_hb

// TODO сделать багажное отделение

#define PROP_emu_sd_n_CF  6
#define PROP_emu_sd_n_RC  46
#define PROP_emu_sd_n_SD  85
#define PROP_emu_sd_n_WT  38
#define PROP_emu_sd_n_TE  0
#define PROP_emu_sd_n_PR  0
#define PROP_emu_sd_n_CC  92

#define PROP_emu_sm_n_CF  6
#define PROP_emu_sm_n_RC  46
#define PROP_emu_sm_n_SD  85
#define PROP_emu_sm_n_WT  38
#define PROP_emu_sm_n_TE  0
#define PROP_emu_sm_n_PR  0
#define PROP_emu_sm_n_CC  92

#define IMAGEFILE  "src/emu/sd_hb.png"
purchase_sprites(emu_sd_hb, 0, 0)
MU_head_middle_sprites(12, emu_sd_hb_v1_mu, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/emu/sm_hb.png"
MU_head_middle_sprites(12, emu_sm_hb_v1_mu, 32, 40)
#undef IMAGEFILE

MU_head_direction_template12(emu_sd_hb_v1, sr_type1947_h, sr_type1947_hb, sr_type1947_hmp,
                                           sr_type1951_h, sr_type1951_hb, sr_type1951_hmp,
                                           emu_sv_h, emu_sv_hb, emu_sv_hmp,
                                           emu_sd_h, emu_sd_hb, emu_sd_hmp)
MU_head_direction_template12(emu_sm_hb_v1, sr_type1947_h, sr_type1947_hb, sr_type1947_hmp,
                                           sr_type1951_h, sr_type1951_hb, sr_type1951_hmp,
                                           emu_sv_h, emu_sv_hb, emu_sv_hmp,
                                           emu_sd_h, emu_sd_hb, emu_sd_hmp)
switch (FEAT_TRAINS, SELF, emu_sd_hb_sprites_left,
  cargo_subtype)
{
     0: emu_sd_hb_v1_sprites_left;
  0xE0: emu_sm_hb_v1_sprites_left;
  0xE1: emu_sm_hb_v1_sprites_left;
  align_12_sprites;
}

switch (FEAT_TRAINS, SELF, emu_sd_hb_sprites_right,
  cargo_subtype)
{
     0: emu_sd_hb_v1_sprites_right;
  0xE0: emu_sm_hb_v1_sprites_right;
  0xE1: emu_sm_hb_v1_sprites_right;
  align_12_sprites;
}
engine_direction_template12m4(emu_sd_hb, sr_type1947_h, sr_type1951_h, emu_sv_h, emu_sd_h,
                                         sr_type1947_hb, sr_type1951_hb, emu_sv_hb, emu_sd_hb,
                                         sr_type1947_hmp, sr_type1951_hmp, emu_sv_hmp, emu_sd_hmp)
map_sprites(emu_sd_hb_direction_template, emu_sd_hb_sprites_start)

switch (FEAT_TRAINS, PARENT, emu_sd_hb_next_can_attach_wagon_template,
  emu_s_count())
{
     0: type_head_motor_pant_add_mandatory;
  1..2: sr_type1947_h_prev1;
        dummy_sprites; }

MU_attach_wagon_icon_template12(emu_sd_hb,
                                sr_type1947_h, sr_type1947_hb, sr_type1947_hmp,
                                sr_type1951_h, sr_type1951_hb, sr_type1951_hmp,
                                emu_sv_h, emu_sv_hb, emu_sv_hmp,
                                emu_sd_h, emu_sd_hb, emu_sd_hmp, type_head)
long_vehicle_sp(emu_sd_hb)

    engine_refit_cost_for_a2_livery_change(emu_sd_hb_3, 0xE0, 0, 0)
  engine_refit_cost_for_range_livery_change(emu_sd_hb_2, 0xE0, 0xE0, 0, emu_sd_hb_3_refit_cost)
engine_refit_cost_for_range_livery_change(emu_sd_hb, 0xE1, 0xE1, 0, emu_sd_hb_2_refit_cost)

engine_capacity_MU_emu_s(emu_sd_hb, PROP_emu_sd_n_CC)
RC_head_check_emu_s(emu_sd_hb)
switch (FEAT_TRAINS, SELF, emu_sd_hb_running_cost_factor,
[  STORE_TEMP(26, 0),  // Моторы
   STORE_TEMP(4, 1),   // Бригада
   STORE_TEMP(9, 2),   // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(6, 4),   // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_emu_sd_n_SD, 6),                                                       // Скорость
   STORE_TEMP(round(PROP_emu_sd_n_WT), 7),                                                // Тара
   STORE_TEMP(round(PROP_emu_sd_n_WT + PROP_emu_sd_n_CC / 16 + PROP_emu_s_mail_LC), 8)])  // Максимальная масса
{ emu_sd_hb_check_running_cost_factor; }

name_in_group_subgroup(emu_sd_hb, string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_NAME_SD_HB)),
                                  string(STR_NAME_IN_GROUP, string(STR_NAME_EMU_S_SERIES), string(STR_LONGNAME_SD_HB)),
                                  string(STR_NAME_SD))

hint_MU_with_sme2_2fact(emu_sd_hb_b1946,
     calc_loading(PROP_emu_sd_n_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HB_15DC,
     STR_SECTIONS_EMU_S, STR_NAME_SV, STR_NAME_SD,
     1932, 1941,
     fact_mytishchi(),
     string(STR_PURCHASE_HINT_FACTORY_DINAMO))
hint_MU_with_sme3_2fact(emu_sd_hb_a1946,
     calc_loading(PROP_emu_sd_n_CC / (2 * DOUBLE_DOOR)),
     STR_PURCHASE_HINT_CAP_00033_VERY_FAST,
     STR_PURCHASE_HINT_ENGINE_TYPE_EMU_HB_15DC,
     STR_SECTIONS_EMU_S, STR_NAME_SV, STR_NAME_SD, STR_NAME_SR,
     1932, 1941,
     fact_mytishchi(),
     string(STR_PURCHASE_HINT_FACTORY_DINAMO))
hint_change_after(emu_sd_hb, 1946)

item (FEAT_TRAINS, emu_sd_hb, 753) {
  property {
    name: string(STR_NAME_SD_HB);
    vehicle_dates(1932, 1941, 20, 10, 8, PROP_emu_sd_n_CF)
    vehicle_emu_c(ddc, PROP_emu_sd_n_WT, PROP_emu_sd_n_CC, 2 * DOUBLE_DOOR, _lowspeed)
    vehicle_group(emu_sd_h)
  }
  graphics {
    purchase_menu(PROP_emu_sd_n_CF, PROP_emu_sd_n_RC, PROP_emu_sd_n_SD, PROP_emu_sd_n_WT, PROP_emu_sd_n_TE, PROP_emu_sd_n_PR, PROP_emu_sd_n_CC)
        additional_text: emu_sd_hb_additional_text;
       articulated_part: emu_s_mail_articulated_part4;
       can_attach_wagon: emu_s_can_attach_wagon;
       cargo_age_period: return CAP_00033_VERY_FAST;
         cargo_capacity: emu_sd_hb_cargo_capacity;
     cargo_subtype_text: emu_sd_cargo_subtype_text;
         colour_mapping: any_cc_colour;
                default: emu_sd_hb_sprites;
                   name: emu_sd_hb_name;
                  power: return PROP_emu_sd_n_PR;
               purchase: emu_sd_hb_purchase_sprites;
             refit_cost: emu_sd_hb_refit_cost;
    running_cost_factor: emu_sd_hb_running_cost_factor;
                  speed: return PROP_emu_sd_n_SD;
             start_stop: emu_s_start_stop;
  }
}

long_name_template(emu_sd_hb, STR_LONGNAME_SD_HB)
allow_dcemu(emu_sd_hb)
