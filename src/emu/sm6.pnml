 // sm6

// Спрайты

#define IMAGEFILE  "src/emu/Sm6.png"

purchase_sprites(sm6, 0, 0)

emu_3r_0_0_sprites(16, sm6_01, 32, 40)
emu_0_2_0_sprites(14, sm6_03,  32, 40)
emu_0_0_2_sprites(14, sm6_02,  32, 40)
emu_2_0_0_sprites(16, sm6_01_middle, 32, 576)
emu_0_4_0_sprites(14, sm6_04,  32, 576)
emu_0_4_0_sprites(14, sm6_05,  32, 1112)
emu_0_4_0_sprites(14, sm6_06,  32, 1648)

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, sm6_01_h_sprites_left_check, 
  position_in_consist == 0)
{
  1: sm6_01_h_sprites_left;
     sm6_01_middle_h_sprites_left;
}

random_switch (FEAT_TRAINS, SELF, sm6_sprites_start, 
  bitmask(TRIGGER_VEHICLE_SERVICE))
{
  1: sm6_01_h_sprites_left_check;
  1: sm6_01_h_sprites_left_check;
}

long_vehicle(sm6)

switch (FEAT_TRAINS, SELF, sm6_05_m_sprites_right_railcheck, current_railtype)
{
  ERD1: sm6_05_m_sprites_right;
  ERD2: sm6_05_m_sprites_right;
  ERD3: sm6_05_m_sprites_right;
        sm6_05_m_notpowered_normal_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_03_m_sprites_right_railcheck, current_railtype)
{
  ERD1: sm6_03_m_notpowered_sprites_right;
  ERD2: sm6_03_m_notpowered_sprites_right;
  ERD3: sm6_03_m_notpowered_sprites_right;
        sm6_03_m_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_06_m_sprites_left_railcheck, current_railtype)
{
  ERD1: sm6_06_m_notpowered_normal_sprites_left;
  ERD2: sm6_06_m_notpowered_normal_sprites_left;
  ERD3: sm6_06_m_notpowered_normal_sprites_left;
        sm6_06_m_sprites_left;
}

switch (FEAT_TRAINS, SELF, sm6_04_m_sprites_left_railcheck, current_railtype)
{
  ERD1: sm6_04_m_sprites_left;
  ERD2: sm6_04_m_sprites_left;
  ERD3: sm6_04_m_sprites_left;
        sm6_04_m_notpowered_normal_sprites_left;
}

switch (FEAT_TRAINS, SELF, sm6_01_h_sprites_right_check, 
  position_in_consist_from_end == 2)  // особый случай. Последняя голова SM6 имеет шаблон 17
{
  1: sm6_01_h_sprites_right;
     sm6_01_middle_h_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_01_h_notpowered_sprites_right_check, 
  position_in_consist_from_end == 2) // особый случай. Последняя голова SM6 имеет шаблон 17
{
  1: sm6_01_h_notpowered_sprites_right;
     sm6_01_middle_h_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_b_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   ((LOAD_TEMP(4) != sm6) * 200) +
   (prev_vehicle_randombits() % 2) * 100 +
   position_in_articulated_veh])
{
   2: sm6_06_m_notpowered_normal_sprites_right;
   4: sm6_05_m_sprites_right_railcheck;
   6: sm6_04_m_notpowered_normal_sprites_right;
   8: sm6_03_m_sprites_right_railcheck;
  10: sm6_02_c_sprites_right;
  12: sm6_01_h_sprites_right_check;

 102: sm6_02_c_sprites_left;
 104: sm6_03_m_notpowered_sprites_left;
 106: sm6_04_m_sprites_left_railcheck;
 108: sm6_05_m_notpowered_normal_sprites_left;
 110: sm6_06_m_sprites_left_railcheck;
 112: sm6_01_h_sprites_right_check;

 202: sm6_06_m_notpowered_sprites_right;
 204: sm6_05_m_notpowered_sprites_right;
 206: sm6_04_m_notpowered_sprites_right;
 208: sm6_03_m_notpowered_sprites_right;
 210: sm6_02_c_notpowered_sprites_right;
 212: sm6_01_h_notpowered_sprites_right_check;

 302: sm6_02_c_notpowered_sprites_left;
 304: sm6_03_m_notpowered_sprites_left;
 306: sm6_04_m_notpowered_sprites_left;
 308: sm6_05_m_notpowered_sprites_left;
 310: sm6_06_m_notpowered_sprites_left;
 312: sm6_01_h_notpowered_sprites_right_check;
      align_14_sprites;
}

long_vehicle_nocount(sm6_b)

switch (FEAT_TRAINS, SELF, sm6_articulated_part,
  extra_callback_info1)
{
  1: return dummy8;
  2: return unitb;
  3: return dummy6;
  4: return unitb;
  5: return dummy6;
  6: return unitb;
  7: return dummy6;
  8: return unitb;
  9: return dummy6;
 10: return unitb;
 11: return dummy6;
 12: return unitb;
 13: return dummy8;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// даём тягу, если локомотив sm6
switch (FEAT_TRAINS, PARENT, sm6_power,
  vehicle_type_id == sm6)
{
  1: return get_power_in_cb(7478); 
     return 0;
}

switch (FEAT_TRAINS, SELF, sm6_04_visual_effect_and_powered,
  current_railtype)
{
  ERD1: return electric_visual_effect_and_powered(7);
  ERD2: return electric_visual_effect_and_powered(7);
  ERD3: return electric_visual_effect_and_powered(7);
        return disable_visual_effect_and_powered();
}

switch (FEAT_TRAINS, SELF, sm6_05_visual_effect_and_powered,
  current_railtype)
{
  ERD1: return electric_visual_effect_and_powered(7);
  ERD2: return electric_visual_effect_and_powered(7);
  ERD3: return electric_visual_effect_and_powered(7);
        return disable_visual_effect_and_powered();
}

switch (FEAT_TRAINS, SELF, sm6_06_visual_effect_and_powered,
  current_railtype)
{
  ERD1: return disable_visual_effect_and_powered();
  ERD2: return disable_visual_effect_and_powered();
  ERD3: return disable_visual_effect_and_powered();
        return electric_visual_effect_and_powered(-3);
}

switch (FEAT_TRAINS, SELF, sm6_03_visual_effect_and_powered,
  current_railtype)
{
  ERD1: return disable_visual_effect_and_powered();
  ERD2: return disable_visual_effect_and_powered();
  ERD3: return disable_visual_effect_and_powered();
        return electric_visual_effect_and_powered(-3);
}

random_switch (FEAT_TRAINS, FORWARD_SELF(8), sm6_03_visual_effect_and_powered_rnd, 0)
{
  1: sm6_03_visual_effect_and_powered;
  1: disable_visual_effect_and_powered();
}
random_switch (FEAT_TRAINS, FORWARD_SELF(4), sm6_05_visual_effect_and_powered_rnd, 0)
{
  1: sm6_05_visual_effect_and_powered;
  1: disable_visual_effect_and_powered();
}

random_switch (FEAT_TRAINS, FORWARD_SELF(6), sm6_04_visual_effect_and_powered_rnd, 0)
{
  1: disable_visual_effect_and_powered();
  1: sm6_04_visual_effect_and_powered;
}

random_switch (FEAT_TRAINS, FORWARD_SELF(10), sm6_06_visual_effect_and_powered_rnd, 0)
{
  1: disable_visual_effect_and_powered();
  1: sm6_06_visual_effect_and_powered;
}

switch (FEAT_TRAINS, SELF, sm6_b_visual_effect_and_powered0,
  position_in_articulated_veh)
{
   4: sm6_05_visual_effect_and_powered_rnd;
   8: sm6_03_visual_effect_and_powered_rnd;

   6: sm6_04_visual_effect_and_powered_rnd;
  10: sm6_06_visual_effect_and_powered_rnd;
      return disable_visual_effect_and_powered();
}

// показываем визуальные эффекты, если локомотив sm6
switch (FEAT_TRAINS, PARENT, sm6_b_visual_effect_and_powered,
  vehicle_type_id == sm6)
{
  1: sm6_b_visual_effect_and_powered0;
     return disable_visual_effect_and_powered();
}

// Допускается эксплуатация с пассажирами только если голова - sm6
switch (FEAT_TRAINS, PARENT, sm6_cargo_capacity,
  (vehicle_type_id == sm6) )
{
  1: return 337;
     return 0;
}

switch (FEAT_TRAINS, SELF, sm6_can_attach_wagon2,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, sm6_can_attach_wagon1,
  STORE_TEMP(count_veh_id(sm6), 0))
{
  sm6_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, sm6_can_attach_wagon,
  vehicle_type_id == sm6)
{
  1: sm6_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

item (FEAT_TRAINS, sm6) 
{
  property
  {
    name: string(STR_SM6_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(2010), 1, 1);
    vehicle_life: 30; 
    model_life: get_model_life(2010,2050);
    retire_early: get_retire_early(2010,2050); 
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 220 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_dual_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 7478 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    loading_speed: (260/8);
    cargo_capacity: 255; 
    weight: 423 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(140.0, 423);
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: sm6_sprites;
    purchase: sm6_purchase_sprites;
    articulated_part: sm6_articulated_part;
    can_attach_wagon: sm6_can_attach_wagon;
    additional_text: return string(STR_SM6_PURCHASE_HINT);
    power: sm6_power;
    cargo_capacity: sm6_cargo_capacity;
    cost_factor: return 1077;
    colour_mapping: return ttdall_cc + 0xC6;
  }
  livery_override(unitb)
  {
    length: return 8;
    visual_effect_and_powered: sm6_b_visual_effect_and_powered;
            sm6_b_sprites;
  }  
}

if (enable_long_names)
{
  item (FEAT_TRAINS, sm6)
  {
    property
    { name: string(STR_SM6_NAME_LONG); }
  }
}

