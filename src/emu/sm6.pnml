 // sm6
// 412 (19Ch)

#define IMAGEFILE  "src/emu/Sm6.png"
purchase_sprites(sm6, 0, 0)

MU_3r_0_0_sprites(16,  sm6_01,        32,   40)
MU_0_2nl_0_sprites(14, sm6_03,        32,   40)
MU_0_0_2_sprites(14,   sm6_02,        32,   40)
MU_2_0_0_sprites(16,   sm6_01_middle, 32,  442)
MU_0_4_0_sprites(14,   sm6_04,        32,  442)
MU_0_4_0_sprites(14,   sm6_05,        32,  978)
MU_0_4_0_sprites(14,   sm6_06,        32, 1514)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, sm6_01_h_sprites_left_check, 
  position_in_consist == 0)
{
  1: sm6_01_h_sprites_left;
     sm6_01_middle_h_sprites_left;
}

random_switch (FEAT_TRAINS, SELF, sm6_01_h_sprites_start, 
  bitmask(TRIGGER_VEHICLE_SERVICE))
{
  1: sm6_01_h_sprites_left_check;
  1: sm6_01_h_sprites_left_check;
}

switch (FEAT_TRAINS, SELF, sm6_05_m_sprites_right_railcheck, current_railtype)
{
  ERD1: sm6_05_m_sprites_right;
  ERD2: sm6_05_m_sprites_right;
  ERD3: sm6_05_m_sprites_right;
        sm6_05_m_notpowered_normal_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_03_m_sprites_right_railcheck, current_railtype)
{
  ERD1: sm6_03_m_notpowered_sprites_right;
  ERD2: sm6_03_m_notpowered_sprites_right;
  ERD3: sm6_03_m_notpowered_sprites_right;
        sm6_03_m_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_06_m_sprites_left_railcheck, current_railtype)
{
  ERD1: sm6_06_m_notpowered_normal_sprites_left;
  ERD2: sm6_06_m_notpowered_normal_sprites_left;
  ERD3: sm6_06_m_notpowered_normal_sprites_left;
        sm6_06_m_sprites_left;
}

switch (FEAT_TRAINS, SELF, sm6_04_m_sprites_left_railcheck, current_railtype)
{
  ERD1: sm6_04_m_sprites_left;
  ERD2: sm6_04_m_sprites_left;
  ERD3: sm6_04_m_sprites_left;
        sm6_04_m_notpowered_normal_sprites_left;
}

switch (FEAT_TRAINS, SELF, sm6_01_h_sprites_right_check, 
  position_in_consist_from_end == 2)  // особый случай. Последняя голова SM6 имеет шаблон 17
{
  1: sm6_01_h_sprites_right;
     sm6_01_middle_h_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_01_h_notpowered_sprites_right_check, 
  position_in_consist_from_end == 2) // особый случай. Последняя голова SM6 имеет шаблон 17
{
  1: sm6_01_h_notpowered_sprites_right;
     sm6_01_middle_h_sprites_right;
}

switch (FEAT_TRAINS, SELF, sm6_never_train, 0)
{
   1: sm6_03_m_sprites_left;    
   2: sm6_04_m_sprites_right;   
   3: sm6_04_m_r_normal_sprites;
   4: sm6_05_m_sprites_left;    
   5: sm6_05_m_normal_sprites;  
   6: sm6_06_m_sprites_right;   
   7: sm6_06_m_r_normal_sprites;
      align_14_sprites;
}

switch (FEAT_TRAINS, SELF, sm6_sprites_start,
[  set_offset_to(-position_in_articulated_veh),
   ((LOAD_TEMP(4) != sm6) * 200) +
   (prev_vehicle_randombits() % 2) * 100 +
   position_in_articulated_veh])
{
   0: sm6_01_h_sprites_start;
   2: sm6_06_m_notpowered_normal_sprites_right;
   4: sm6_05_m_sprites_right_railcheck;
   6: sm6_04_m_notpowered_normal_sprites_right;
   8: sm6_03_m_sprites_right_railcheck;
  10: sm6_02_c_sprites_right;
  12: sm6_01_h_sprites_right_check;

 100: sm6_01_h_sprites_start;
 102: sm6_02_c_sprites_left;
 104: sm6_03_m_notpowered_sprites_left;
 106: sm6_04_m_sprites_left_railcheck;
 108: sm6_05_m_notpowered_normal_sprites_left;
 110: sm6_06_m_sprites_left_railcheck;
 112: sm6_01_h_sprites_right_check;

 200: sm6_01_h_sprites_start;
 202: sm6_06_m_notpowered_sprites_right;
 204: sm6_05_m_notpowered_sprites_right;
 206: sm6_04_m_notpowered_sprites_right;
 208: sm6_03_m_notpowered_sprites_right;
 210: sm6_02_c_notpowered_sprites_right;
 212: sm6_01_h_notpowered_sprites_right_check;

 300: sm6_01_h_sprites_start;
 302: sm6_02_c_notpowered_sprites_left;
 304: sm6_03_m_notpowered_sprites_left;
 306: sm6_04_m_notpowered_sprites_left;
 308: sm6_05_m_notpowered_sprites_left;
 310: sm6_06_m_notpowered_sprites_left;
 312: sm6_01_h_notpowered_sprites_right_check;

 777: sm6_never_train;

      align_14_sprites;
}

long_vehicle_RND(sm6, sm6_01_h_sprites_start)

switch (FEAT_TRAINS, SELF, sm6_articulated_part,
  extra_callback_info1)
{
  1: return dummy8;
  2: return sm6_part2;
  3: return dummy6;
  4: return sm6_part3;
  5: return dummy6;
  6: return sm6_part3;
  7: return dummy6;
  8: return sm6_part3;
  9: return dummy6;
 10: return sm6_part3;
 11: return dummy6;
 12: return sm6_part3;
 13: return dummy8;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// даём тягу, если локомотив sm6
switch (FEAT_TRAINS, PARENT, sm6_power,
  vehicle_type_id == sm6)
{
  1: return get_power_in_cb(7478); 
     return 0;
}

switch (FEAT_TRAINS, SELF, sm6_create_effect7, 
  electric_create_effect(7)) 
{ 
  return 1; 
}    

switch (FEAT_TRAINS, SELF, sm6_create_effect3, 
  electric_create_effect(-3)) 
{ 
  return 1; 
}    

switch (FEAT_TRAINS, SELF, sm6_04_create_effect,
  current_railtype)
{
  ERD1: sm6_create_effect7;
  ERD2: sm6_create_effect7;
  ERD3: sm6_create_effect7;
        return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, sm6_05_create_effect,
  current_railtype)
{
  ERD1: sm6_create_effect7;
  ERD2: sm6_create_effect7;
  ERD3: sm6_create_effect7;
        return disable_create_effect();
}

switch (FEAT_TRAINS, SELF, sm6_06_create_effect,
  current_railtype)
{
  ERD1: return disable_create_effect();
  ERD2: return disable_create_effect();
  ERD3: return disable_create_effect();
        sm6_create_effect3;
}

switch (FEAT_TRAINS, SELF, sm6_03_create_effect,
  current_railtype)
{
  ERD1: return disable_create_effect();
  ERD2: return disable_create_effect();
  ERD3: return disable_create_effect();
        sm6_create_effect3;
}

random_switch (FEAT_TRAINS, FORWARD_SELF(8), sm6_03_create_effect_rnd, 0)
{
  1: sm6_03_create_effect;
  1: return disable_create_effect();
}
random_switch (FEAT_TRAINS, FORWARD_SELF(4), sm6_05_create_effect_rnd, 0)
{
  1: sm6_05_create_effect;
  1: return disable_create_effect();
}

random_switch (FEAT_TRAINS, FORWARD_SELF(6), sm6_04_create_effect_rnd, 0)
{
  1: return disable_create_effect();
  1: sm6_04_create_effect;
}

random_switch (FEAT_TRAINS, FORWARD_SELF(10), sm6_06_create_effect_rnd, 0)
{
  1: return disable_create_effect();
  1: sm6_06_create_effect;
}

switch (FEAT_TRAINS, SELF, sm6_create_effect0,
  position_in_articulated_veh)
{
   4: sm6_05_create_effect_rnd;
   8: sm6_03_create_effect_rnd;

   6: sm6_04_create_effect_rnd;
  10: sm6_06_create_effect_rnd;
      return disable_create_effect();
}

// показываем визуальные эффекты, если локомотив sm6
switch (FEAT_TRAINS, PARENT, sm6_create_effect,
  vehicle_type_id == sm6)
{
  1: sm6_create_effect0;
     return disable_create_effect();
}

// Допускается эксплуатация с пассажирами только если голова - sm6
switch (FEAT_TRAINS, PARENT, sm6_cargo_capacity,
  vehicle_type_id == sm6)
{
  1: return 341-48;
     return 0;
}

switch (FEAT_TRAINS, SELF, sm6_can_attach_wagon2,
  LOAD_TEMP(0) <= 1)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

switch (FEAT_TRAINS, PARENT, sm6_can_attach_wagon1,
  STORE_TEMP(count_veh_id(sm6), 0))
{
  sm6_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, sm6_can_attach_wagon,
  vehicle_type_id == sm6)
{
  1: sm6_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

emu_running_cost(sm6_v1, 1921, 817)

switch (FEAT_TRAINS, PARENT, sm6_running_cost_factor,
  vehicle_type_id == sm6)
{
  1: sm6_v1_running_cost_factor;
     return RC_MU_AS_CAR * 7;
}

engine_speed(sm6, 220)

item (FEAT_TRAINS, sm6, 412) {
  property {
    name: string(STR_NAME_SM6);
    vehicle_dates(2010, 2050, 30, 10, 8, 255)
    vehicle_acdcemu(7478, 423, 226.0, 341-48, 15*5)
  }
  graphics {
    default: sm6_sprites;
    purchase: sm6_purchase_sprites;
    cargo_age_period: return 174;
    speed: sm6_speed;
    running_cost_factor: sm6_running_cost_factor;
    articulated_part: sm6_articulated_part;
    can_attach_wagon: sm6_can_attach_wagon;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE_MU,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_4TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_2),
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_EMU_T_ACDC_WITH_SUBTYPE, string(STR_PURCHASE_HINT_PENDOLINO)),
                                   string(STR_SECTIONS_MU_S1_2of7),
                                   string(STR_PURCHASE_HINT_FROM, 2010),
                                   string(STR_PURCHASE_HINT_FACTORY_ALSTOM_TRANS));
    power: sm6_power;
    cargo_capacity: sm6_cargo_capacity;
    cost_factor: return 1079;
    colour_mapping: any_cc_colour;
    create_effect: sm6_create_effect;
    cargo_subtype_text: return string(STR_REFIT_FACTORY);
    purchase_speed: return 220;
  }
}

long_name_template(sm6, STR_LONGNAME_SM6)
allow_acdcemu(sm6)

switch (FEAT_TRAINS, PARENT, sm6_part2_cargo_capacity,
  vehicle_type_id == sm6)
{
  1: return 48;
     return 0;
}

item (FEAT_TRAINS, sm6_part2, 457) {
  property {
    vehicle_no_dates(2010, 2050, 30, 10, 8, 0)
    vehicle_acdcemu_c(0, 48, 15*1)
    cargo_allow_refit: [TOUR, PASS];
    default_cargo_type: TOUR;
  }
  graphics {
    default: sm6_sprites;
    cargo_age_period: return 370;
    create_effect: sm6_create_effect;
    cargo_capacity: sm6_part2_cargo_capacity;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
  }
}

item (FEAT_TRAINS, sm6_part3, 458) {
  property {
    vehicle_no_dates(2010, 2050, 30, 10, 8, 0)
    vehicle_acdcemu_empty()
  }
  graphics {
    default: sm6_sprites;
    create_effect: sm6_create_effect;
  }
}
