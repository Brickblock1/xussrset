 // sn

// CН (1954-1956), электросекция постоянного тока.
// Спрайты

#define IMAGEFILE  "src/emu/sn-1954-1956.png"

// покупка
purchase_sprites(sn, 0, 0)

// обычный: погрузка/перемещение
spriteset (sn_loading_spriteset, IMAGEFILE)
{
  s12_template(103, 83, 0)
} 

spriteset (sn_traveling_spriteset, IMAGEFILE)
{
  s12_template(103, 150, 0)
} 

spritegroup sn_spritegroup
{
  loading: sn_loading_spriteset;
  loaded: sn_traveling_spriteset;
}

// развёрнутый: погрузка/перемещение
spriteset (sn_r_loading_spriteset, IMAGEFILE)
{
  s12_template(543, 83, 0)
} 

spriteset (sn_r_traveling_spriteset, IMAGEFILE)
{
  s12_template(543, 150, 0)
} 

spritegroup sn_r_spritegroup
{
  loading: sn_r_loading_spriteset;
  loaded: sn_r_traveling_spriteset;
}

// моторный
spriteset (sn_b_notpowered_spriteset, IMAGEFILE)
{
  s12_template(103, 500, 0)
} 

spriteset (sn_b_spriteset, IMAGEFILE)
{
  s12_template(103, 567, 0)
} 

// 2: обычный: погрузка/перемещение
spriteset (sn_v2_loading_spriteset, IMAGEFILE)
{
  s12_template(103, 217, 0)
} 

spriteset (sn_v2_traveling_spriteset, IMAGEFILE)
{
  s12_template(103, 284, 0)
} 

spritegroup sn_v2_spritegroup
{
  loading: sn_v2_loading_spriteset;
  loaded: sn_v2_traveling_spriteset;
}

// развёрнутый: погрузка/перемещение
spriteset (sn_r_v2_loading_spriteset, IMAGEFILE)
{
  s12_template(543, 217, 0)
} 

spriteset (sn_r_v2_traveling_spriteset, IMAGEFILE)
{
  s12_template(543, 284, 0)
} 

spritegroup sn_r_v2_spritegroup
{
  loading: sn_r_v2_loading_spriteset;
  loaded: sn_r_v2_traveling_spriteset;
}

// моторный
spriteset (sn_b_v2_notpowered_spriteset, IMAGEFILE)
{
  s12_template(103, 634, 0)
} 

spriteset (sn_b_v2_spriteset, IMAGEFILE)
{
  s12_template(103, 701, 0)
} 

// 3: обычный: погрузка/перемещение
spriteset (sn_v3_loading_spriteset, IMAGEFILE)
{
  s12_template(103, 351, 0)
} 

spriteset (sn_v3_traveling_spriteset, IMAGEFILE)
{
  s12_template(103, 418, 0)
} 

spritegroup sn_v3_spritegroup
{
  loading: sn_v3_loading_spriteset;
  loaded: sn_v3_traveling_spriteset;
}

// развёрнутый: погрузка/перемещение
spriteset (sn_r_v3_loading_spriteset, IMAGEFILE)
{
  s12_template(543, 351, 0)
} 

spriteset (sn_r_v3_traveling_spriteset, IMAGEFILE)
{
  s12_template(543, 418, 0)
} 

spritegroup sn_r_v3_spritegroup
{
  loading: sn_r_v3_loading_spriteset;
  loaded: sn_r_v3_traveling_spriteset;
}

// моторный
spriteset (sn_b_v3_notpowered_spriteset, IMAGEFILE)
{
  s12_template(103, 768, 0)
} 

spriteset (sn_b_v3_spriteset, IMAGEFILE)
{
  s12_template(103, 835, 0)
} 

#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, sn_sprites_2,
  cargo_subtype)
{
  0: sn_spritegroup;
  1: sn_v2_spritegroup;
  2: sn_v3_spritegroup;
     align_12_sprites;
}

long_vehicle(sn)

switch (FEAT_TRAINS, SELF, sn_b_sprites00,
[
  set_offset_to(-2),
  prev_vehicle_cargo_subtype() ])
{
  0: sn_b_notpowered_spriteset;
  1: sn_b_v2_notpowered_spriteset;
  2: sn_b_v3_notpowered_spriteset;
     align_12_sprites;
}

switch (FEAT_TRAINS, SELF, sn_b_sprites1,
[
  set_offset_to(-2),
  (prev_vehicle_cargo_subtype() * 2) + 
  (!(vehicle_is_not_powered || vehicle_is_in_depot)) ])
{
  0: sn_b_notpowered_spriteset;
  1: sn_b_spriteset;
  2: sn_b_v2_notpowered_spriteset;
  3: sn_b_v2_spriteset;
  4: sn_b_v3_notpowered_spriteset;
  5: sn_b_v3_spriteset;
     align_12_sprites;
}

switch (FEAT_TRAINS, PARENT, sn_b_sprites_2,
  (vehicle_type_id == sn) )
{
  1: sn_b_sprites1;
     sn_b_sprites00;
}

long_vehicle_nocount(sn_b)

switch (FEAT_TRAINS, SELF, sn_c_sprites_2,
[
  set_offset_to(-4),
  prev_vehicle_cargo_subtype() ])
{
  0: sn_r_spritegroup;
  1: sn_r_v2_spritegroup;
  2: sn_r_v3_spritegroup;
     align_12_sprites;
}

long_vehicle_nocount(sn_c)

// Можно ли ещё присоединить?
switch (FEAT_TRAINS, SELF, sn_can_attach_wagon2,
  LOAD_TEMP(0) < 3)
{
  1: return CB_RESULT_ATTACH_ALLOW;
     return string(STR_CAN_ATTACH_NO_MORE);
}

// считаем уже имеющиеся вагоны

switch (FEAT_TRAINS, PARENT, sn_can_attach_wagon1,
  STORE_TEMP(count_veh_id(sn), 0))
{
  sn_can_attach_wagon2;
}

switch (FEAT_TRAINS, SELF, sn_can_attach_wagon,
  vehicle_type_id == sn)
{
  1: sn_can_attach_wagon1;
     return string(STR_CAN_ATTACH_SAME_MU_ONLY);
}

switch (FEAT_TRAINS, SELF, sn_cargo_subtype_text,
  cargo_subtype)
{
  0: string(STR_REFIT_FACTORY_6208, string(STR_REFIT_TTD_7C));
  1: string(STR_REFIT_FACTORY_6208, string(STR_REFIT_TTD_6C));
  2: string(STR_REFIT_FACTORY_6208, string(STR_REFIT_TTD_59));
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, sn_articulated_part,
  extra_callback_info1)
{
  1: return dummy4;
  2: return unitb;
  3: return dummy4;
  4: return unitc;
  5: return dummy4;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Визуализируем эффекты тяги у sn, только если локомотив - sn
switch (FEAT_TRAINS, PARENT, sn_visual_effect_and_powered,
  vehicle_type_id == sn)
{
  1: return electric_visual_effect_and_powered(0);
     return disable_visual_effect_and_powered();
}

// Даём тягу, только если локомотив - sn
switch (FEAT_TRAINS, PARENT, sn_power,
  vehicle_type_id == sn)
{
  1: return get_power_in_cb(921);
     return 0;
}

// Допускается эксплуатация с пассажирами только если голова - sn
switch (FEAT_TRAINS, PARENT, sn_cargo_capacity,
  (vehicle_type_id == sn)
)
{
  1: return 296;
     return 0;
}

item (FEAT_TRAINS, sn) 
{
  property
  {
    name: string(STR_SN_NAME);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1954), 1, 1);
    vehicle_life: 10; // срок службы
    model_life: get_model_life(1954,1956);
    retire_early: get_retire_early(1954,1956); // VEHICLE_NEVER_EXPIRES;
    reliability_decay: 20;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cost_factor: get_emu_cost_factor();
    running_cost_factor: get_emu_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    speed: 120 km/h;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    refit_cost: 0;
    track_type: get_dc_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 921 hpM;
    running_cost_base: RUNNING_COST_ELECTRIC;
    loading_speed: (296/8);
    cargo_capacity: 255; // 296
    weight: 148 ton;
    engine_class: ENGINE_CLASS_ELECTRIC;
    tractive_effort_coefficient: get_tec(40.0, 148);
    length: 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
  }
  graphics {
    default: sn_sprites;
    purchase: sn_purchase_sprites;
    articulated_part: sn_articulated_part;
    can_attach_wagon: sn_can_attach_wagon;
    additional_text: return string(STR_SN_PURCHASE_HINT, string(STR_SECTIONS_MU_S1_3of3));
    cargo_subtype_text: sn_cargo_subtype_text;
    cargo_capacity: sn_cargo_capacity;
    power: sn_power;
  }
  livery_override(unitb)
  {
    length: return 8;
    visual_effect_and_powered: sn_visual_effect_and_powered;
    sn_b_sprites;

  }
  livery_override(unitc)
  {
    length: return 8;
    visual_effect_and_powered: disable_visual_effect_and_powered();
    sn_c_sprites;
  }
}

if (enable_long_names)
{
  item (FEAT_TRAINS, sn)
  {
    property
    { name: string(STR_SN_NAME_LONG); }
  }
}

