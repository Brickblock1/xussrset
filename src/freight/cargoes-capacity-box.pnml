// плотность груза для крытых вагонов
switch (FEAT_TRAINS, SELF, box_cargo_capacity, cargo_type_in_veh)
{
// Живность: звери
  LVST: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 50, cargo_unit_weight);  // TODO в YETI нестандартная масса единицы груза. Определить корректную плотность (например х10, иначе вместимость неспециальных вагонов низкая)
// Крытые: Товары
  BOOM: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);
  GOOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);
// Крытые: Материалы
  CERA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200, cargo_unit_weight);  // Стекло органическое
  CMNT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1540, cargo_unit_weight);  // Цементный клинкер, cement clinker
  GLAS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 2500, cargo_unit_weight);  // Стекло оконное, window glass
  PAPR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1201, cargo_unit_weight);  // Бумага обычная, standard paper
  SOAP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1111, cargo_unit_weight);  // Мыло в таре TODO заполнить плотность
  LYE_: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1111, cargo_unit_weight);  // Мыло в таре TODO заполнить плотность
// Крытые: Сырьё
  FICR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 420, cargo_unit_weight);   // Хлопковая вата, сottonwood
  WOOL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1310, cargo_unit_weight);  // Шерсть, волосы, wool
// Крытые: Ценности
  DIAM: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 75, cargo_unit_weight);
  GOLD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 75, cargo_unit_weight);
  MAIL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 250, cargo_unit_weight);
  VALU: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 75, cargo_unit_weight);
// Жидкости: Материалы
  COAT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 950, cargo_unit_weight);  // DYES
  DYES: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 950, cargo_unit_weight);  // 930-950
  PLAS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 800, cargo_unit_weight);
  PLST: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 800, cargo_unit_weight);
// Жидкости: Химикаты
  ACID: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1505/4, cargo_unit_weight);  //  Азотная кислота в таре
  CHLO: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200/4, cargo_unit_weight);  // Соляная кислота в таре
  NH3_: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 734/4, cargo_unit_weight);   // Аммиак в таре TODO заполнить плотность
  CTAR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1250/4, cargo_unit_weight);  // в таре WIKI: Каменноугольная смола. Плотность 1120 ... 1250 кг /м3.
  O2__: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1141/4, cargo_unit_weight);  // Жидкий кислород в таре
// Жидкости: Сырьё
  BUBL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 10, cargo_unit_weight);
  RUBR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1950, cargo_unit_weight);
// Жидкости: Еда
  COLA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1030, cargo_unit_weight);   // в бутылках
  EOIL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 600, cargo_unit_weight);    // в бутылках
  WATR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 820/3, cargo_unit_weight);  // на европалетах в бутылках по 1,5 литра исходя из плотности воды 1000
// Еда: Продукты
  BEER: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 850/3, cargo_unit_weight);  // на европалетах в бутылках по 1,5 литра исходя из плотности пива 1040
  FZDR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 85, cargo_unit_weight);     // в бутылках на палетах
// Еда: Пищевое сырьё
  RSGR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 960, cargo_unit_weight);   // Сахар-сырец тростниковый, raw cane sugar
  SALT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200, cargo_unit_weight);  // Соль пищевая тонкого помола, fine salt
  SUGR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 850, cargo_unit_weight);   // Сахар-песок, granulated sugar
  SWET: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 430, cargo_unit_weight);
// Еда: Растения
  BEAN: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 580, cargo_unit_weight);  // Бобы касторовые Beans
  CASS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 720, cargo_unit_weight);  // Свекла, Beets
  JAVA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 430, cargo_unit_weight);  // Кофейные зерна жаренные, roast coffee beans
  NUTS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 650, cargo_unit_weight);  // Арахис чищенный (земляной орех), shelled peanuts
  SGBT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 560, cargo_unit_weight);  // Сахарной свеклы пульпа, wet sugarbeet pulp
  SGCN: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 270, cargo_unit_weight);  // Сахарный тростник, sugarcane
// Еда: Зерно
  CERE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 800, cargo_unit_weight);
  CTCD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 400, cargo_unit_weight);
  GRAI: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 705, cargo_unit_weight);  // Рожь, rye
  MAIZ: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 760, cargo_unit_weight);  // Зерно кукурузы, maize grain
  OLSD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 770, cargo_unit_weight);
  TOFF: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 860, cargo_unit_weight);
  WHEA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 780, cargo_unit_weight);  // Зерно пшеницы - wheat grain
// Сыпучка: Материалы
  CBLK: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 360, cargo_unit_weight);       // Гранулированный углерод ГОСТ 7885-86 Углерод технический для производства резины. Насыпная плотность в пределах 320-400 кг/м3
  FERT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200 / 2, cargo_unit_weight);  // в мешках. Суперфосфат порошковый 1200
  RCYC: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 480, cargo_unit_weight);       // Бытовые отходы, бытовой мусор, garbage, household rubbish
  SCMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1540 / 2, cargo_unit_weight);  // в мешках. Цементный клинкер, cement clinker
// Навал
  BDMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1540 / 2, cargo_unit_weight);  // в мешках. Цементный клинкер, cement clinker
// Штучный груз
  ENSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 300, cargo_unit_weight);
  FMSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 250, cargo_unit_weight);
  MNSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 300, cargo_unit_weight);
  POWR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 250, cargo_unit_weight);
  TOYS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 40, cargo_unit_weight);
  TYRE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);
  VBOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 250, cargo_unit_weight);
  VENG: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);
  VPTS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);
// Прочее
        return 0;
}
