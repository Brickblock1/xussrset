// Здесь  каждый груз можно занести в каждом списке, при этом будет своя плотность для данного типа транспортировки
// отбор списка допустимых грузов идёт ранее
// http://tehtab.ru/guide/guidephysics/guidephysicsdensity/densitytable/
// http://thermalinfo.ru/svojstva-zhidkostej/zhidkosti-raznye/plotnost-zhidkostej

/*
  TODO
выделить грузы на палетах

Регистр 0 - грузоподъёмность, т
Регистр 1 - объём, м³
Регистр 2 - площадь, м²
Регистр 3 - паллетомест
Регистр 4 - длина (шаблон)
*/

switch (FEAT_TRAINS, SELF, bulk_cargo_capacity, cargo_type_in_veh)
{
// Еда: Пищевое сырьё
  SALT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200, cargo_unit_weight);  // Соль пищевая тонкого помола, fine salt
  SUGR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 960, cargo_unit_weight);   // Сахар-сырец тростниковый, raw cane sugar  // TODO
// Сыпучка: Материалы
  CBLK: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 420, cargo_unit_weight);  // WIKI: Плотность частиц технического углерода — 1760—1900. Насыпная плотность хлопьевидного («пылящего») техуглерода составляет 330-420.
  FERT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 800, cargo_unit_weight);
  RCYC: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 480, cargo_unit_weight);   // Бытовые отходы, бытовой мусор, garbage, household rubbish
  SASH: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1080, cargo_unit_weight);  // Натрия карбонат в гранулах (углекислый натрий, сода кальцинированная) heavy soda ash (насыпная 1080)
  SCMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1660, cargo_unit_weight);  // Металлолом  (https://www.konsom.ru/media/2017/06/Raschet-nasypnoj-plotnosti-stalnogo-metalloloma-v-sovkah-dlya-skrapa-s-ispolzovaniem-trehmernoj-kamery.pdf)
  SCRP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1660, cargo_unit_weight);
  WSTE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 480, cargo_unit_weight);
// Сыпучка: Породы
  COAL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 850, cargo_unit_weight);  // Уголь антрацит кусковой сухой (1350-1600 насыпная 800-850)
  COKE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 500, cargo_unit_weight);  // Кокс (1300 насыпная 500)
  GRVL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1800, cargo_unit_weight);
  PEAT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 800, cargo_unit_weight);   // Торф сырой, moist peat
  SAND: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1440, cargo_unit_weight);  // Песок сухой рыхлый, loose sand
  SLAG: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 2110, cargo_unit_weight);  // Шлак топочный цельный, solid slag
// Сыпучка: Глины
  CLAY: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1700, cargo_unit_weight);
  KAOL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1550, cargo_unit_weight);
  LIME: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1550, cargo_unit_weight);  // Известняк кусками, broken limestone        Твердое
  QLME: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1550, cargo_unit_weight);
// Сыпучка: Руды
  AORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1280, cargo_unit_weight);
  CORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 2590, cargo_unit_weight);  // Медная руда красная  (куприт), copper ore 1940-2590
  FECR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 2190, cargo_unit_weight);
  IORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 2470, cargo_unit_weight);  // Гематит (красный железняк) дробленый, iron ore - crushed 2100-2900
  MNO2: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 7430, cargo_unit_weight);
  NITR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1200, cargo_unit_weight);  // Селитра натриевая измельченная, ground sodium nitrate
  PHOS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 960, cargo_unit_weight);   // Суперфосфат, acid phosphate
  PORE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 5015, cargo_unit_weight);  // Пирит цельный (кошачье золото, железный колчедан, серный колчедан, камень инков), pyrite (fool's gold) 2400-5015
  POTA: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1280, cargo_unit_weight);  // Калий углекислый (поташ), potash
  SULP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(1), 1310, cargo_unit_weight);  // Сера кусковая, lump sulphur
// Прочее
        return 0;
}
switch (FEAT_TRAINS, SELF, piece_cargo_capacity, cargo_type_in_veh)
{
// Крытые: Товары
  GOOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 400, cargo_unit_weight);
// Навал
  BDMT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 1600, cargo_unit_weight);
  BRCK: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 1800, cargo_unit_weight);
// Навал: Древесины
  BATT: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 100, cargo_unit_weight);
  TWOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 590, cargo_unit_weight);  // Дерево сухое, платан
  WDPR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 500, cargo_unit_weight);
  WOOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 450, cargo_unit_weight);  // Дерево сухое, ель
// Навал: Стали
  COPR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 2590, cargo_unit_weight);  // Медная руда красная  (куприт), copper ore
  CSTI: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700, cargo_unit_weight);  // Чугун TODO определить транспортную плотность
  IRON: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7880, cargo_unit_weight);  // Железо чистое Iron Fe
  METL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7900, cargo_unit_weight);
  PIPE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700/4, cargo_unit_weight);
  STAL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700, cargo_unit_weight);  // Стальные сплавы TODO определить транспортную плотность
  STCB: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700, cargo_unit_weight);  // Углеродистая сталь TODO определить транспортную плотность
  STEL: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700, cargo_unit_weight);
  STST: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7700, cargo_unit_weight);  // Нержавеющая сталь TODO определить транспортную плотность
  ZINC: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 7130, cargo_unit_weight);  // Цинк чистый Zinc Zn
// Штучный груз
  ENSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 300, cargo_unit_weight);
  FMSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 300, cargo_unit_weight);
  MNSP: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 300, cargo_unit_weight);  // Удобрения минеральные        800-1200
  POWR: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 300, cargo_unit_weight);
  TOYS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 300, cargo_unit_weight);
  TYRE: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 400, cargo_unit_weight);
  VBOD: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 400, cargo_unit_weight);
  VEHI: return LOAD_TEMP(4);
  VENG: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 400, cargo_unit_weight);
  VPTS: return calculate_capacity(LOAD_TEMP(0), LOAD_TEMP(2) * 5 / 2, 400, cargo_unit_weight);
// Прочее
        return 0;
}

#include "cargoes-capacity-box.pnml"
#include "cargoes-capacity-ref.pnml"
#include "cargoes-capacity-tank.pnml"
#include "cargoes-capacity-hopper.pnml"
#include "cargoes-capacity-cont.pnml"

#define flatbed_capacity()                     \
bulk_cargo_check(bulk_cargo_capacity)          \
piece_wide_cargo_check(piece_cargo_capacity)   \

#define gondola_capacity()                \
bulk_cargo_check(bulk_cargo_capacity)     \
piece_cargo_check(piece_cargo_capacity)   \

//end
