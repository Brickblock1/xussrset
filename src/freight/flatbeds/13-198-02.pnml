 // flatbed_13_198_02

#define IMAGEFILE  "src/freight/flatbeds/13-198-02-part1.png"
purchase_sprites(flatbed_13_198_02, 0, 0)
flatbed_empty_layout_template(flatbed_13_198_02, 8, 32, 40)
flatbed_layout1_template_fixed(flatbed_13_198_02, 8, 32, 40+67*1,   wood)  // лес
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*2,  good1) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*3,  good2) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*4,  good3) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*5,  good4) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*6,  good5) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*7,  good6) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*8,  good7) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*9,  good8) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*10, good9) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*11, good10) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*12, good11) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*13, good12) // 40 футовый контейнер
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/flatbeds/13-198-02-part2.png"
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40,      good13) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*1, good14) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*2, good15) // 40 футовый контейнер
flatbed_layout1_templateM_fixed(flatbed_13_198_02, 8, 32, 40+67*3, good16) // 40 футовый контейнер
#undef IMAGEFILE

random_switch (FEAT_TRAINS, SELF, flatbed_13_198_02_good_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  1: flatbed_13_198_02_good1_sprites;
  1: flatbed_13_198_02_good2_sprites;
  1: flatbed_13_198_02_good3_sprites;
  1: flatbed_13_198_02_good4_sprites;
  1: flatbed_13_198_02_good5_sprites;
  1: flatbed_13_198_02_good6_sprites;
  1: flatbed_13_198_02_good7_sprites;
  1: flatbed_13_198_02_good8_sprites;
  1: flatbed_13_198_02_good9_sprites;
  1: flatbed_13_198_02_good10_sprites;
  1: flatbed_13_198_02_good11_sprites;
  1: flatbed_13_198_02_good12_sprites;
  1: flatbed_13_198_02_good13_sprites;
  1: flatbed_13_198_02_good14_sprites;
  1: flatbed_13_198_02_good15_sprites;
  1: flatbed_13_198_02_good16_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_13_198_02_sprites_start,
  cargo_type_in_veh)
{
  GOOD: flatbed_13_198_02_good_sprites;
  PAPR: flatbed_13_198_02_good_sprites;
  ENSP: flatbed_13_198_02_good_sprites;
  MNSP: flatbed_13_198_02_good_sprites;
  VPTS: flatbed_13_198_02_good_sprites;
  GLAS: flatbed_13_198_02_good_sprites;
  BDMT: flatbed_13_198_02_good_sprites;
  WOOL: flatbed_13_198_02_good_sprites;
  WOOD: flatbed_13_198_02_wood_sprites;
        align_9_sprites;
}

short_vehicle(flatbed_13_198_02)

switch (FEAT_TRAINS, SELF, flatbed_13_198_02_weight,
  (cargo_type_in_veh != WOOD) && (cargo_count > 0))
{
  1: return 26+6;
     return 26;
}

random_switch (FEAT_TRAINS, SELF, flatbed_13_198_02_random, 0)
{
  independent: flatbed_13_198_02_good_sprites;
  1: return ttd_cc2 + 0;
  1: return ttd_cc2 + 1;
  1: return ttd_cc2 + 2;
  1: return ttd_cc2 + 3;
  1: return ttd_cc2 + 4;
  1: return ttd_cc2 + 5;
  1: return ttd_cc2 + 6;
  1: return ttd_cc2 + 7;
  1: return ttd_cc2 + 8;
  1: return ttd_cc2 + 9;
  1: return ttd_cc2 + 10;
  1: return ttd_cc2 + 11;
  1: return ttd_cc2 + 12;
  1: return ttd_cc2 + 13;
  1: return ttd_cc2 + 14;
  1: return ttd_cc2 + 15;
}

switch (FEAT_TRAINS, SELF, flatbed_13_198_02_colour_mapping,
  cargo_subtype + (enable_cc_default * 1024 * (cargo_subtype == 0)))
{
  0: flatbed_13_198_02_random;
  1: return ttd_cc2 + 0;
  2: return ttd_cc2 + 1;
  3: return ttd_cc2 + 2;
  4: return ttd_cc2 + 3;
  5: return ttd_cc2 + 4;
  6: return ttd_cc2 + 5;
  7: return ttd_cc2 + 6;
  8: return ttd_cc2 + 7;
  9: return ttd_cc2 + 8;
 10: return ttd_cc2 + 9;
 11: return ttd_cc2 + 10;
 12: return ttd_cc2 + 11;
 13: return ttd_cc2 + 12;
 14: return ttd_cc2 + 13;
 15: return ttd_cc2 + 14;
 16: return ttd_cc2 + 15;
     return CB_FAILED;
}

// cb cargo_subtype_text
switch (FEAT_TRAINS, SELF, flatbed_13_198_02_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_04);
  2: return string(STR_REFIT_TTD_06);
  3: return string(STR_REFIT_TTD_10);
  4: return string(STR_REFIT_TTD_53);
  5: return string(STR_REFIT_TTD_62);
  6: return string(STR_REFIT_TTD_63);
  7: return string(STR_REFIT_TTD_64);
  8: return string(STR_REFIT_TTD_93);
  9: return string(STR_REFIT_TTD_96);
 10: return string(STR_REFIT_TTD_9C);
 11: return string(STR_REFIT_TTD_9D);
 12: return string(STR_REFIT_TTD_B3);
 13: return string(STR_REFIT_TTD_B9);
 14: return string(STR_REFIT_TTD_BD);
 15: return string(STR_REFIT_TTD_19);
 16: return string(STR_REFIT_TTD_59);
     return CB_RESULT_NO_TEXT;
}

wagon_loading_speed_unlim(flatbed_13_198_02_good)
switch (FEAT_TRAINS, SELF, flatbed_13_198_02_loading_speed, 
  cargo_type_in_veh)
{ 
  GOOD: flatbed_13_198_02_good_loading_speed;
  PAPR: flatbed_13_198_02_good_loading_speed;
  GLAS: flatbed_13_198_02_good_loading_speed;
  BDMT: flatbed_13_198_02_good_loading_speed;
  WOOL: flatbed_13_198_02_good_loading_speed;
        all_wagons_bulk_loading_speed; 
}

wagon_running_cost(flatbed_13_198_02, 15)
hint_wagon_flat_noto(flatbed_13_198_02,
                     65, 40,
                     STR_PURCHASE_HINT_LOADING_SPEED_5TIC,
                     STR_PURCHASE_HINT_AGING_PERIOD_3_1,
                     STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_4AXLE,
                     2014,
                     STR_PURCHASE_HINT_FACTORY_URALVAGONZAVOD)

item (FEAT_TRAINS, flatbed_13_198_02, 371) {
  property {
    name: string(STR_MODEL_NUMBER3, 13, 198, 2);
    vehicle_dates(2014, 2050, 32, 10, 8, 2)
    vehicle_wagon(25.7, 120)
    vehicle_wagon_cargo(65, 255)
    cargo_allow_refit: [WOOD, GOOD, PAPR, ENSP, MNSP, VPTS, GLAS, BDMT, WOOL];
  }
  graphics {
    default: flatbed_13_198_02_sprites;
    purchase: flatbed_13_198_02_purchase_sprites;
    running_cost_factor: flatbed_13_198_02_running_cost_factor;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    cargo_subtype_text: flatbed_13_198_02_cargo_subtype_text;
    colour_mapping: flatbed_13_198_02_colour_mapping;
    weight: flatbed_13_198_02_weight;
    loading_speed: flatbed_13_198_02_loading_speed;
    additional_text: flatbed_13_198_02_additional_text;
  }
}

long_name_template(flatbed_13_198_02, STR_LONGNAME_FLATBED_13_198_02)
