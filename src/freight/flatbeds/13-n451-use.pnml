 // flatbed_13_n451

random_switch (FEAT_TRAINS, SELF, flatbed_13_n451_good_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_13_401_good_sprites;
  6: flatbed_13_401_good1_sprites;
  4: flatbed_13_401_good2_sprites;
  6: flatbed_13_401_good3_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n451_sprites_start,
  cargo_type_in_veh)
{
  GOOD: flatbed_13_n451_good_sprites;
  VEHI: flatbed_13_401_vehi_sprites;
  ENSP: flatbed_13_n451_good_sprites;
  MNSP: flatbed_13_n451_good_sprites;
  VPTS: flatbed_13_n451_good_sprites;
  WOOD: flatbed_13_401_wood_sprites;
  WDPR: flatbed_13_401_wdpr_sprites;
  AORE: flatbed_13_n451_good_sprites;
  CORE: flatbed_13_n451_good_sprites;
  IORE: flatbed_13_n451_good_sprites;
  BDMT: flatbed_13_n451_good_sprites;
  BRCK: flatbed_13_n451_good_sprites;
  CLAY: flatbed_13_n451_good_sprites;
  GRVL: flatbed_13_n451_good_sprites;
  LIME: flatbed_13_n451_good_sprites;
  POTA: flatbed_13_n451_good_sprites;
  SAND: flatbed_13_n451_good_sprites;
  SCMT: flatbed_13_n451_good_sprites;
  STEL: flatbed_13_401_stel_sprites;
  SULP: flatbed_13_n451_good_sprites;
        align_9_sprites;
}

long_vehicle_RND(flatbed_13_n451, flatbed_13_n451_good_sprites)

switch (FEAT_TRAINS, SELF, flatbed_13_n451_cargo_capacity,
  cargo_type_in_veh)
{
  GOOD: return 66;
  VEHI: return  3;
  ENSP: return 32;
  MNSP: return 64;
  VPTS: return 64;
  AORE: return 47;
  BDMT: return 59;
  BRCK: return 59;
  GRVL: return 59;
  LIME: return 53;
  SAND: return 59;
  SULP: return 48;
        return 63;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n451_stel_loading_speed,
  (random_bits / 2) % 16)
{
  0..5: return (cargo_capacity / 2 + 1);   // фермы
        return (cargo_capacity / 3 + 1);   // трубы
}

switch (FEAT_TRAINS, SELF, flatbed_13_n451_good_loading_speed,
  (random_bits / 2) % 16)
{
  0..5: return (cargo_capacity / 2 + 1);   // товары 2
  6..8: return (cargo_capacity / 2 + 1);   // товары 2
  9..13: return 255;                       // товары 1
  14: return 255;                          // 40 футовый контейнер
      return (cargo_capacity / 2 + 1);     // 20 футовый контейнер
}

wagon_loading_speed_sym(flatbed_13_n451, 1, vehi)

switch (FEAT_TRAINS, SELF, flatbed_13_n451_loading_speed, 
  cargo_type_in_veh)
{ 
  VEHI: flatbed_13_n451_vehi_loading_speed;
  STEL: flatbed_13_n451_stel_loading_speed;
  GOOD: flatbed_13_n451_good_loading_speed;
        all_wagons_bulk_loading_speed; 
}

wagon_running_cost(flatbed_13_n451, 23)

item (FEAT_TRAINS, flatbed_13_n451, 509) {
  property {
    name: string(STR_NAME_FLATBED_13_N451);
    vehicle_dates(1957, 1964, 32, 10, 8, 4)
    vehicle_wagon(21, 120)
    vehicle_wagon_cargo(63, 10)
    cargo_allow_refit: [STEL, GOOD, VEHI, ENSP, MNSP, VPTS, WOOD, WDPR, BDMT, BRCK];
  }
  graphics {
    default: flatbed_13_n451_sprites;
    purchase: flatbed_13_401_purchase_sprites;
    running_cost_factor: flatbed_13_n451_running_cost_factor;
    articulated_part: articulated_part_dummy1;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    cargo_subtype_text: flatbed_13_401_cargo_subtype_text;
    colour_mapping: flatbed_13_401_colour_mapping;
    cargo_capacity: flatbed_13_n451_cargo_capacity;
    loading_speed: flatbed_13_n451_loading_speed;
    additional_text: return string(STR_PURCHASE_HINT_WAGON_FLATBED,
                                   63, 37,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_5TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1),
                                   string(STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_4AXLE),
                                   string(STR_PURCHASE_HINT_FROMTO, 1957, 1964),
                                   string(STR_PURCHASE_HINT_FACTORY_DNEPRODZERZHINSKY_CW));
  }
}

long_name_template(flatbed_13_n451, STR_LONGNAME_FLATBED_13_N451)
