 // flatbed_13_xx
/// Платформа
// 270 (10Eh)

#define IMAGEFILE  "src/freight/flatbeds/13-xx-part1.png"
purchase_sprites(flatbed_13_xx, 0, 0)
flatbed_empty_layout_template(flatbed_13_xx, 8, 32, 40)
flatbed_layout2_template_fixed(flatbed_13_xx, 8, 32, 40+67*1,  good) // товары
flatbed_layout2_template_fixed(flatbed_13_xx, 8, 32, 40+67*3,  wdpr) // лесоматериалы
flatbed_layout3_template_fixed(flatbed_13_xx, 8, 32, 40+67*5,  wood)  // лес
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/flatbeds/13-xx-part2.png"
flatbed_layout2_template_fixed(flatbed_13_xx, 8, 32, 40,       stel1) // сталь
flatbed_layout3_template_fixed(flatbed_13_xx, 8, 32, 40+67*2,  stel2) // сталь
flatbed_layout3_template_fixed(flatbed_13_xx, 8, 32, 40+67*5,  stel3) // сталь
#undef IMAGEFILE

random_switch (FEAT_TRAINS, SELF, flatbed_13_xx_stel_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  6: flatbed_13_xx_stel1_sprites;
  5: flatbed_13_xx_stel2_sprites;
  5: flatbed_13_xx_stel3_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_13_xx_sprites_start,
  cargo_type_in_veh)
{
  GOOD: flatbed_13_xx_good_sprites;
  WDPR: flatbed_13_xx_wdpr_sprites;
  WOOD: flatbed_13_xx_wood_sprites;
  STEL: flatbed_13_xx_stel_sprites;
        align_8_sprites;
}

short_vehicle_RND(flatbed_13_xx, flatbed_13_xx_stel1_sprites)

random_switch (FEAT_TRAINS, SELF, flatbed_13_xx_random, 0 )
{
  independent: flatbed_13_xx_stel_sprites;
  1: return ttdall_cc + 0x19;
  1: return ttdall_cc + 0x1A;
  1: return ttdall_cc + 0x6B;
  1: return ttdall_cc + 0x6C;
  1: return ttdall_cc + 0x7B;
}

switch (FEAT_TRAINS, SELF, flatbed_13_xx_colour_mapping,
  cargo_subtype + (enable_cc_default * 1024 * (cargo_subtype == 0)))
{
  0: flatbed_13_xx_random;
  1: return ttdall_cc + 0x19;
  2: return ttdall_cc + 0x1A;
  3: return ttdall_cc + 0x6B;
  4: return ttdall_cc + 0x6C;
  5: return ttdall_cc + 0x7B;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, flatbed_13_xx_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_19);
  2: return string(STR_REFIT_TTD_1A);
  3: return string(STR_REFIT_TTD_6B);
  4: return string(STR_REFIT_TTD_6C);
  5: return string(STR_REFIT_TTD_7B);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_13_xx_cargo_capacity,
  cargo_type_in_veh)
{
  GOOD: return 75;
        return 50;
}

wagon_running_cost(flatbed_13_xx, 18)

item (FEAT_TRAINS, flatbed_13_xx, 270) {
  property {
    name: string(STR_NAME_FLATBED_13_XX);
    vehicle_dates(1930, 1938, 32, 10, 8, 3)
    vehicle_wagon(18, 120)
    vehicle_wagon_cargo(50, 10)
    cargo_allow_refit: [STEL, GOOD, WDPR, WOOD];
  }
  graphics {
    default: flatbed_13_xx_sprites;
    purchase: flatbed_13_xx_purchase_sprites;
    running_cost_factor: flatbed_13_xx_running_cost_factor;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    cargo_subtype_text: flatbed_13_xx_cargo_subtype_text;
    colour_mapping: flatbed_13_xx_colour_mapping;
    cargo_capacity: flatbed_13_xx_cargo_capacity;
    additional_text: return string(STR_PURCHASE_HINT_WAGON_FLATBED,
                                   50, 37,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_5TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1),
                                   string(STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_4AXLE),
                                   string(STR_PURCHASE_HINT_FROMTO, 1930, 1938),
                                   string(STR_PURCHASE_HINT_FACTORY_BRYANSK));
  }
}

long_name_template(flatbed_13_xx, STR_LONGNAME_FLATBED_13_XX)
