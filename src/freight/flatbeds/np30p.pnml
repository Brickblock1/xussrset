 // flatbed_np30p
// 294 (126h)

#define IMAGEFILE  "src/freight/flatbeds/np30p.png"
purchase_sprites(flatbed_np30p_v1, 0, 0)
purchase_sprites(flatbed_np30p_v2, 100, 0)

flatbed_empty_layout_template(flatbed_np30p_v1, 6, 144, 64)
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,   64, coal)  // уголь         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  182, iore)  // жел. руда     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  300, core)  // медн. руда    
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  418, aore)  // бокситы       
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  536, clay)  // глина         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  654, fert)  // удобрения     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  772, grvl)  // гравий        
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396,  890, lime)  // известняк     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1008, pota)  // поташ         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1126, sand)  // песок         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1244, sulp)  // сера          
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1362, bdmt)  // кирпичи       
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1480, stel1) // сталь
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1598, stel2) // сталь          
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1716, good1) // товары  
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1834, good2) // товары
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 1952, vehi1) // Автомобили
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 2070, vehi2) // Автомобили
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 2188, wood)  // древесина             
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 2306, wdpr)  // лесоматериалы 
flatbed_horisontal_short_layout3_template(flatbed_np30p_v1, 6, 396, 2424, scmt)  // металлолом
                                                                           
flatbed_empty_layout_template(flatbed_np30p_v2, 6, 144, 64+43)
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,   64+43, coal)  // уголь         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  182+43, iore)  // жел. руда     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  300+43, core)  // медн. руда    
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  418+43, aore)  // бокситы       
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  536+43, clay)  // глина         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  654+43, fert)  // удобрения     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  772+43, grvl)  // гравий        
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396,  890+43, lime)  // известняк     
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1008+43, pota)  // поташ         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1126+43, sand)  // песок         
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1244+43, sulp)  // сера          
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1362+43, bdmt)  // кирпичи       
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1480+43, stel1) // сталь
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1598+43, stel2) // сталь          
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1716+43, good1) // товары  
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1834+43, good2) // товары
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 1952+43, vehi1) // Автомобили
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 2070+43, vehi2) // Автомобили
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 2188+43, wood)  // древесина             
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 2306+43, wdpr)  // лесоматериалы 
flatbed_horisontal_short_layout3_template(flatbed_np30p_v2, 6, 396, 2424+43, scmt)  // металлолом
#undef IMAGEFILE                              

switch (FEAT_TRAINS, SELF, flatbed_np30p_purchase_sprites,
  current_year >= 1902)
{
  0: flatbed_np30p_v1_purchase_sprites;
     flatbed_np30p_v2_purchase_sprites;
}                             

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v1_good_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  independent: flatbed_np30p_v1_good1_sprites;
  1: flatbed_np30p_v1_good1_sprites;
  1: flatbed_np30p_v1_good2_sprites;
}

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v1_stel_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_np30p_v1_good_sprites;
  1: flatbed_np30p_v1_stel1_sprites;
  1: flatbed_np30p_v1_stel2_sprites;
}

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v1_vehi_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_np30p_v1_good_sprites;
  1: flatbed_np30p_v1_vehi1_sprites;
  1: flatbed_np30p_v1_vehi2_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_v1_sprites,
  cargo_type_in_veh)
{
  COAL: flatbed_np30p_v1_coal_sprites;
  IORE: flatbed_np30p_v1_iore_sprites;
  CORE: flatbed_np30p_v1_core_sprites;
  AORE: flatbed_np30p_v1_aore_sprites;
  CLAY: flatbed_np30p_v1_clay_sprites;
  FERT: flatbed_np30p_v1_fert_sprites;
  GRVL: flatbed_np30p_v1_grvl_sprites;
  LIME: flatbed_np30p_v1_lime_sprites;
  POTA: flatbed_np30p_v1_pota_sprites;
  SAND: flatbed_np30p_v1_sand_sprites;
  SULP: flatbed_np30p_v1_sulp_sprites;
  BDMT: flatbed_np30p_v1_bdmt_sprites;
  STEL: flatbed_np30p_v1_stel_sprites;
  GOOD: flatbed_np30p_v1_good_sprites;
  VEHI: flatbed_np30p_v1_vehi_sprites;
  WOOD: flatbed_np30p_v1_wood_sprites;
  WDPR: flatbed_np30p_v1_wdpr_sprites;
  SCMT: flatbed_np30p_v1_scmt_sprites;
  ENSP: flatbed_np30p_v1_good_sprites;
  MNSP: flatbed_np30p_v1_good_sprites;
        align_6_sprites;
}

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v2_good_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_np30p_v1_good_sprites;
  1: flatbed_np30p_v2_good1_sprites;
  1: flatbed_np30p_v2_good2_sprites;
}

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v2_stel_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_np30p_v1_good_sprites;
  1: flatbed_np30p_v2_stel1_sprites;
  1: flatbed_np30p_v2_stel2_sprites;
}

random_switch (FEAT_TRAINS, SELF, flatbed_np30p_v2_vehi_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: flatbed_np30p_v1_good_sprites;
  1: flatbed_np30p_v2_vehi1_sprites;
  1: flatbed_np30p_v2_vehi2_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_v2_sprites,
  cargo_type_in_veh)
{
  COAL: flatbed_np30p_v2_coal_sprites;
  IORE: flatbed_np30p_v2_iore_sprites;
  CORE: flatbed_np30p_v2_core_sprites;
  AORE: flatbed_np30p_v2_aore_sprites;
  CLAY: flatbed_np30p_v2_clay_sprites;
  FERT: flatbed_np30p_v2_fert_sprites;
  GRVL: flatbed_np30p_v2_grvl_sprites;
  LIME: flatbed_np30p_v2_lime_sprites;
  POTA: flatbed_np30p_v2_pota_sprites;
  SAND: flatbed_np30p_v2_sand_sprites;
  SULP: flatbed_np30p_v2_sulp_sprites;
  BDMT: flatbed_np30p_v2_bdmt_sprites;
  STEL: flatbed_np30p_v2_stel_sprites;
  GOOD: flatbed_np30p_v2_good_sprites;
  VEHI: flatbed_np30p_v2_vehi_sprites;
  WOOD: flatbed_np30p_v2_wood_sprites;
  WDPR: flatbed_np30p_v2_wdpr_sprites;
  SCMT: flatbed_np30p_v2_scmt_sprites;
  ENSP: flatbed_np30p_v2_good_sprites;
  MNSP: flatbed_np30p_v2_good_sprites;
        align_6_sprites;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_sprites_start,
  (build_year >= 1902) || (date_of_last_service >= date(1902, 1, 1)))
{
  0: flatbed_np30p_v1_sprites;
     flatbed_np30p_v2_sprites;
}                             

short_vehicle_RND(flatbed_np30p, flatbed_np30p_v1_good1_sprites)

wagon_running_cost(flatbed_np30p, 2)

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_capacity_1892, 
  cargo_type_in_veh)
{
  GOOD: return 25;
  VEHI: return  2;
        return 12;
}     

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_capacity_1909, 
  cargo_type_in_veh)
{
  GOOD: return 29;
  VEHI: return  2;
        return 15;
}     

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_capacity_1911, 
  cargo_type_in_veh)
{
  GOOD: return 33;
  VEHI: return  2;
        return 16;
}     

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_capacity1, 
  (build_year >= 1909) +
  (build_year >= 1911))
{
  0: flatbed_np30p_cargo_capacity_1892;
  1: flatbed_np30p_cargo_capacity_1909;
     flatbed_np30p_cargo_capacity_1911;
}     

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_capacity, 
  cargo_subtype)
{
  0: flatbed_np30p_cargo_capacity1;
  1: flatbed_np30p_cargo_capacity_1909;
     flatbed_np30p_cargo_capacity_1911;
}     

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_subtype_text_up1909,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_WITH_INCREASED_CAPACITY);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_subtype_text_up1911,
  cargo_subtype)
{
  0..1: return string(STR_REFIT_FACTORY);
  2: return string(STR_REFIT_WITH_INCREASED_CAPACITY);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_subtype_text_1892,
  (current_year >= 1909) +
  (current_year >= 1911))
{
  1: flatbed_np30p_cargo_subtype_text_up1909;
  2: flatbed_np30p_cargo_subtype_text_up1911;
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_subtype_text_1909,
  (current_year >= 1911))
{
  1: flatbed_np30p_cargo_subtype_text_up1911;
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_cargo_subtype_text,
  (build_year >= 1909) +
  (build_year >= 1911))
{
  0: flatbed_np30p_cargo_subtype_text_1892;
  1: flatbed_np30p_cargo_subtype_text_1909;
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_np30p_additional_text, 
  (build_year >= 1909) +
  (build_year >= 1911))
{
  0: return string(STR_PURCHASE_HINT_WAGON_FLATBED,
                   12, 25,
                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1), 
                   string(STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_2AXLE),
                   string(STR_PURCHASE_HINT_FROMTO, 1892, 1916), 
                   string(STR_PURCHASE_HINT_FACTORY_PUTILOVSKY));
  1: return string(STR_PURCHASE_HINT_WAGON_FLATBED,
                   15, 25,
                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1), 
                   string(STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_2AXLE),
                   string(STR_PURCHASE_HINT_FROMTO, 1892, 1916), 
                   string(STR_PURCHASE_HINT_FACTORY_PUTILOVSKY));
     return string(STR_PURCHASE_HINT_WAGON_FLATBED,
                   16, 25,
                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1), 
                   string(STR_PURCHASE_HINT_WAGON_TYPE_FLATBED_2AXLE),
                   string(STR_PURCHASE_HINT_FROMTO, 1892, 1916), 
                   string(STR_PURCHASE_HINT_FACTORY_PUTILOVSKY));
}

item (FEAT_TRAINS, flatbed_np30p, 294) {
  property {
    name: string(STR_NAME_FLATBED_NP30P);
    vehicle_dates(1892, 1916, 30, 10, 5, 1)
    vehicle_wagon(6.8, 120)
    vehicle_wagon_cargo(13, 5)
    cargo_allow_refit: [WOOD, COAL, IORE, CORE, AORE, CLAY, FERT, GRVL, LIME, POTA, SAND, SULP, BDMT, STEL, GOOD, VEHI, WDPR, SCMT, ENSP, MNSP];
  }
  graphics {
    default: flatbed_np30p_sprites;
    purchase: flatbed_np30p_purchase_sprites;
    running_cost_factor: flatbed_np30p_running_cost_factor;
    articulated_part: articulated_part_dummy1;
    additional_text: flatbed_np30p_additional_text;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    cargo_capacity: flatbed_np30p_cargo_capacity;
    colour_mapping: any_cc_colour;
    cargo_subtype_text: flatbed_np30p_cargo_subtype_text;
  }
}

long_name_template(flatbed_np30p, STR_LONGNAME_FLATBED_NP30P)
