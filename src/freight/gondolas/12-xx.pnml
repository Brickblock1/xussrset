 // gondola_12_xx

#define IMAGEFILE  "src/freight/gondolas/12-xx-part1.png"
purchase_sprites(gondola_12_xx, 0, 0)
flatbed_empty_layout_template(gondola_12_xx, 8, 32, 40)
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*1,  coal) // уголь      
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*4,  iore) // жел. руда  
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*7,  core) // медн. руда 
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*10, aore) // бокситы    
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/gondolas/12-xx-part2.png"
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*0, clay) // глина    
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*3, fert) // удобрения
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*6, grvl) // гравий   
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*9, lime) // известняк
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/gondolas/12-xx-part3.png"        
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*0, pota) // поташ  
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*3, sand) // песок  
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*6, sulp) // сера   
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*9, bdmt) // кирпичи
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/gondolas/12-xx-part4.png"
flatbed_layout4_template_fixed(gondola_12_xx, 8, 32, 40+67*0, stel1) // сталь
flatbed_layout4_template_fixed(gondola_12_xx, 8, 32, 40+67*4, stel2) // сталь
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*8, stel3) // сталь
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*11, stel4) // сталь
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/gondolas/12-xx-part5.png"
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*0, wdpr) // лесоматериалы
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*3, wood) // Древесина
#undef IMAGEFILE
#define IMAGEFILE  "src/freight/gondolas/12-xx-part6.png"
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*0, scmt) // металолом
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*3, mno2) // марганец
flatbed_layout3_template_fixed(gondola_12_xx, 8, 32, 40+67*6, pore) // пирит
#undef IMAGEFILE

random_switch (FEAT_TRAINS, SELF, gondola_12_xx_stel_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  independent: gondola_12_xx_coal_sprites;
  1: gondola_12_xx_stel1_sprites;
  1: gondola_12_xx_stel2_sprites;
  1: gondola_12_xx_stel3_sprites;
  1: gondola_12_xx_stel4_sprites;
}

random_switch (FEAT_TRAINS, SELF, gondola_12_xx_copr_sprites,
  bitmask(TRIGGER_VEHICLE_NEW_LOAD))
{
  dependent: gondola_12_xx_stel_sprites;
  1: gondola_12_xx_stel1_sprites;
  1: gondola_12_xx_stel4_sprites;
}

switch (FEAT_TRAINS, SELF, gondola_12_xx_sprites_start,
  cargo_type_in_veh)
{
  COAL: gondola_12_xx_coal_sprites;
  IORE: gondola_12_xx_iore_sprites;
  CORE: gondola_12_xx_core_sprites;
  AORE: gondola_12_xx_aore_sprites;
  CLAY: gondola_12_xx_clay_sprites;
  FERT: gondola_12_xx_fert_sprites;
  GRVL: gondola_12_xx_grvl_sprites;
  LIME: gondola_12_xx_lime_sprites;
  POTA: gondola_12_xx_pota_sprites;
  SAND: gondola_12_xx_sand_sprites;
  SULP: gondola_12_xx_sulp_sprites;
  BRCK: gondola_12_xx_bdmt_sprites;
  BDMT: gondola_12_xx_bdmt_sprites;
  WDPR: gondola_12_xx_wdpr_sprites;
  STEL: gondola_12_xx_stel_sprites;
  WOOD: gondola_12_xx_wood_sprites;
  SCMT: gondola_12_xx_scmt_sprites;
  MNO2: gondola_12_xx_mno2_sprites;
  PORE: gondola_12_xx_pore_sprites;
  NITR: gondola_12_xx_clay_sprites;
  COPR: gondola_12_xx_copr_sprites;
        align_8_sprites;
}

short_vehicle_RND(gondola_12_xx, gondola_12_xx_coal_sprites)

random_switch (FEAT_TRAINS, SELF, gondola_12_xx_random, 0 )
{
  independent: gondola_12_xx_coal_sprites;
  independent: gondola_12_xx_stel_sprites;
  1: return ttdall_cc + 0x1A;
  1: return ttdall_cc + 0x6C;
  1: return ttdall_cc + 0x6D;
  1: return ttdall_cc + 0x71;
}

switch (FEAT_TRAINS, SELF, gondola_12_xx_colour_mapping,
  cargo_subtype + (enable_cc_default * 1024 * (cargo_subtype == 0)))
{
  0: gondola_12_xx_random;
  1: return ttdall_cc + 0x1A;
  2: return ttdall_cc + 0x6C;
  3: return ttdall_cc + 0x6D;
  4: return ttdall_cc + 0x71;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, gondola_12_xx_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_1A);
  2: return string(STR_REFIT_TTD_6C);
  3: return string(STR_REFIT_TTD_6D);
  4: return string(STR_REFIT_TTD_71);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, gondola_12_xx_cargo_capacity,
  cargo_type_in_veh)
{
  COAL: return 53;
  GOOD: return 69;
  RCYC: return 33;
  FERT: return 53;
  WOOD: return 60;
  WDPR: return 60;
        return 60;
}

wagon_running_cost(gondola_12_xx, 10)

item (FEAT_TRAINS, gondola_12_xx, 295) {
  property {
    name: string(STR_NAME_GONDOLA_12_XX);
    vehicle_dates(1935, 1941, 22, 10, 8, 2)
    vehicle_wagon(23, 120)
    vehicle_wagon_cargo(60, 20)
    cargo_allow_refit: [COAL, FERT, WDPR, AORE, CORE, IORE, BDMT, BRCK, CLAY, GRVL, LIME, POTA, SAND, STEL, SULP, WOOD, SCMT, MNO2, PORE, COPR, NITR, SCMT]; // GOOD, RCYC, WOOD,
  }
  graphics {
    default: gondola_12_xx_sprites;
    purchase: gondola_12_xx_purchase_sprites;
    running_cost_factor: gondola_12_xx_running_cost_factor;
    cargo_subtype_text: gondola_12_xx_cargo_subtype_text;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    cargo_capacity: gondola_12_xx_cargo_capacity;
    colour_mapping: gondola_12_xx_colour_mapping;
    additional_text: return string(STR_PURCHASE_HINT_WAGON,
                                   60, 67,
                                   string(STR_PURCHASE_HINT_LOADING_SPEED_3TIC),
                                   string(STR_PURCHASE_HINT_AGING_PERIOD_3_1),
                                   string(STR_PURCHASE_HINT_WAGON_TYPE_GONDOLA_4AXLE),
                                   string(STR_PURCHASE_HINT_FROMTO, 1935, 1941),
                                   string(STR_PURCHASE_HINT_FACTORY_URALVAGONZAVOD));
  }
}

long_name_template(gondola_12_xx, STR_LONGNAME_GONDOLA_12_XX)
