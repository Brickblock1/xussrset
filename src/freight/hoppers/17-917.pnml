 // 17_917_hopper

#define IMAGEFILE  "src/freight/hoppers/17-917.png"
purchase_sprites(hopper_17_917, 0, 0)
tanker_layout_template(hopper_17_917, 10, 32, 40)
#undef IMAGEFILE
long_vehicle_RND(hopper_17_917, hopper_17_917_sprites_start)

random_switch (FEAT_TRAINS, SELF, hopper_17_917_random, 0 )
{
  independent: hopper_17_917_sprites_start;
  1: return ttdall_cc + 0x62;
  1: return ttdall_cc + 0x53;
  1: return ttdall_cc + 0x59;
  1: return ttdall_cc + 0x04;
}

switch (FEAT_TRAINS, SELF, hopper_17_917_colour_mapping,
  cargo_subtype + (enable_cc_default * 1024 * (cargo_subtype == 0)))
{
  0: hopper_17_917_random;
  1: return ttdall_cc + 0x62;
  2: return ttdall_cc + 0x53;
  3: return ttdall_cc + 0x59;
  4: return ttdall_cc + 0x04;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, hopper_17_917_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_62);
  2: return string(STR_REFIT_TTD_53);
  3: return string(STR_REFIT_TTD_59);
  4: return string(STR_REFIT_TTD_04);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, hopper_17_917_cargo_capacity,
[  STORE_TEMP(58, 0),  // т
   STORE_TEMP(80, 1),  // м³
   STORE_TEMP(0, 2),   // м²
   STORE_TEMP(0, 3),   // палетомест
   STORE_TEMP(10, 4)]) // шаблон
{ hopper_cargo_capacity; }

switch (FEAT_TRAINS, SELF, hopper_17_917_running_cost_factor,
[  STORE_TEMP(0, 0),            // Моторы
   STORE_TEMP(0, 1),            // Бригада
   STORE_TEMP(21, 2),       		/* 32*2/3 */	// Износ
   STORE_TEMP(0, 3),            // Сопровождение
   STORE_TEMP(11, 4),         		/* 32/3 */	// ТО
   STORE_TEMP(0, 5),            // Сертификация

   STORE_TEMP(120, 6),       // Скорость
   STORE_TEMP(35, 7),        // Тара
   STORE_TEMP(93, 8)])    		/* 35+58 */	// Максимальная масса
{ all_running_cost_factor; } // 30

switch (FEAT_TRAINS, SELF, hopper_17_917_loading_speed,
[  STORE_TEMP(0, 0),    // определяется элеватором (4 больших люка)
   STORE_TEMP(6, 1),    // 4 малых разгрузочных люков
   STORE_TEMP(0, 2),    // верхняя загрузка не ограничена люками
   STORE_TEMP(3*4, 3)]) // нижняя разгрузка ограничена 3 единицами груза на люк
{ all_wagons_hopper_loading_speed; }

hint_wagon_with_uspeed_changeable_factory_name(hopper_17_917,
     58, 80,
     STR_PURCHASE_HINT_LOADING_SPEED_4TIC,
     STR_PURCHASE_HINT_LOADING_SPEED_6TIC,
     STR_PURCHASE_HINT_AGING_PERIOD_3_1,
     STR_PURCHASE_HINT_WAGON_TYPE_BUNKER,
     1982, 1984,
     fact_stakhanovcw())

item (FEAT_TRAINS, hopper_17_917, 618) {
  property {
    name: string(STR_MODEL_NUMBER2, 17, 917);
    vehicle_dates(1982, 1984, 30, 10, 8, 5)
    vehicle_wagon(30, 120)
    cargo_allow_refit: [cargo_all_pm_bunkerlist()];
  }
  graphics {
    default: hopper_17_917_sprites;
    purchase: hopper_17_917_purchase_sprites;
    running_cost_factor: hopper_17_917_running_cost_factor;
    articulated_part: articulated_part_dummy2;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    colour_mapping: hopper_17_917_colour_mapping;
    loading_speed: hopper_17_917_loading_speed;
    additional_text: hopper_17_917_additional_text;
    cargo_capacity: hopper_17_917_cargo_capacity;
    cargo_subtype_text: hopper_17_917_cargo_subtype_text;
  }
}

long_name_template(hopper_17_917, STR_LONGNAME_BUNKER_17_917)
