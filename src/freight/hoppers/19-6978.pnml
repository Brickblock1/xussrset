// 19_6978_hopper

#define IMAGEFILE  "src/freight/hoppers/19-6978.png"
purchase_sprites(hopper_19_6978, 0, 0)
tanker_layout_template(hopper_19_6978, 6, 32, 40)
#undef IMAGEFILE

switch (FEAT_TRAINS, SELF, hopper_19_6978_sprites_start_sp,
   position_in_articulated_veh % 2)
{
   1: hopper_19_6978_sprites_left;
   0: hopper_19_6978_sprites_right;
      hopper_19_6978_sprites_start;  // never train
}

long_vehicle_sp(hopper_19_6978)

switch (FEAT_TRAINS, SELF, hopper_19_6978_random,
[ set_offset_to(-position_in_articulated_veh + 1),
   prev_vehicle_randombits() & 0x0F])
{
    0..5: return ttdall_cc + 0x71;
   6..11: return ttdall_cc + 0x7B;
  12..14: return ttdall_cc + 0x4B;
          return ttdall_cc + 0x06;
}

switch (FEAT_TRAINS, SELF, hopper_19_6978_colour_mapping,
[ set_offset_to(-position_in_articulated_veh),
   prev_vehicle_cargo_subtype()])
{
  0: hopper_19_6978_random;
  1: return ttdall_cc + 0x71;
  2: return ttdall_cc + 0x7B;
  3: return ttdall_cc + 0x4B;
  4: return ttdall_cc + 0x06;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, hopper_19_6978_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_71);
  2: return string(STR_REFIT_TTD_7B);
  3: return string(STR_REFIT_TTD_4B);
  4: return string(STR_REFIT_TTD_06);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, hopper_19_6978_articulated_part,
  extra_callback_info1)
{
  1: return wagon_part2;
     return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, hopper_19_6978_cargo_capacity,
[  STORE_TEMP(114, 0),  // т
   STORE_TEMP(160, 1),  // м³
   STORE_TEMP(0, 2),    // м²
   STORE_TEMP(0, 3),    // палетомест
   STORE_TEMP(12, 4)])  // шаблон
{ hopper_cargo_capacity; }

switch (FEAT_TRAINS, SELF, hopper_19_6978_running_cost_factor,
[  STORE_TEMP(0, 0),   // Моторы
   STORE_TEMP(0, 1),   // Бригада
   STORE_TEMP(60, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(40, 4),  // ТО
   STORE_TEMP(0, 5),   // Сертификация

   STORE_TEMP(120, 6),                  // Скорость
   STORE_TEMP(36, 7),                   // Тара
   STORE_TEMP(LOAD_TEMP(7) + 114, 8)])  // Максимальная масса
{ all_running_cost_factor; }

switch (FEAT_TRAINS, SELF, hopper_19_6978_loading_speed,
[  STORE_TEMP(0, 0),      // определяется элеватором (8 больших люков)
   STORE_TEMP(0, 1),      // определяется 8 большими и 4 малыми разгрузочными люками
   STORE_TEMP(6*8, 2),    // верхняя загрузка ограничена 6 единицами груза на люк
   STORE_TEMP(4*10, 3)])  // нижняя разгрузка ограничена 4 единицами груза на люк
{ all_wagons_hopper_loading_speed; }

hint_wagon_with_uspeed_noto(hopper_19_6978,
     114, 160,
     calc_loading(114 / (6*8)),
     calc_loading(114 / (4*10)),
     STR_PURCHASE_HINT_AGING_PERIOD_3_1,
     STR_PURCHASE_HINT_WAGON_TYPE_2HOPPER,
     2019,
     string(STR_PURCHASE_HINT_FACTORY_TIKHVIN_CBP))

item (FEAT_TRAINS, hopper_19_6978, 694) {
  property {
    name: string(STR_MODEL_NUMBER2, 19, 6978);
    vehicle_dates(2019, 2050, 40, 15, 6, 150)
    vehicle_wagon(36, 120)
    cargo_allow_refit: [cargo_all_grain_hopperlist()];
  }
  graphics {
                default: hopper_19_6978_sprites;
               purchase: hopper_19_6978_purchase_sprites;
    running_cost_factor: hopper_19_6978_running_cost_factor;
       articulated_part: hopper_19_6978_articulated_part;
         colour_mapping: hopper_19_6978_colour_mapping;
     cargo_subtype_text: hopper_19_6978_cargo_subtype_text;
          loading_speed: hopper_19_6978_loading_speed;
             refit_cost: return 0 | CB_RESULT_AUTOREFIT;
        additional_text: hopper_19_6978_additional_text;
         cargo_capacity: hopper_19_6978_cargo_capacity;
  }
}

long_name_template(hopper_19_6978, STR_LONGNAME_HOPPER_19_6978)
