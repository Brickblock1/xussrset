 // 19_923_hopper

#define IMAGEFILE  "src/freight/hoppers/19-923.png"
purchase_sprites(hopper_19_923, 0, 0)
tanker_layout_template(hopper_19_923, 8, 32, 40)
#undef IMAGEFILE
long_vehicle_RND(hopper_19_923, hopper_19_923_sprites_start)

switch (FEAT_TRAINS, SELF, hopper_19_923_random,
[ set_offset_to(1),
   prev_vehicle_randombits() & 0x03])
{
  0: return ttdall_cc + 0x62;
  1: return ttdall_cc + 0x53;
  2: return ttdall_cc + 0x59;
     return ttdall_cc + 0x95;
}

switch (FEAT_TRAINS, SELF, hopper_19_923_colour_mapping,
  cargo_subtype)
{
  0: hopper_19_923_random;
  1: return ttdall_cc + 0x62;
  2: return ttdall_cc + 0x53;
  3: return ttdall_cc + 0x59;
  4: return ttdall_cc + 0x95;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, hopper_19_923_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_62);
  2: return string(STR_REFIT_TTD_53);
  3: return string(STR_REFIT_TTD_59);
  4: return string(STR_REFIT_TTD_96);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, hopper_19_923_cargo_capacity,
[  STORE_TEMP(70, 0), // т
   STORE_TEMP(81, 1), // м³
   STORE_TEMP(0, 2), // м²
   STORE_TEMP(0, 3), // палетомест
   STORE_TEMP(8, 4)]) // шаблон
{ hopper_cargo_capacity; }

switch (FEAT_TRAINS, SELF, hopper_19_923_running_cost_factor,
[  STORE_TEMP(0, 0),            // Моторы
   STORE_TEMP(0, 1),            // Бригада
   STORE_TEMP(24, 2),                       /* 36*2/3 */        // Износ
   STORE_TEMP(0, 3),            // Сопровождение
   STORE_TEMP(12, 4),                         /* 36/3 */        // ТО
   STORE_TEMP(0, 5),            // Сертификация

   STORE_TEMP(120, 6),       // Скорость
   STORE_TEMP(23, 7),        // Тара
   STORE_TEMP(93, 8)])                    /* 23+70 */        // Максимальная масса
{ all_running_cost_factor; } // 36

switch (FEAT_TRAINS, SELF, hopper_19_923_loading_speed,
[  STORE_TEMP(0, 0), // определяется элеватором (4 больших люка)
   STORE_TEMP(3, 1), // 4 больших люка
   STORE_TEMP(0, 2),    // верхняя загрузка не ограничена люками
   STORE_TEMP(6*4, 3)]) // нижняя разгрузка ограничена 6 единицами груза на люк
{ all_wagons_hopper_loading_speed; }

hint_wagon_with_uspeed_noto(hopper_19_923,
     70, 81,
     STR_PURCHASE_HINT_LOADING_SPEED_5TIC,
     STR_PURCHASE_HINT_LOADING_SPEED_5TIC,
     STR_PURCHASE_HINT_AGING_PERIOD_3_1,
     STR_PURCHASE_HINT_WAGON_TYPE_HOPPER,
     1988,
     fact_stakhanovcw())

item (FEAT_TRAINS, hopper_19_923, 531) {
  property {
    name: string(STR_MODEL_NUMBER2, 19, 923);
    vehicle_dates(1988, 2050, 26, 10, 7, 92)
    vehicle_wagon(23, 120)
    cargo_allow_refit: [cargo_all_fert_hopperlist()];
  }
  graphics {
    default: hopper_19_923_sprites;
    purchase: hopper_19_923_purchase_sprites;
    articulated_part: articulated_part_dummy1;
    running_cost_factor: hopper_19_923_running_cost_factor;
    colour_mapping: hopper_19_923_colour_mapping;
    cargo_subtype_text: hopper_19_923_cargo_subtype_text;
    cargo_capacity: hopper_19_923_cargo_capacity;
    loading_speed: hopper_19_923_loading_speed;
    refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    additional_text: hopper_19_923_additional_text;
  }
}

long_name_template(hopper_19_923, STR_LONGNAME_HOPPER_19_923)
