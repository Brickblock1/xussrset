 /// graphics definition

// Паровоз без фонарей
#define steam_sprites0(n, name, x, y)                                               \
spriteset (name##_notpowered_sprites_1_left, IMAGEFILE)                             \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_sprites_2_left, IMAGEFILE)                             \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_notpowered_sprites_3_left, IMAGEFILE)                             \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_notpowered_sprites_4_left, IMAGEFILE)                             \
{ s##n##_template(x, y+201, 0) }                                                    \
switch (FEAT_TRAINS, SELF, name##_sprites_start2, LOAD_TEMP(3))                     \
{ 0: name##_notpowered_sprites_1_left;                                              \
  1: name##_notpowered_sprites_2_left;                                              \
  2: name##_notpowered_sprites_3_left;                                              \
     name##_notpowered_sprites_4_left; }                                            \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_start2;                                                         \
  1: name##_sprites_start2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_start1;                                               \
          128: name##_sprites_start1; }                                             \

// Паровоз с 1 фонарём
#define steam_sprites1(n, name, x, y)                                               \
spriteset (name##_notpowered_sprites_1_left, IMAGEFILE)                             \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_sprites_2_left, IMAGEFILE)                             \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_notpowered_sprites_3_left, IMAGEFILE)                             \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_notpowered_sprites_4_left, IMAGEFILE)                             \
{ s##n##_template(x, y+201, 0) }                                                    \
spriteset (name##_traveling_sprites_1_left, IMAGEFILE)                              \
{ s##n##_template(x, y+268, 0) }                                                    \
spriteset (name##_traveling_sprites_2_left, IMAGEFILE)                              \
{ s##n##_template(x, y+335, 0) }                                                    \
spriteset (name##_traveling_sprites_3_left, IMAGEFILE)                              \
{ s##n##_template(x, y+402, 0) }                                                    \
spriteset (name##_traveling_sprites_4_left, IMAGEFILE)                              \
{ s##n##_template(x, y+469, 0) }                                                    \
spritegroup name##_normal_sprites_1_left                                            \
{ loading: name##_notpowered_sprites_1_left;                                        \
   loaded: name##_traveling_sprites_1_left; }                                       \
spritegroup name##_normal_sprites_2_left                                            \
{ loading: name##_notpowered_sprites_2_left;                                        \
   loaded: name##_traveling_sprites_2_left; }                                       \
spritegroup name##_normal_sprites_3_left                                            \
{ loading: name##_notpowered_sprites_3_left;                                        \
   loaded: name##_traveling_sprites_3_left; }                                       \
spritegroup name##_normal_sprites_4_left                                            \
{ loading: name##_notpowered_sprites_4_left;                                        \
   loaded: name##_traveling_sprites_4_left; }                                       \
switch (FEAT_TRAINS, SELF, name##_notpowered_sprites_left, LOAD_TEMP(3))            \
{ 0: name##_notpowered_sprites_1_left;                                              \
  1: name##_notpowered_sprites_2_left;                                              \
  2: name##_notpowered_sprites_3_left;                                              \
     name##_notpowered_sprites_4_left; }                                            \
switch (FEAT_TRAINS, SELF, name##_normal_sprites_left, LOAD_TEMP(3))                \
{ 0: name##_normal_sprites_1_left;                                                  \
  1: name##_normal_sprites_2_left;                                                  \
  2: name##_normal_sprites_3_left;                                                  \
     name##_normal_sprites_4_left; }                                                \
switch (FEAT_TRAINS, SELF, name##_sprites_start2,                                   \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_start2;                                                         \
  1: name##_sprites_start2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_start1;                                               \
          128: name##_sprites_start1; }                                             \

// Паровоз
#define steam_sprites(n, name, x, y)                                                \
spriteset (name##_notpowered_sprites_1_left, IMAGEFILE)                             \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_sprites_2_left, IMAGEFILE)                             \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_notpowered_sprites_3_left, IMAGEFILE)                             \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_notpowered_sprites_4_left, IMAGEFILE)                             \
{ s##n##_template(x, y+201, 0) }                                                    \
spriteset (name##_loading_sprites_1_left, IMAGEFILE)                                \
{ s##n##_template(x, y+268, 0) }                                                    \
spriteset (name##_loading_sprites_2_left, IMAGEFILE)                                \
{ s##n##_template(x, y+335, 0) }                                                    \
spriteset (name##_loading_sprites_3_left, IMAGEFILE)                                \
{ s##n##_template(x, y+402, 0) }                                                    \
spriteset (name##_loading_sprites_4_left, IMAGEFILE)                                \
{ s##n##_template(x, y+469, 0) }                                                    \
spriteset (name##_traveling_sprites_1_left, IMAGEFILE)                              \
{ s##n##_template(x, y+536, 0) }                                                    \
spriteset (name##_traveling_sprites_2_left, IMAGEFILE)                              \
{ s##n##_template(x, y+603, 0) }                                                    \
spriteset (name##_traveling_sprites_3_left, IMAGEFILE)                              \
{ s##n##_template(x, y+670, 0) }                                                    \
spriteset (name##_traveling_sprites_4_left, IMAGEFILE)                              \
{ s##n##_template(x, y+737, 0) }                                                    \
spritegroup name##_normal_sprites_1_left                                            \
{ loading: name##_loading_sprites_1_left;                                           \
   loaded: name##_traveling_sprites_1_left; }                                       \
spritegroup name##_normal_sprites_2_left                                            \
{ loading: name##_loading_sprites_2_left;                                           \
   loaded: name##_traveling_sprites_2_left; }                                       \
spritegroup name##_normal_sprites_3_left                                            \
{ loading: name##_loading_sprites_3_left;                                           \
   loaded: name##_traveling_sprites_3_left; }                                       \
spritegroup name##_normal_sprites_4_left                                            \
{ loading: name##_loading_sprites_4_left;                                           \
   loaded: name##_traveling_sprites_4_left; }                                       \
switch (FEAT_TRAINS, SELF, name##_notpowered_sprites_left, LOAD_TEMP(3))            \
{ 0: name##_notpowered_sprites_1_left;                                              \
  1: name##_notpowered_sprites_2_left;                                              \
  2: name##_notpowered_sprites_3_left;                                              \
     name##_notpowered_sprites_4_left; }                                            \
switch (FEAT_TRAINS, SELF, name##_normal_sprites_left, LOAD_TEMP(3))                \
{ 0: name##_normal_sprites_1_left;                                                  \
  1: name##_normal_sprites_2_left;                                                  \
  2: name##_normal_sprites_3_left;                                                  \
     name##_normal_sprites_4_left; }                                                \
switch (FEAT_TRAINS, SELF, name##_sprites_start2,                                   \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_start2;                                                         \
  1: name##_sprites_start2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_start1;                                               \
          128: name##_sprites_start1; }                                             \

// Тендер
#define tender_sprites(n, name, x, y)        \
spriteset (name##_sprites_start, IMAGEFILE)  \
{ s##n##_template(x, y, 0) }                 \

// 1-о секционный тепловоз симметричный
#define diesel1_sprites(n, name, x, y)                                              \
spriteset (name##_notpowered_sprites_start, IMAGEFILE)                              \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_start, IMAGEFILE)                                 \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_start, IMAGEFILE)                               \
{ s##n##_template(x, y+134, 0) }                                                    \
spritegroup name##_normal_sprites_start                                             \
{ loading: name##_loading_sprites_start;                                            \
   loaded: name##_traveling_sprites_start; }                                        \
switch (FEAT_TRAINS, SELF, name##_sprites_start2,                                   \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_start;                                                   \
     name##_notpowered_sprites_start; }                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_start2;                                                         \
  1: name##_sprites_start2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_start1;                                               \
          128: name##_sprites_start1; }                                             \

// 1-о секционный тепловоз несимметричный
#define diesel1r_sprites(n, name, x, y)                                             \
spriteset (name##_notpowered_sprites_left, IMAGEFILE)                               \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_left, IMAGEFILE)                                  \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_left, IMAGEFILE)                                \
{ s##n##_template(x, y+134, 0) }                                                    \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left;                                             \
   loaded: name##_traveling_sprites_left; }                                         \
spriteset (name##_notpowered_sprites_right, IMAGEFILE)                              \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_loading_sprites_right, IMAGEFILE)                                 \
{ s##n##_r_template(x+415, y+67, 0) }                                               \
spriteset (name##_traveling_sprites_right, IMAGEFILE)                               \
{ s##n##_r_template(x+415, y+134, 0) }                                              \
spritegroup name##_normal_sprites_right                                             \
{ loading: name##_loading_sprites_right;                                            \
   loaded: name##_traveling_sprites_right; }                                        \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right2,                                   \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_right;                                                   \
     name##_notpowered_sprites_right; }                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_right2;                                                         \
  1: name##_sprites_right2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_right1;                                               \
          128: name##_sprites_right1; }                                             \

// 2-х секционный тепловоз или 1-о секционный тепловоз несимметричный без фонарей сзади
#define diesel2_sprites(n, name, x, y)                                              \
spriteset (name##_notpowered_sprites_left, IMAGEFILE)                               \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_left, IMAGEFILE)                                  \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_left, IMAGEFILE)                                \
{ s##n##_template(x, y+134, 0) }                                                    \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left;                                             \
   loaded: name##_traveling_sprites_left; }                                         \
spriteset (name##_sprites_right, IMAGEFILE)                                         \
{ s##n##_r_template(x, y, 0) }                                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \

// 2-х секционный тепловоз без прожектора или 1-о секционный тепловоз несимметричный без фонарей сзади
#define diesel2nol_sprites(n, name, x, y)                                           \
spriteset (name##_notpowered_sprites_left, IMAGEFILE)                               \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_normal_sprites_left, IMAGEFILE)                                   \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_sprites_right, IMAGEFILE)                                         \
{ s##n##_r_template(x, y, 0) }                                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  (position_in_consist == 0) && (!vehicle_is_in_depot))                             \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \

// 1-осекционный электровоз с 1 пантографом симметричный
#define electric1_1_sprites(n, name, x, y)                                          \
spriteset (name##_notpowered_sprites_left, IMAGEFILE)                               \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_up_sprites_left, IMAGEFILE)                            \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_loading_sprites_left, IMAGEFILE)                                  \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_traveling_sprites_left, IMAGEFILE)                                \
{ s##n##_template(x, y+201, 0) }                                                    \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left;                                             \
   loaded: name##_traveling_sprites_left; }                                         \
spriteset (name##_notpowered_sprites_right, IMAGEFILE)                              \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_notpowered_up_sprites_right, IMAGEFILE)                           \
{ s##n##_r_template(x, y+67, 0) }                                                   \
switch (FEAT_TRAINS, SELF, name##_sprites_right,                                    \
  (!(vehicle_is_not_powered || vehicle_is_in_depot)))                               \
{ 1: name##_notpowered_up_sprites_right;                                            \
     name##_notpowered_sprites_right; }                                             \
switch (FEAT_TRAINS, SELF, name##_sprites_left3,                                    \
  position_in_consist == 0)                                                         \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_up_sprites_left; }                                           \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  vehicle_is_not_powered || vehicle_is_in_depot)                                    \
{ 1: name##_notpowered_sprites_left;                                                \
     name##_sprites_left3; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \

// 1-осекционный электровоз с 2 пантографами симметричный
#define electric1_2_sprites(n, name, x, y)                                          \
spriteset (name##_notpowered_sprites_left_d_down, IMAGEFILE)                        \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_left_l1_all_up, IMAGEFILE)                        \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_left_l1_2_up, IMAGEFILE)                        \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_loading_sprites_left_d_all_up, IMAGEFILE)                         \
{ s##n##_template(x+415, y, 0) }                                                    \
spriteset (name##_notpowered_sprites_left_d_2_up, IMAGEFILE)                        \
{ s##n##_template(x+415, y+67, 0) }                                                 \
spriteset (name##_traveling_sprites_left_l1_all_up, IMAGEFILE)                      \
{ s##n##_template(x+415, y+134, 0) }                                                \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left_l1_all_up;                                   \
   loaded: name##_traveling_sprites_left_l1_all_up; }                               \
switch (FEAT_TRAINS, SELF, name##_sprites_start2,                                   \
  ((LOAD_TEMP(1) > threshold_of_speed()) + (position_in_consist > 0) * 2 + 1) *     \
  (!(vehicle_is_not_powered || vehicle_is_in_depot)))                               \
{ 1: name##_normal_sprites_left;                                                    \
  2: name##_traveling_sprites_left_l1_2_up;                                         \
  3: name##_loading_sprites_left_d_all_up;                                          \
  4: name##_notpowered_sprites_left_d_2_up;                                         \
     name##_notpowered_sprites_left_d_down; }                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_start2;                                                         \
  1: name##_sprites_start2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_start,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_start1;                                               \
          128: name##_sprites_start1; }                                             \

// 1-осекционный электровоз с 2 пантографами несимметричный
#define electric1r_2_sprites(n, name, x, y)                                         \
spriteset (name##_notpowered_sprites_left_d_down, IMAGEFILE)                        \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_sprites_left_d_2_up, IMAGEFILE)                        \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_loading_sprites_left_l1_all_up, IMAGEFILE)                        \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_traveling_sprites_left_l1_all_up, IMAGEFILE)                      \
{ s##n##_template(x, y+201, 0) }                                                    \
spriteset (name##_traveling_sprites_left_l1_2_up, IMAGEFILE)                        \
{ s##n##_template(x, y+268, 0) }                                                    \
spriteset (name##_loading_sprites_left_d_all_up, IMAGEFILE)                         \
{ s##n##_template(x+415, y, 0) }                                                    \
spriteset (name##_notpowered_sprites_right_d_down, IMAGEFILE)                       \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_loading_sprites_right_d_all_up, IMAGEFILE)                        \
{ s##n##_r_template(x+415, y, 0) }                                                  \
spriteset (name##_notpowered_sprites_right_d_1_up, IMAGEFILE)                       \
{ s##n##_r_template(x+415, y+67, 0) }                                               \
spriteset (name##_loading_sprites_right_l2_all_up, IMAGEFILE)                       \
{ s##n##_r_template(x+415, y+134, 0) }                                              \
spriteset (name##_traveling_sprites_right_l2_all_up, IMAGEFILE)                     \
{ s##n##_r_template(x+415, y+201, 0) }                                              \
spriteset (name##_traveling_sprites_right_l2_1_up, IMAGEFILE)                       \
{ s##n##_r_template(x+415, y+268, 0) }                                              \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left_l1_all_up;                                   \
   loaded: name##_traveling_sprites_left_l1_all_up; }                               \
spritegroup name##_normal_sprites_right                                             \
{ loading: name##_loading_sprites_right_l2_all_up;                                  \
   loaded: name##_traveling_sprites_right_l2_all_up; }                              \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  ((LOAD_TEMP(1) > threshold_of_speed()) + (position_in_consist > 0) * 2 + 1) *     \
  (!(vehicle_is_not_powered || vehicle_is_in_depot)))                               \
{ 1: name##_normal_sprites_left;                                                    \
  2: name##_traveling_sprites_left_l1_2_up;                                         \
  3: name##_loading_sprites_left_d_all_up;                                          \
  4: name##_notpowered_sprites_left_d_2_up;                                         \
     name##_notpowered_sprites_left_d_down; }                                       \
switch (FEAT_TRAINS, SELF, name##_sprites_right2,                                   \
  ((LOAD_TEMP(1) > threshold_of_speed()) + (position_in_consist > 0) * 2 + 1) *     \
  (!(vehicle_is_not_powered || vehicle_is_in_depot)))                               \
{ 1: name##_normal_sprites_right;                                                   \
  2: name##_traveling_sprites_right_l2_1_up;                                        \
  3: name##_loading_sprites_right_d_all_up;                                         \
  4: name##_notpowered_sprites_right_d_1_up;                                        \
     name##_notpowered_sprites_right_d_down; }                                      \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_right2;                                                         \
  1: name##_sprites_right2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_right1;                                               \
          128: name##_sprites_right1; }                                             \

// Формат имени - фонари (d - выключены, lb - буферные, lmb - все, lm - верхний), пантографы (down, 1, 2, all). Варианты, которые не первые, не требуют рандомизации
// 1-осекционный электровоз с 2 пантографами несимметричный, поднят только второй, гашением габаритов при эксплуатации после моторного думпкара
#define electric1r_1_2b_sprites(n, name, x, y)                                      \
spriteset (name##_notpowered_sprites_left_d_down, IMAGEFILE)                        \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_notpowered_sprites_left_d_2_up, IMAGEFILE)                        \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_loading_sprites_left_lb_2_up, IMAGEFILE)                          \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_traveling_sprites_left_lmb_2_up, IMAGEFILE)                       \
{ s##n##_template(x, y+201, 0) }                                                    \
spriteset (name##_traveling_sprites_left_lm_2_up, IMAGEFILE)                        \
{ s##n##_template(x, y+268, 0) }                                                    \
spriteset (name##_notpowered_sprites_right_d_down, IMAGEFILE)                       \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_notpowered_sprites_right_d_1_up, IMAGEFILE)                       \
{ s##n##_r_template(x+415, y+67, 0) }                                               \
spriteset (name##_loading_sprites_right_lb_1_up, IMAGEFILE)                         \
{ s##n##_r_template(x+415, y+134, 0) }                                              \
spriteset (name##_traveling_sprites_right_lmb_1_up, IMAGEFILE)                      \
{ s##n##_r_template(x+415, y+201, 0) }                                              \
spriteset (name##_traveling_sprites_right_lm_1_up, IMAGEFILE)                       \
{ s##n##_r_template(x+415, y+268, 0) }                                              \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left_lb_2_up;                                     \
   loaded: name##_traveling_sprites_left_lmb_2_up; }                                \
spritegroup name##_normal_sprites_right                                             \
{ loading: name##_loading_sprites_right_lb_1_up;                                    \
   loaded: name##_traveling_sprites_right_lmb_1_up; }                               \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  !(vehicle_is_not_powered || vehicle_is_in_depot))                                 \
{ 1: name##_normal_sprites_left;                                                    \
     name##_notpowered_sprites_left_d_down; }                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left2;                                                          \
  1: name##_sprites_left2; }                                                        \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left_first,                        \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right2,                                   \
  (!(vehicle_is_not_powered || vehicle_is_in_depot)))                               \
{ 1: name##_normal_sprites_right;                                                   \
     name##_notpowered_sprites_right_d_down; }                                      \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_right2;                                                         \
  1: name##_sprites_right2; }                                                       \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right_first,                       \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_right1;                                               \
          128: name##_sprites_right1; }                                             \
spritegroup name##_normal_sprites_left_notfirst_light                               \
{ loading: name##_notpowered_sprites_left_d_2_up;                                   \
   loaded: name##_traveling_sprites_left_lm_2_up; }                                 \
spritegroup name##_normal_sprites_right_notfirst_light                              \
{ loading: name##_notpowered_sprites_right_d_1_up;                                  \
   loaded: name##_traveling_sprites_right_lm_1_up; }                                \

// Так как vehicle_is_powered и vehicle_is_not_powered не определён для частей ARV кроме первой, для правой
// секции проверка наличия мощости идёт через var 61 (FE бит 6)

// 2-хсекционный электровоз с 2 пантографами
#define electric2_2_sprites(n, name, x, y)                                          \
spriteset (name##_notpowered_sprites_left_all_up, IMAGEFILE)                        \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_left_all_up, IMAGEFILE)                           \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_left_2_up, IMAGEFILE)                           \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_notpowered_sprites_left_down, IMAGEFILE)                          \
{ s##n##_template(x+415, y, 0) }                                                    \
spriteset (name##_notpowered_sprites_left_2_up, IMAGEFILE)                          \
{ s##n##_template(x+415, y+134, 0) }                                                \
spriteset (name##_notpowered_sprites_right_all_up, IMAGEFILE)                       \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_notpowered_sprites_right_down, IMAGEFILE)                         \
{ s##n##_r_template(x+415, y, 0) }                                                  \
spriteset (name##_notpowered_sprites_right_1_up, IMAGEFILE)                         \
{ s##n##_r_template(x+415, y+67, 0) }                                               \
spritegroup name##_normal_sprites_1st_left                                          \
{ loading: name##_loading_sprites_left_all_up;                                      \
   loaded: name##_traveling_sprites_left_2_up; }                                    \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  (LOAD_TEMP(1) > threshold_of_speed()) +                                           \
   (position_in_consist > 0) * 2)                                                   \
{ 0..1: name##_normal_sprites_1st_left;                                             \
     2: name##_notpowered_sprites_left_all_up;                                      \
        name##_notpowered_sprites_left_2_up; }                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_left_notpowered,                          \
[  set_offset_to(-position_in_articulated_veh), prev_vehicle_is_powered()])         \
{ 0: name##_notpowered_sprites_left_down;                                           \
     name##_sprites_left2; }                                                        \
switch (FEAT_TRAINS, SELF, name##_sprites_left_depot, vehicle_is_in_depot)          \
{ 1: name##_notpowered_sprites_left_down;                                           \
     name##_sprites_left_notpowered; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right2,                                   \
  LOAD_TEMP(1) > threshold_of_speed())                                              \
{ 1: name##_notpowered_sprites_right_1_up;                                          \
     name##_notpowered_sprites_right_all_up; }                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_right_notpowered,                         \
[  set_offset_to(-position_in_articulated_veh), prev_vehicle_is_powered()])         \
{ 0: name##_notpowered_sprites_right_down;                                          \
     name##_sprites_right2; }                                                       \
switch (FEAT_TRAINS, SELF, name##_sprites_right_depot, vehicle_is_in_depot)         \
{ 1: name##_notpowered_sprites_right_down;                                          \
     name##_sprites_right_notpowered; }                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left_depot;                                                     \
  1: name##_sprites_left_depot; }                                                   \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_right_depot;                                                    \
  1: name##_sprites_right_depot; }                                                  \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_right1;                                               \
          128: name##_sprites_right1; }                                             \

// 2-хсекционный электровоз с 1 пантографом
#define electric2_1_sprites(n, name, x, y)                                          \
spriteset (name##_notpowered_sprites_left_up, IMAGEFILE)                            \
{ s##n##_template(x, y, 0) }                                                        \
spriteset (name##_loading_sprites_left_up, IMAGEFILE)                               \
{ s##n##_template(x, y+67, 0) }                                                     \
spriteset (name##_traveling_sprites_left_up, IMAGEFILE)                             \
{ s##n##_template(x, y+134, 0) }                                                    \
spriteset (name##_notpowered_sprites_left_down, IMAGEFILE)                          \
{ s##n##_template(x+415, y, 0) }                                                    \
spriteset (name##_traveling_sprites_left_down, IMAGEFILE)                           \
{ s##n##_template(x+415, y+134, 0) }                                                \
spriteset (name##_notpowered_sprites_right_up, IMAGEFILE)                           \
{ s##n##_r_template(x, y, 0) }                                                      \
spriteset (name##_notpowered_sprites_right_down, IMAGEFILE)                         \
{ s##n##_r_template(x+415, y, 0) }                                                  \
spritegroup name##_normal_sprites_left                                              \
{ loading: name##_loading_sprites_left_up;                                          \
   loaded: name##_traveling_sprites_left_up; }                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_left2,                                    \
  (LOAD_TEMP(1) > threshold_of_speed()) + (position_in_consist > 0) * 2)            \
{ 0: name##_normal_sprites_left;                                                    \
  1: name##_traveling_sprites_left_down;                                            \
  2: name##_notpowered_sprites_left_up;                                             \
     name##_notpowered_sprites_left_down; }                                         \
switch (FEAT_TRAINS, SELF, name##_sprites_left_notpowered,                          \
[  set_offset_to(-position_in_articulated_veh), prev_vehicle_is_powered()])         \
{ 0: name##_notpowered_sprites_left_down;                                           \
     name##_sprites_left2; }                                                        \
switch (FEAT_TRAINS, SELF, name##_sprites_left_depot, vehicle_is_in_depot)          \
{ 1: name##_notpowered_sprites_left_down;                                           \
     name##_sprites_left_notpowered; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right_notpowered,                         \
[  set_offset_to(-position_in_articulated_veh), prev_vehicle_is_powered()])         \
{ 0: name##_notpowered_sprites_right_down;                                          \
     name##_notpowered_sprites_right_up; }                                          \
switch (FEAT_TRAINS, SELF, name##_sprites_right_depot, vehicle_is_in_depot)         \
{ 1: name##_notpowered_sprites_right_down;                                          \
     name##_sprites_right_notpowered; }                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                             \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_left_depot;                                                     \
  1: name##_sprites_left_depot; }                                                   \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                              \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_left1;                                                \
          128: name##_sprites_left1; }                                              \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                            \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                   \
{ 1: name##_sprites_right_depot;                                                    \
  1: name##_sprites_right_depot; }                                                  \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right,                             \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))  \
{ independent: name##_sprites_right1;                                               \
          128: name##_sprites_right1; }                                             \

// 2-хсекционный электровоз с 3 пантографами и дизелем
#define electric2_3d_sprites(n, name, x, y)                                              \
/* Diesel */                                                                             \
spriteset (name##_loading_sprites_left_down, IMAGEFILE)                                  \
{ s##n##_template(x, y+201, 0) }                                                         \
spriteset (name##_traveling_sprites_left_down, IMAGEFILE)                                \
{ s##n##_template(x, y+268, 0) }                                                         \
spriteset (name##_notpowered_sprites_left_down, IMAGEFILE)                               \
{ s##n##_template(x+415, y, 0) }                                                         \
spriteset (name##_notpowered_sprites_right_down, IMAGEFILE)                              \
{ s##n##_r_template(x+415, y, 0) }                                                       \
spritegroup name##_normal_sprites_1st_left_None                                          \
{ loading: name##_loading_sprites_left_down;                                             \
   loaded: name##_traveling_sprites_left_down; }                                         \
switch (FEAT_TRAINS, SELF, name##_sprites_left_None,                                     \
  (position_in_consist == 0) * (!vehicle_is_in_depot))                                   \
{ 1: name##_normal_sprites_1st_left_None;                                                \
     name##_notpowered_sprites_left_down; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right_None, 0)                                 \
{ name##_notpowered_sprites_right_down; }                                                \
/* DC */                                                                                 \
spriteset (name##_notpowered_sprites_left_all_up, IMAGEFILE)                             \
{ s##n##_template(x, y, 0) }                                                             \
spriteset (name##_loading_sprites_left_all_up, IMAGEFILE)                                \
{ s##n##_template(x, y+67, 0) }                                                          \
spriteset (name##_traveling_sprites_left_2_up, IMAGEFILE)                                \
{ s##n##_template(x, y+134, 0) }                                                         \
spriteset (name##_notpowered_sprites_left_2_up, IMAGEFILE)                               \
{ s##n##_template(x+415, y+134, 0) }                                                     \
spriteset (name##_notpowered_sprites_right_all_up, IMAGEFILE)                            \
{ s##n##_r_template(x, y, 0) }                                                           \
spriteset (name##_notpowered_sprites_right_1_up, IMAGEFILE)                              \
{ s##n##_r_template(x+415, y+67, 0) }                                                    \
spritegroup name##_normal_sprites_1st_left_DC                                            \
{ loading: name##_loading_sprites_left_all_up;                                           \
   loaded: name##_traveling_sprites_left_2_up; }                                         \
switch (FEAT_TRAINS, SELF, name##_sprites_left_DC,                                       \
  ((LOAD_TEMP(1) > threshold_of_speed()) + (position_in_consist > 0) * 2 + 1) *          \
  (!vehicle_is_in_depot))                                                                \
{ 1..2: name##_normal_sprites_1st_left_DC;                                               \
     3: name##_notpowered_sprites_left_all_up;                                           \
     4: name##_notpowered_sprites_left_2_up;                                             \
     name##_notpowered_sprites_left_down; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right_DC,                                      \
  ((LOAD_TEMP(1) > threshold_of_speed()) + 1) * (!vehicle_is_in_depot))                  \
{ 1: name##_notpowered_sprites_right_all_up;                                             \
  2: name##_notpowered_sprites_right_1_up;                                               \
     name##_notpowered_sprites_right_down; }                                             \
/* AC */                                                                                 \
spriteset (name##_loading_sprites_left_AC, IMAGEFILE)                                    \
{ s##n##_template(x+415, y+201, 0) }                                                     \
spriteset (name##_notpowered_sprites_right_AC, IMAGEFILE)                                \
{ s##n##_r_template(x+415, y+268, 0) }                                                   \
spritegroup name##_normal_sprites_1st_left_AC                                            \
{ loading: name##_loading_sprites_left_AC;                                               \
   loaded: name##_traveling_sprites_left_down; }                                         \
switch (FEAT_TRAINS, SELF, name##_sprites_left_AC,                                       \
  (position_in_consist == 0) * (!vehicle_is_in_depot))                                   \
{ 1: name##_normal_sprites_1st_left_AC;                                                  \
     name##_notpowered_sprites_left_down; }                                              \
switch (FEAT_TRAINS, SELF, name##_sprites_right_AC, vehicle_is_in_depot)                 \
{ 0: name##_notpowered_sprites_right_AC;                                                 \
     name##_notpowered_sprites_right_down; }                                             \
/* Select + random */                                                                    \
is_ER3DC_ds(name##_sprites_left2d, name##_sprites_left_DC, name##_sprites_left_None)     \
is_ER25AC_ds(name##_sprites_left2, name##_sprites_left_AC, name##_sprites_left2d)        \
is_ER3DC_ds(name##_sprites_right2d, name##_sprites_right_DC, name##_sprites_right_None)  \
is_ER25AC_ds(name##_sprites_right2, name##_sprites_right_AC, name##_sprites_right2d)     \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left1,                                  \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                        \
{ 1: name##_sprites_left2;                                                               \
  1: name##_sprites_left2; }                                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_left,                                   \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))       \
{ independent: name##_sprites_left1;                                                     \
          128: name##_sprites_left1; }                                                   \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right1,                                 \
bitmask(TRIGGER_VEHICLE_SERVICE))                                                        \
{ 1: name##_sprites_right2;                                                              \
  1: name##_sprites_right2; }                                                            \
random_switch (FEAT_TRAINS, SELF, name##_sprites_right,                                  \
bitmask(TRIGGER_VEHICLE_UNLOAD_ALL, TRIGGER_VEHICLE_ANY_LOAD, TRIGGER_ALL_NEEDED))       \
{ independent: name##_sprites_right1;                                                    \
          128: name##_sprites_right1; }                                                  \

// Бустер
#define buster_sprites(n, name, x, y)                              \
spriteset (name##_sprites_left_g, IMAGEFILE)                       \
{ s##n##_template(x, y, 0) }                                       \
switch (FEAT_TRAINS, SELF, name##_sprites_left,                    \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])  \
{ name##_sprites_left_g; }                                         \
spriteset (name##_sprites_right_g, IMAGEFILE)                      \
{ s##n##_r_template(x, y, 0) }                                     \
switch (FEAT_TRAINS, SELF, name##_sprites_right,                   \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])  \
{ name##_sprites_right_g; }                                        \

// Бустер с 1 пантографом
// Предполагаем, что секций максимум две подряд, и предыдущая секция может иметь только такой же id, как и текущая секция
// для хранения используем регистр 4 - id текущей секции, 3 - id предыдущей секции)
#define buster_1_sprites(n, name, x, y)                                \
spriteset (name##_notpowered_sprites_left_g, IMAGEFILE)                \
{ s##n##_template(x, y, 0) }                                           \
switch (FEAT_TRAINS, SELF, name##_notpowered_sprites_left,             \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])      \
{ name##_notpowered_sprites_left_g; }                                  \
spriteset (name##_notpowered_sprites_right_g, IMAGEFILE)               \
{ s##n##_r_template(x, y, 0) }                                         \
switch (FEAT_TRAINS, SELF, name##_notpowered_sprites_right,            \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])      \
{ name##_notpowered_sprites_right_g; }                                 \
spriteset (name##_traveling_sprites_left_g, IMAGEFILE)                 \
{ s##n##_template(x, y+67, 0) }                                        \
switch (FEAT_TRAINS, SELF, name##_traveling_sprites_left,              \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])      \
{ name##_traveling_sprites_left_g; }                                   \
spriteset (name##_traveling_sprites_right_g, IMAGEFILE)                \
{ s##n##_r_template(x, y+67, 0) }                                      \
switch (FEAT_TRAINS, SELF, name##_traveling_sprites_right,             \
[ STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100)])      \
{ name##_traveling_sprites_right_g; }                                  \
switch (FEAT_TRAINS, SELF, name##_sprites_left_powered4,               \
[  set_offset_to(-position_in_articulated_veh-4),                      \
   prev_vehicle_is_powered() && (LOAD_TEMP(4) == LOAD_TEMP(3))])       \
{ 0: name##_notpowered_sprites_left;                                   \
     name##_traveling_sprites_left; }                                  \
switch (FEAT_TRAINS, SELF, name##_sprites_left_powered2,               \
[  set_offset_to(-position_in_articulated_veh-2),                      \
   STORE_TEMP(vehicle_type_id, 3),                                     \
   prev_vehicle_is_powered()])                                         \
{ 0: name##_sprites_left_powered4;                                     \
     name##_traveling_sprites_left; }                                  \
switch (FEAT_TRAINS, SELF, name##_sprites_left_powered0,               \
[  STORE_TEMP(vehicle_type_id, 4),                                     \
   set_offset_to(-position_in_articulated_veh),                        \
   prev_vehicle_is_powered()])                                         \
{ 0: name##_sprites_left_powered2;                                     \
     name##_traveling_sprites_left; }                                  \
switch (FEAT_TRAINS, SELF, name##_sprites_left, vehicle_is_in_depot)   \
{ 1: name##_notpowered_sprites_left;                                   \
     name##_sprites_left_powered0; }                                   \
switch (FEAT_TRAINS, SELF, name##_sprites_right_powered4,              \
[  set_offset_to(-position_in_articulated_veh-4),                      \
   prev_vehicle_is_powered() && (LOAD_TEMP(4) == LOAD_TEMP(3))])       \
{ 0: name##_notpowered_sprites_right;                                  \
     name##_traveling_sprites_right; }                                 \
switch (FEAT_TRAINS, SELF, name##_sprites_right_powered2,              \
[  set_offset_to(-position_in_articulated_veh-2),                      \
   STORE_TEMP(vehicle_type_id, 3),                                     \
   prev_vehicle_is_powered()])                                         \
{ 0: name##_sprites_right_powered4;                                    \
     name##_traveling_sprites_right; }                                 \
switch (FEAT_TRAINS, SELF, name##_sprites_right_powered0,              \
[  STORE_TEMP(vehicle_type_id, 4),                                     \
   set_offset_to(-position_in_articulated_veh),                        \
   prev_vehicle_is_powered()])                                         \
{ 0: name##_sprites_right_powered2;                                    \
     name##_traveling_sprites_right; }                                 \
switch (FEAT_TRAINS, SELF, name##_sprites_right, vehicle_is_in_depot)  \
{ 1: name##_notpowered_sprites_right;                                  \
     name##_sprites_right_powered0; }                                  \

// рассчёт предупреждения о неккорректной позиции
#define buster_notlast_bothsides(name, vehid, pant)     \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,  \
[ set_offset_to(2),                                     \
  prev_vehicle_type_id() != vehid])                     \
{ 1: type_head_motor##pant##_add_mandatory;             \
     name##_sprites_start; }                            \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,     \
[ set_offset_to(-2),                                    \
  ((prev_vehicle_type_id() != vehid) + 1) *             \
  (getbits(extra_callback_info1, 8, 8) > 0) ])          \
{ 1: name##_sprites_start_after;                        \
  2: type_head_motor##pant##_prev_mandatory;            \
     name##_sprites_start; }                            \

#define buster_notlast_bothsides2(name, vehid1, vehid2, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,         \
[ set_offset_to(2),                                            \
  (prev_vehicle_type_id() != vehid1) &&                        \
  (prev_vehicle_type_id() != vehid2) ])                        \
{ 1: type_head_motor##pant##_add_mandatory;                    \
     name##_sprites_start; }                                   \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,            \
[ set_offset_to(-2),                                           \
  (((prev_vehicle_type_id() != vehid1) &&                      \
    (prev_vehicle_type_id() != vehid2)) + 1) *                 \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                \
{ 1: name##_sprites_start_after;                               \
  2: type_head_motor##pant##_prev_mandatory;                   \
     name##_sprites_start; }                                   \

#define buster_notlast_bothsides3(name, vehid1, vehid2, vehid3, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,                 \
[ set_offset_to(2),                                                    \
  (prev_vehicle_type_id() != vehid1) &&                                \
  (prev_vehicle_type_id() != vehid2) &&                                \
  (prev_vehicle_type_id() != vehid3) ])                                \
{ 1: type_head_motor##pant##_add_mandatory;                            \
     name##_sprites_start; }                                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                    \
[ set_offset_to(-2),                                                   \
  (((prev_vehicle_type_id() != vehid1) &&                              \
    (prev_vehicle_type_id() != vehid2) &&                              \
    (prev_vehicle_type_id() != vehid3)) + 1) *                         \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                        \
{ 1: name##_sprites_start_after;                                       \
  2: type_head_motor##pant##_prev_mandatory;                           \
     name##_sprites_start; }                                           \

#define buster_notlast_bothsides4(name, vehid1, vehid2, vehid3, vehid4, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,                         \
[ set_offset_to(2),                                                            \
  (prev_vehicle_type_id() != vehid1) &&                                        \
  (prev_vehicle_type_id() != vehid2) &&                                        \
  (prev_vehicle_type_id() != vehid3) &&                                        \
  (prev_vehicle_type_id() != vehid4)])                                         \
{ 1: type_head_motor##pant##_add_mandatory;                                    \
     name##_sprites_start; }                                                   \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                            \
[ set_offset_to(-2),                                                           \
  (((prev_vehicle_type_id() != vehid1) &&                                      \
    (prev_vehicle_type_id() != vehid2) &&                                      \
    (prev_vehicle_type_id() != vehid3) &&                                      \
    (prev_vehicle_type_id() != vehid4)) + 1) *                                 \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                                \
{ 1: name##_sprites_start_after;                                               \
  2: type_head_motor##pant##_prev_mandatory;                                   \
     name##_sprites_start; }                                                   \

#define buster_notlast_bothsides5(name, vehid1, vehid2, vehid3, vehid4, vehid5, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,                                 \
[ set_offset_to(2),                                                                    \
  (prev_vehicle_type_id() != vehid1) &&                                                \
  (prev_vehicle_type_id() != vehid2) &&                                                \
  (prev_vehicle_type_id() != vehid3) &&                                                \
  (prev_vehicle_type_id() != vehid4) &&                                                \
  (prev_vehicle_type_id() != vehid5)])                                                 \
{ 1: type_head_motor##pant##_add_mandatory;                                            \
     name##_sprites_start; }                                                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                                    \
[ set_offset_to(-2),                                                                   \
  (((prev_vehicle_type_id() != vehid1) &&                                              \
    (prev_vehicle_type_id() != vehid2) &&                                              \
    (prev_vehicle_type_id() != vehid3) &&                                              \
    (prev_vehicle_type_id() != vehid4) &&                                              \
    (prev_vehicle_type_id() != vehid5)) + 1) *                                         \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                                        \
{ 1: name##_sprites_start_after;                                                       \
  2: type_head_motor##pant##_prev_mandatory;                                           \
     name##_sprites_start; }                                                           \

#define buster_notlast_bothsides6(name, vehid1, vehid2, vehid3, vehid4, vehid5, vehid6, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,                                         \
[ set_offset_to(2),                                                                            \
  (prev_vehicle_type_id() != vehid1) &&                                                        \
  (prev_vehicle_type_id() != vehid2) &&                                                        \
  (prev_vehicle_type_id() != vehid3) &&                                                        \
  (prev_vehicle_type_id() != vehid4) &&                                                        \
  (prev_vehicle_type_id() != vehid5) &&                                                        \
  (prev_vehicle_type_id() != vehid6)])                                                         \
{ 1: type_head_motor##pant##_add_mandatory;                                                    \
     name##_sprites_start; }                                                                   \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                                            \
[ set_offset_to(-2),                                                                           \
  (((prev_vehicle_type_id() != vehid1) &&                                                      \
    (prev_vehicle_type_id() != vehid2) &&                                                      \
    (prev_vehicle_type_id() != vehid3) &&                                                      \
    (prev_vehicle_type_id() != vehid4) &&                                                      \
    (prev_vehicle_type_id() != vehid5) &&                                                      \
    (prev_vehicle_type_id() != vehid6)) + 1) *                                                 \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                                                \
{ 1: name##_sprites_start_after;                                                               \
  2: type_head_motor##pant##_prev_mandatory;                                                   \
     name##_sprites_start; }                                                                   \

#define buster_notlast_bothsides10(name, vehid1, vehid2, vehid3, vehid4, vehid5, vehid6, vehid7, vehid8, vehid9, vehid10, pant)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,                                                                           \
[ set_offset_to(2),                                                                                                              \
  (prev_vehicle_type_id() != vehid1) &&                                                                                          \
  (prev_vehicle_type_id() != vehid2) &&                                                                                          \
  (prev_vehicle_type_id() != vehid3) &&                                                                                          \
  (prev_vehicle_type_id() != vehid4) &&                                                                                          \
  (prev_vehicle_type_id() != vehid5) &&                                                                                          \
  (prev_vehicle_type_id() != vehid6) &&                                                                                          \
  (prev_vehicle_type_id() != vehid7) &&                                                                                          \
  (prev_vehicle_type_id() != vehid8) &&                                                                                          \
  (prev_vehicle_type_id() != vehid9) &&                                                                                          \
  (prev_vehicle_type_id() != vehid10)])                                                                                          \
{ 1: type_head_motor##pant##_add_mandatory;                                                                                      \
     name##_sprites_start; }                                                                                                     \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                                                                              \
[ set_offset_to(-2),                                                                                                             \
  (((prev_vehicle_type_id() != vehid1) &&                                                                                        \
    (prev_vehicle_type_id() != vehid2) &&                                                                                        \
    (prev_vehicle_type_id() != vehid3) &&                                                                                        \
    (prev_vehicle_type_id() != vehid4) &&                                                                                        \
    (prev_vehicle_type_id() != vehid5) &&                                                                                        \
    (prev_vehicle_type_id() != vehid6) &&                                                                                        \
    (prev_vehicle_type_id() != vehid7) &&                                                                                        \
    (prev_vehicle_type_id() != vehid8) &&                                                                                        \
    (prev_vehicle_type_id() != vehid9) &&                                                                                        \
    (prev_vehicle_type_id() != vehid10)) + 1) *                                                                                  \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                                                                                  \
{ 1: name##_sprites_start_after;                                                                                                 \
  2: type_head_motor##pant##_prev_mandatory;                                                                                     \
     name##_sprites_start; }                                                                                                     \

#define buster1_2_notlast_bothsides(name, vehid, vehmid, pantveh, pantmid)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_m,                    \
[ set_offset_to(2),                                                         \
  (prev_vehicle_type_id() == vehid) ])                                      \
{ 1: name##_sprites_start;                                                  \
     type_head_motor##pantveh##_add_mandatory; }                            \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_h,                    \
[ set_offset_to(2),                                                         \
  (prev_vehicle_type_id() == vehid) ||                                      \
  (prev_vehicle_type_id() == vehmid) ])                                     \
{ 1: name##_sprites_start;                                                  \
     type_head_motor##pantveh##_car_motor##pantmid##_add_mandatory; }       \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                         \
[ set_offset_to(-2),                                                        \
  ((prev_vehicle_type_id() == vehid) +                                      \
   (prev_vehicle_type_id() == vehmid) * 2 + 1) *                            \
  (getbits(extra_callback_info1, 8, 8) > 0)  ])                             \
{ 1: type_head_motor##pantveh##_prev_mandatory;                             \
  2: name##_sprites_start_after_h;                                          \
  3: name##_sprites_start_after_m;                                          \
     name##_sprites_start; }                                                \

#define buster1_2_notlast_bothsides2(name, vehid1, vehid2, vehmid, pantveh, pantmid)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_m,                              \
[ set_offset_to(2),                                                                   \
  (prev_vehicle_type_id() == vehid1) ||                                               \
  (prev_vehicle_type_id() == vehid2) ])                                               \
{ 1: name##_sprites_start;                                                            \
     type_head_motor##pantveh##_add_mandatory; }                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_h,                              \
[ set_offset_to(2),                                                                   \
  (prev_vehicle_type_id() == vehid1) ||                                               \
  (prev_vehicle_type_id() == vehid2) ||                                               \
  (prev_vehicle_type_id() == vehmid) ])                                               \
{ 1: name##_sprites_start;                                                            \
     type_head_motor##pantveh##_car_motor##pantmid##_add_mandatory; }                 \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                                   \
[ set_offset_to(-2),                                                                  \
  (((prev_vehicle_type_id() == vehid1) ||                                             \
    (prev_vehicle_type_id() == vehid2)) +                                             \
   (prev_vehicle_type_id() == vehmid) * 2 + 1) *                                      \
  (getbits(extra_callback_info1, 8, 8) > 0) ])                                        \
{ 1: type_head_motor##pantveh##_prev_mandatory;                                       \
  2: name##_sprites_start_after_h;                                                    \
  3: name##_sprites_start_after_m;                                                    \
     name##_sprites_start; }                                                          \

#define buster1_2_notlast_bothsides4(name, vehid1, vehid2, vehid3, vehid4, vehmid, pantveh, pantmid)  \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_m,                                              \
[ set_offset_to(2),                                                                                   \
  (prev_vehicle_type_id() == vehid1) ||                                                               \
  (prev_vehicle_type_id() == vehid2) ||                                                               \
  (prev_vehicle_type_id() == vehid3) ||                                                               \
  (prev_vehicle_type_id() == vehid4) ])                                                               \
{ 1: name##_sprites_start;                                                                            \
     type_head_motor##pantveh##_add_mandatory; }                                                      \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after_h,                                              \
[ set_offset_to(2),                                                                                   \
  (prev_vehicle_type_id() == vehid1) ||                                                               \
  (prev_vehicle_type_id() == vehid2) ||                                                               \
  (prev_vehicle_type_id() == vehid3) ||                                                               \
  (prev_vehicle_type_id() == vehid4) ||                                                               \
  (prev_vehicle_type_id() == vehmid) ])                                                               \
{ 1: name##_sprites_start;                                                                            \
     type_head_motor##pantveh##_car_motor##pantmid##_add_mandatory; }                                 \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,                                                   \
[ set_offset_to(-2),                                                                                  \
  (((prev_vehicle_type_id() == vehid1) ||                                                             \
    (prev_vehicle_type_id() == vehid2) ||                                                             \
    (prev_vehicle_type_id() == vehid3) ||                                                             \
    (prev_vehicle_type_id() == vehid4)) +                                                             \
   (prev_vehicle_type_id() == vehmid) * 2 + 1) *                                                      \
  (getbits(extra_callback_info1, 8, 8) > 0) ])                                                        \
{ 1: type_head_motor##pantveh##_prev_mandatory;                                                       \
  2: name##_sprites_start_after_h;                                                                    \
  3: name##_sprites_start_after_m;                                                                    \
     name##_sprites_start; }                                                                          \

/*

switch (FEAT_TRAINS, SELF, name##_sprites_start_mark2,      \
  getbits(extra_callback_info1, 8, 8))                      \
   { 0: name##_sprites_start;                               \
  1..5: type_head_motor_pant_car_motor_pant_add_mandatory;  \
     return CB_FAILED; }                                    \
switch (FEAT_TRAINS, SELF, name##_sprites_start_mark,       \
  getbits(extra_callback_info1, 8, 8))                      \
   { 0: name##_sprites_start;                               \
  1..2: type_head_pant_add_mandatory;                       \
     return CB_FAILED; }                                    \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after2,     \
[ set_offset_to(4),                                         \
  (prev_vehicle_type_id() == vehid) ||                      \
  (prev_vehicle_type_id() == vehid2) ])                     \
{ 1: name##_sprites_start;                                  \
     name##_sprites_start_mark; }                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_after,      \
[ set_offset_to(2),                                         \
  ((prev_vehicle_type_id() == vehid) ||                     \
   (prev_vehicle_type_id() == vehid2)) +                    \
  (prev_vehicle_type_id() == vehmid) * 2 ])                 \
{ 1: name##_sprites_start;                                  \
  2: name##_sprites_start_after2;                           \
     name##_sprites_start_mark; }                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_before2,    \
[ set_offset_to(-4),                                        \
  (prev_vehicle_type_id() == vehid) ||                      \
  (prev_vehicle_type_id() == vehid2) ])                     \
{ 1: name##_sprites_start_after;                            \
     name##_sprites_start_mark; }                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_before,     \
[ set_offset_to(-2),                                        \
  ((prev_vehicle_type_id() == vehid) ||                     \
   (prev_vehicle_type_id() == vehid2)) +                    \
  (prev_vehicle_type_id() == vehmid) * 2 ])                 \
{ 1: name##_sprites_start_after;                            \
  2: name##_sprites_start_before2;                          \
     name##_sprites_start_mark; }                           \
switch (FEAT_TRAINS, SELF, name##_sprites_start_sp,         \
  position_in_consist_from_end == 1)                        \
{ 1: name##_sprites_start_mark;                             \
     name##_sprites_start_before; }                         \
*/


// шаблон 2-х слойного симметричного вагона с фонарями (вагон - локомотив).
#define combo_layout_lights_template(name, size, x, y)                        \
spriteset (name##_sprites_asm_left_back, IMAGEFILE)                           \
{ s##size##_template(x, y, 0) }                                               \
spriteset (name##_sprites_asm_right_back, IMAGEFILE)                          \
{ s##size##_r_template(x, y, 0) }                                             \
random_switch (FEAT_TRAINS, SELF, name##_sprites_asm_back,                    \
bitmask(TRIGGER_VEHICLE_SERVICE))                                             \
{ 1: name##_sprites_asm_left_back;                                            \
  1: name##_sprites_asm_right_back; }                                         \
random_switch (FEAT_TRAINS, SELF, name##_sprites_asm_back2,                   \
bitmask(TRIGGER_VEHICLE_NEW_LOAD))                                            \
{ independent: name##_sprites_asm_back;                                       \
          128: name##_sprites_asm_back; }                                     \
switch (FEAT_TRAINS, SELF, name##_sprites_back,                               \
  STORE_TEMP(CB_FLAG_MORE_SPRITES | PALETTE_USE_DEFAULT, 0x100))              \
{ name##_sprites_asm_back2; }                                                 \
spriteset (name##_sprites_asm_left_front, IMAGEFILE)                          \
{ s##size##_template(x, y+67, 0) }                                            \
spriteset (name##_sprites_asm_right_front, IMAGEFILE)                         \
{ s##size##_r_template(x, y+67, 0) }                                          \
switch (FEAT_TRAINS, SELF, name##_sprites_asm_front, random_bits & 1)         \
{ 0: name##_sprites_asm_left_front;                                           \
     name##_sprites_asm_right_front; }                                        \
switch (FEAT_TRAINS, SELF, name##_sprites_front,                              \
  STORE_TEMP(PALETTE_USE_DEFAULT, 0x100))                                     \
{ name##_sprites_asm_front; }                                                 \
spriteset (name##_sprites_asm_left_front_lights, IMAGEFILE)                   \
{ s##size##_template(x, y+134, 0) }                                           \
spriteset (name##_sprites_asm_right_front_lights, IMAGEFILE)                  \
{ s##size##_r_template(x, y+201, 0) }                                         \
switch (FEAT_TRAINS, SELF, name##_sprites_asm_front_lights, random_bits & 1)  \
{ 0: name##_sprites_asm_left_front_lights;                                    \
     name##_sprites_asm_right_front_lights; }                                 \
switch (FEAT_TRAINS, SELF, name##_sprites_front_lights,                       \
  STORE_TEMP(PALETTE_USE_DEFAULT, 0x100))                                     \
{ name##_sprites_asm_front_lights; }                                          \

// end
