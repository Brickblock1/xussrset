 // Список средних секций
#define all_mid_section()                       \
( (prev_vehicle_type_id() == _3te10m_m) ||      \
     (prev_vehicle_type_id() == _3te10u_m) ||   \
     (prev_vehicle_type_id() == _4te10s_m) ||   \
     (prev_vehicle_type_id() == _3m62u_m) ||    \
     (prev_vehicle_type_id() == _2es10_m) ||    \
     (prev_vehicle_type_id() == _3es4k_m) ||    \
     (prev_vehicle_type_id() == _3es5k_m) ||    \
     (prev_vehicle_type_id() == _4es5k_m))      \

 // Специальная проверка для локомтивов, требующих 2+ головы (ВЛ80С, 2ЕС5К, 3ЕС5К, ВЛ11, 2ЭС4К, 2ЭС6, ВЛ82, ВЛ15)

switch (FEAT_TRAINS, PARENT, q_2ev120_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2ev120) &&
   (!(prev_vehicle_type_id() == _2ev120)) &&
   (!(LOAD_TEMP(5) == _2ev120)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     loco_limit_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl15_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl15) &&
   (!(prev_vehicle_type_id() == vl15)) &&
   (!(LOAD_TEMP(5) == vl15)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2ev120_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2es6_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es6) &&
   (!(prev_vehicle_type_id() == _2es6)) &&
   (!(LOAD_TEMP(5) == _2es6)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl15_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl82_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl82) &&
   (!(prev_vehicle_type_id() == vl82)) &&
   (!(LOAD_TEMP(5) == vl82)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2es6_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl82m_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl82m) &&
   (!(prev_vehicle_type_id() == vl82m)) &&
   (!(LOAD_TEMP(5) == vl82m)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl82_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl11_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11) &&
   (!(prev_vehicle_type_id() == vl11)) &&
   (!(LOAD_TEMP(5) == vl11)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl82m_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl11m_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11m) &&
   (!(prev_vehicle_type_id() == vl11m)) &&
   (!(LOAD_TEMP(5) == vl11m)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl11_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2es5s_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es5s) &&
   (!(prev_vehicle_type_id() == _2es5s)) &&
   (!(LOAD_TEMP(5) == _2es5s)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl11m_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2es5_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es5) &&
   (!(prev_vehicle_type_id() == _2es5)) &&
   (!(LOAD_TEMP(5) == _2es5)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2es5s_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl80s_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl80s) &&
   (!(prev_vehicle_type_id() == vl80s)) &&
   (!(LOAD_TEMP(5) == vl80s)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2es5_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_vl85_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl85) &&
   (!(prev_vehicle_type_id() == vl85)) &&
   (!(LOAD_TEMP(5) == vl85)) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl80s_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_4es5k_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _4es5k) &&
   (!((prev_vehicle_type_id() == _4es5k) || (prev_vehicle_type_id() == _4es5k_m))) &&
   (!((LOAD_TEMP(5) == _4es5k) || (LOAD_TEMP(5) == _4es5k_m))) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_vl85_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2_3es5k_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es5k) || (LOAD_TEMP(3) == _3es5k)) &&
   (!((prev_vehicle_type_id() == _2es5k) || (prev_vehicle_type_id() == _3es5k) || (prev_vehicle_type_id() == _3es5k_m))) &&
   (!((LOAD_TEMP(5) == _2es5k) || (LOAD_TEMP(5) == _3es5k) || (LOAD_TEMP(5) == _3es5k_m))) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_4es5k_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2_3es4k_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es4k) || (LOAD_TEMP(3) == _3es4k)) &&
   (!((prev_vehicle_type_id() == _2es4k) || (prev_vehicle_type_id() == _3es4k) || (prev_vehicle_type_id() == _3es4k_m))) &&
   (!((LOAD_TEMP(5) == _2es4k) || (LOAD_TEMP(5) == _3es4k) || (LOAD_TEMP(5) == _3es4k_m))) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2_3es5k_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, q_2es10_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es10) &&
   (!((prev_vehicle_type_id() == _2es10) || (prev_vehicle_type_id() == _2es10_m))) &&
   (!((LOAD_TEMP(5) == _2es10) || (LOAD_TEMP(5) == _2es10_m))) ])
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2_3es4k_can_attach_wagon;
}

// Специальная проверка для локомтивов, требующих 2 головы (Н8/ВЛ8/ВЛ8м, Т8/ВЛ10/ВЛ10у, ЧС6, ЧС7, ЧС200, Н81/ВЛ80/ВЛ80к/т/р, ЧС8)

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon_check2,
   (LOAD_TEMP(5) != LOAD_TEMP(3)) &&
   ((LOAD_TEMP(4) % 2) == 1) &&
   ((LOAD_TEMP(3) == tg100) || (LOAD_TEMP(3) == tg102) ||
    (LOAD_TEMP(3) == _2tep60) ||
    (LOAD_TEMP(3) == vl10) || (LOAD_TEMP(3) == vl10u) ||
    (LOAD_TEMP(3) == vl80k) || (LOAD_TEMP(3) == vl80t) || (LOAD_TEMP(3) == vl80) ||
    (LOAD_TEMP(3) == chs200) || (LOAD_TEMP(3) == chs7) || (LOAD_TEMP(3) == chs6) || (LOAD_TEMP(3) == chs8) ||
    (LOAD_TEMP(3) == _2el5) ||
    (LOAD_TEMP(3) == vl8)))
{
  1: return string(STR_CAN_ATTACH_DUAL);
     q_2es10_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon_check,
   (LOAD_TEMP(3) == _2tep60) && (current_year >= USSREND))
{
  1: q_2es10_can_attach_wagon;
     double_can_attach_wagon_check2;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon6,
[  STORE_TEMP (6, 4) ])
{
     double_can_attach_wagon_check;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon5,
[  STORE_TEMP (5, 4),
   set_offset_to(num_vehs_in_consist-12),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_can_attach_wagon6;
     double_can_attach_wagon_check;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon4,
[  STORE_TEMP (4, 4),
   set_offset_to(num_vehs_in_consist-10),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_can_attach_wagon5;
     double_can_attach_wagon_check;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon3,
[  STORE_TEMP (3, 4),
   set_offset_to(num_vehs_in_consist-8),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_can_attach_wagon4;
     double_can_attach_wagon_check;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon2,
[  STORE_TEMP (2, 4),
   set_offset_to(num_vehs_in_consist-6),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_can_attach_wagon3;
     double_can_attach_wagon_check;
}

switch (FEAT_TRAINS, PARENT, double_can_attach_wagon,
[  STORE_TEMP (1, 4),
   set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_can_attach_wagon2;
     double_can_attach_wagon_check;
}

// Специальная проверка для управления присоединением 3ТЭ10М, 3ТЭ10У, 4ТЭ10С, 3М62У, 3ЭС5К, 2ЭС10

switch (FEAT_TRAINS, PARENT, _4te10s_buster_required,
[  set_offset_to(num_vehs_in_consist-4),
   (prev_vehicle_type_id() == _4te10s_m) ])
{
  1: double_can_attach_wagon;
     return string(STR_CAN_ATTACH_MISS_MIDDLE_UNIT);
}

switch (FEAT_TRAINS, PARENT, other_can_attach_wagon,
[  set_offset_to(num_vehs_in_consist-2),
   ( all_mid_section() +
     ((prev_vehicle_type_id() == _4te10s) * 2))  ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
  2: _4te10s_buster_required;
     double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3te10m_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2te10m) ||
    (prev_vehicle_type_id() == _3te10m)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3te10m_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _3te10m_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3te10u_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2te10u) ||
    (prev_vehicle_type_id() == _3te10u)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3te10u_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _3te10u_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_4te10s_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2te10s) ||
    (prev_vehicle_type_id() == _4te10s) ||
    (prev_vehicle_type_id() == _4te10s_m)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, _4te10s_buster_required_0,
[  STORE_TEMP(prev_vehicle_type_id(), 4),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(4) == _4te10s_m) ||
   ((LOAD_TEMP(4) == _4te10s) && (prev_vehicle_type_id() == _4te10s_m)) ||
   ((prev_vehicle_type_id() == _4te10s_m)) ||
   ((LOAD_TEMP(4) != _4te10s) && (LOAD_TEMP(4) != _4te10s_m)) ||
   ((LOAD_TEMP(4) != _4te10s_m))  ])
{
  1: double_can_attach_wagon;
     return string(STR_CAN_ATTACH_MISS_MIDDLE_UNIT);
}

switch (FEAT_TRAINS, PARENT, m_4te10s_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _4te10s_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return _4te10s_buster_required_0;
}

switch (FEAT_TRAINS, PARENT, m_3m62u_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2m62u) ||
    (prev_vehicle_type_id() == _3m62u)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3m62u_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _3m62u_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3es4k_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2es4k) ||
    (prev_vehicle_type_id() == _3es4k)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3es4k_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _3es4k_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3es5k_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _2es5k) ||
    (prev_vehicle_type_id() == _3es5k)) &&
   (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_3es5k_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _3es5k_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_4es5k_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   ((prev_vehicle_type_id() == _4es5k) ||
    (prev_vehicle_type_id() == _4es5k_m)) &&
  (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_4es5k_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _4es5k_m) ])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_2es10_can_attach_wagon_m,
[  set_offset_to(num_vehs_in_consist-4),
   STORE_TEMP (all_mid_section(), 3),
   set_offset_to(num_vehs_in_consist-2),
   (prev_vehicle_type_id() == _2es10) &&
  (!LOAD_TEMP(3)) ])
{
  0: return string(STR_CAN_ATTACH_NO_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, PARENT, m_2es10_can_attach_wagon_h,
[  set_offset_to(num_vehs_in_consist-2),
   all_mid_section() && (prev_vehicle_type_id() != _2es10_m)])
{
  1: return string(STR_CAN_ATTACH_NO_AFTER_MIDDLE_UNIT);
     return double_can_attach_wagon;
}

switch (FEAT_TRAINS, SELF, any_can_attach_wagon,
[   STORE_TEMP(vehicle_type_id, 5),
   vehicle_type_id])
{
  _2te10m:     m_3te10m_can_attach_wagon_h;
  _3te10m:     m_3te10m_can_attach_wagon_h;
  _3te10m_m:   m_3te10m_can_attach_wagon_m;

  _2te10u:     m_3te10u_can_attach_wagon_h;
  _3te10u:     m_3te10u_can_attach_wagon_h;
  _3te10u_m:   m_3te10u_can_attach_wagon_m;

  _2te10s:     m_4te10s_can_attach_wagon_h;
  _4te10s:     m_4te10s_can_attach_wagon_h;
  _4te10s_m:   m_4te10s_can_attach_wagon_m;

  _2m62u:      m_3m62u_can_attach_wagon_h;
  _3m62u:      m_3m62u_can_attach_wagon_h;
  _3m62u_m:    m_3m62u_can_attach_wagon_m;

  _2es10:      m_2es10_can_attach_wagon_h;
  _2es10_m:    m_2es10_can_attach_wagon_m;

  _2es4k:      m_3es4k_can_attach_wagon_h;
  _3es4k:      m_3es4k_can_attach_wagon_h;
  _3es4k_m:    m_3es4k_can_attach_wagon_m;

  _2es5k:      m_3es5k_can_attach_wagon_h;
  _3es5k:      m_3es5k_can_attach_wagon_h;
  _3es5k_m:    m_3es5k_can_attach_wagon_m;

  _4es5k:      m_4es5k_can_attach_wagon_h;
  _4es5k_m:    m_4es5k_can_attach_wagon_m;

               other_can_attach_wagon;
}

// для локомотивов, требующих 2+ часть, необходимо проверить, что в конце он не одинок
// (ВЛ80С, 2ЕС5К, 3ЕС5К, ВЛ11, 2ЭС4К, 2ЭС6, ВЛ82, ВЛ15)

switch (FEAT_TRAINS, PARENT, q_2ev120_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2ev120) &&
   (!(prev_vehicle_type_id() == _2ev120)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, PARENT, q_vl15_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl15) &&
   (!(prev_vehicle_type_id() == vl15)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2ev120_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es6_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es6) &&
   (!(prev_vehicle_type_id() == _2es6)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl15_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl82_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl82) &&
   (!(prev_vehicle_type_id() == vl82))
])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es6_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl82m_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl82m) &&
   (!(prev_vehicle_type_id() == vl82m))
])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl82_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl11_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11) &&
   (!(prev_vehicle_type_id() == vl11)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl82m_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl11m_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl11m) &&
   (!(prev_vehicle_type_id() == vl11m)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl11_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl80s_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl80s) &&
   (!(prev_vehicle_type_id() == vl80s)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl11m_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_vl85_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == vl85) &&
   (!(prev_vehicle_type_id() == vl85)) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl80s_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2es10_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _2es10) &&
   (!((prev_vehicle_type_id() == _2es10) || (prev_vehicle_type_id() == _2es10_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_vl85_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2_3es5k_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es5k) || (LOAD_TEMP(3) == _3es5k)) &&
   (!((prev_vehicle_type_id() == _2es5k) || (prev_vehicle_type_id() == _3es5k) || (prev_vehicle_type_id() == _3es5k_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2es10_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_2_3es4k_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   ((LOAD_TEMP(3) == _2es4k) || (LOAD_TEMP(3) == _3es4k)) &&
   (!((prev_vehicle_type_id() == _2es4k) || (prev_vehicle_type_id() == _3es4k) || (prev_vehicle_type_id() == _3es4k_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2_3es5k_start_stop;
}

switch (FEAT_TRAINS, PARENT, q_4es5k_start_stop,
[  set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   (LOAD_TEMP(3) == _4es5k) &&
   (!((prev_vehicle_type_id() == _4es5k) || (prev_vehicle_type_id() == _4es5k_m))) ])
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_2_3es4k_start_stop;
}

// для локомотивов, требующих 2-ю часть, необходимо проверить, что в конце он не одинок

switch (FEAT_TRAINS, PARENT, double_start_stop_check2,
   ((LOAD_TEMP(4) % 2) == 1) &&
   ((LOAD_TEMP(3) == tg100) || (LOAD_TEMP(3) == tg102) ||
    (LOAD_TEMP(3) == _2tep60) ||
    (LOAD_TEMP(3) == vl10) || (LOAD_TEMP(3) == vl10u) ||
    (LOAD_TEMP(3) == vl80k) || (LOAD_TEMP(3) == vl80t) || (LOAD_TEMP(3) == vl80s) || (LOAD_TEMP(3) == vl80) ||
    (LOAD_TEMP(3) == vl85) ||
    (LOAD_TEMP(3) == chs200) || (LOAD_TEMP(3) == chs7) || (LOAD_TEMP(3) == chs6) || (LOAD_TEMP(3) == chs8) ||
    (LOAD_TEMP(3) == _2el5) ||
    (LOAD_TEMP(3) == vl8)
   ))
{
  1: return string(STR_START_STOP_DUAL_END_REQUIRED);
     q_4es5k_start_stop;
}

switch (FEAT_TRAINS, PARENT, double_start_stop_check,
   (LOAD_TEMP(3) == _2tep60) && (current_year >= USSREND))
{
  1: q_4es5k_start_stop;
     double_start_stop_check2;
}

switch (FEAT_TRAINS, PARENT, double_start_stop6,
[  STORE_TEMP (6, 4) ])
{
     double_start_stop_check;
}

switch (FEAT_TRAINS, PARENT, double_start_stop5,
[  STORE_TEMP (5, 4),
   set_offset_to(num_vehs_in_consist-12),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_start_stop6;
     double_start_stop_check;
}

switch (FEAT_TRAINS, PARENT, double_start_stop4,
[  STORE_TEMP (4, 4),
   set_offset_to(num_vehs_in_consist-10),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_start_stop5;
     double_start_stop_check;
}

switch (FEAT_TRAINS, PARENT, double_start_stop3,
[  STORE_TEMP (3, 4),
   set_offset_to(num_vehs_in_consist-8),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_start_stop4;
     double_start_stop_check;
}

switch (FEAT_TRAINS, PARENT, double_start_stop2,
[  STORE_TEMP (2, 4),
   set_offset_to(num_vehs_in_consist-6),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_start_stop3;
     double_start_stop_check;
}

switch (FEAT_TRAINS, PARENT, double_start_stop,
[  STORE_TEMP (1, 4),
   set_offset_to(num_vehs_in_consist-2),
   STORE_TEMP (prev_vehicle_type_id(), 3),
   set_offset_to(num_vehs_in_consist-4),
   prev_vehicle_type_id() == LOAD_TEMP(3) ])
{
  1: double_start_stop2;
     double_start_stop_check;
}

// для средней секции необходимо проверить, что в конце она не одинока

switch (FEAT_TRAINS, SELF, any_start_stop_mid,
[
   set_offset_to(num_vehs_in_consist-2),
   all_mid_section() ])
{
  1: return string(STR_START_STOP_MIDDLE_MUST_NOT_BE_LAST);
     double_start_stop;
}

// некорректные грузы

switch (FEAT_TRAINS, PARENT, any_start_stop,
  has_inadmissible_cargo())
{
  1: return string(STR_START_STOP_INADMISSIBLE_CARGO);
     any_start_stop_mid;
}
