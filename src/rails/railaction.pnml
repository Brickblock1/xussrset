 /// railaction

// Переезды
// Учитываем level_crossing_status, town_zone, terrain_type

switch (FEAT_RAILTYPES, SELF, get_rail0_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail0_2_level_crossings_open;        // нет снега, город, открыто
  1: raila_2_level_crossings_open;        // снег, город, открыто
  2: rail0_1_level_crossings_open;        // нет снега, за городом, открыто
  3: raila_1_level_crossings_open;        // снег, за городом, открыто
  4: rail0_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: raila_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail0_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     raila_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail1_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail1_2_level_crossings_open;        // нет снега, город, открыто
  1: raila_2_level_crossings_open;        // снег, город, открыто
  2: rail1_1_level_crossings_open;        // нет снега, за городом, открыто
  3: raila_1_level_crossings_open;        // снег, за городом, открыто
  4: rail1_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: raila_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail1_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     raila_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail2_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail2_2_level_crossings_open;        // нет снега, город, открыто
  1: raila_2_level_crossings_open;        // снег, город, открыто
  2: rail2_1_level_crossings_open;        // нет снега, за городом, открыто
  3: raila_1_level_crossings_open;        // снег, за городом, открыто
  4: rail2_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: raila_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail2_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     raila_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail3_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail3_2_level_crossings_open;        // нет снега, город, открыто
  1: raila_2_level_crossings_open;        // снег, город, открыто
  2: rail3_1_level_crossings_open;        // нет снега, за городом, открыто
  3: raila_1_level_crossings_open;        // снег, за городом, открыто
  4: rail3_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: raila_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail3_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     raila_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail4_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail4_2_level_crossings_open;        // нет снега, город, открыто
  1: raila_2_level_crossings_open;        // снег, город, открыто
  2: rail4_1_level_crossings_open;        // нет снега, за городом, открыто
  3: raila_1_level_crossings_open;        // снег, за городом, открыто
  4: rail4_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: raila_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail4_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     raila_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_level_crossings,
  ( terrain_type == TILETYPE_SNOW) +
  (town_zone == TOWNZONE_EDGE) * 2 +
  (level_crossing_status == LEVEL_CROSSING_CLOSED) * 4)
{
  0: rail_3d_2_level_crossings_open;        // нет снега, город, открыто
  1: rail_3d_2_level_crossings_open;        // снег, город, открыто
  2: rail_3d_1_level_crossings_open;        // нет снега, за городом, открыто
  3: rail_3d_1_level_crossings_open;        // снег, за городом, открыто
  4: rail_3d_2_level_crossings_closed_big;  // нет снега, город, закрыто
  5: rail_3d_2_level_crossings_closed_big;  // снег, город, закрыто
  6: rail_3d_1_level_crossings_closed_big;  // нет снега, за городом, закрыто
     rail_3d_1_level_crossings_closed_big;  // снег, за городом, закрыто
}

switch (FEAT_RAILTYPES, SELF, get_rail0_track_overlay, terrain_type)
{
  TILETYPE_SNOW: raila_track_overlay;
  rail0_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail1_track_overlay, terrain_type)
{
  TILETYPE_SNOW: raila_track_overlay;
  rail1_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail2_track_overlay, terrain_type)
{
  TILETYPE_SNOW: raila_track_overlay;
  rail2_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail3_track_overlay, terrain_type)
{
  TILETYPE_SNOW: raila_track_overlay;
  rail3_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail4_track_overlay, terrain_type)
{
  TILETYPE_SNOW: raila_track_overlay;
  rail4_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_track_overlay, terrain_type)
{
  TILETYPE_SNOW: rail_3d_track_overlay;
  rail_3d_track_overlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail0_underlay, terrain_type)
{
  TILETYPE_SNOW: raila_underlay;
  rail0_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail1_underlay, terrain_type)
{
  TILETYPE_SNOW: raila_underlay;
  rail1_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail2_underlay, terrain_type)
{
  TILETYPE_SNOW: raila_underlay;
  rail2_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail3_underlay, terrain_type)
{
  TILETYPE_SNOW: raila_underlay;
  rail3_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail4_underlay, terrain_type)
{
  TILETYPE_SNOW: raila_underlay;
  rail4_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_underlay, terrain_type)
{
  TILETYPE_SNOW: rail_3d_underlay;
  rail_3d_underlay;
}

switch (FEAT_RAILTYPES, SELF, get_rail0_tunnels, terrain_type)
{
  TILETYPE_SNOW: raila_tunnels;
  rail0_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail1_tunnels, terrain_type)
{
  TILETYPE_SNOW: raila_tunnels;
  rail1_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail2_tunnels, terrain_type)
{
  TILETYPE_SNOW: raila_tunnels;
  rail2_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail3_tunnels, terrain_type)
{
  TILETYPE_SNOW: raila_tunnels;
  rail3_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail4_tunnels, terrain_type)
{
  TILETYPE_SNOW: raila_tunnels;
  rail4_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_tunnels, terrain_type)
{
  TILETYPE_SNOW: rail_3d_tunnels;
  rail_3d_tunnels;
}

switch (FEAT_RAILTYPES, SELF, get_rail0_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: raila_bridge_surfaces;
  rail0_bridge_surfaces;
}

switch (FEAT_RAILTYPES, SELF, get_rail1_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: raila_bridge_surfaces;
  rail1_bridge_surfaces;
}

switch (FEAT_RAILTYPES, SELF, get_rail2_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: raila_bridge_surfaces;
  rail2_bridge_surfaces;
}

switch (FEAT_RAILTYPES, SELF, get_rail3_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: raila_bridge_surfaces;
  rail3_bridge_surfaces;
}

switch (FEAT_RAILTYPES, SELF, get_rail4_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: raila_bridge_surfaces;
  rail4_bridge_surfaces;
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_bridge_surfaces, terrain_type)
{
  TILETYPE_SNOW: rail_3d_bridge_surfaces;
  rail_3d_bridge_surfaces;
}

// Депо

switch (FEAT_RAILTYPES, SELF, rail1_depots, terrain_type)
{
  TILETYPE_SNOW: rail1_depot_snow;
  rail1_depot;
}

switch (FEAT_RAILTYPES, SELF, rail4_depots, terrain_type)
{
  TILETYPE_SNOW: rail4_depot_snow;
  rail4_depot;
}

switch (FEAT_RAILTYPES, SELF, rail_3d_depots, terrain_type)
{
  TILETYPE_SNOW: rail_3d_depot_snow;
  rail_3d_depot;
}

// Precombined

switch (FEAT_RAILTYPES, SELF, get_rail0_precombined, terrain_type)
{
  TILETYPE_SNOW: raila_precombined;
  rail0_precombined;
}

switch (FEAT_RAILTYPES, SELF, get_rail1_precombined, terrain_type)
{
  TILETYPE_SNOW: raila_precombined;
  rail1_precombined;
}

switch (FEAT_RAILTYPES, SELF, get_rail2_precombined, terrain_type)
{
  TILETYPE_SNOW: raila_precombined;
  rail2_precombined;
}

switch (FEAT_RAILTYPES, SELF, get_rail3_precombined, terrain_type)
{
  TILETYPE_SNOW: raila_precombined;
  rail3_precombined;
}

switch (FEAT_RAILTYPES, SELF, get_rail4_precombined, terrain_type)
{
  TILETYPE_SNOW: raila_precombined;
  rail4_precombined;
}

switch (FEAT_RAILTYPES, SELF, get_rail_3d_precombined, terrain_type)
{
  TILETYPE_SNOW: rail_3d_precombined;
  rail_3d_precombined;
}
