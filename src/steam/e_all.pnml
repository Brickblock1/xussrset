 // e all parts
// 445

switch (FEAT_TRAINS, SELF, e_all_purchase_sprites,
  (current_year >= 1926) +
  (current_year >= 1931) +
  (current_year >= 1935))
{
  0: e_e_purchase_sprites;
  1: e_eu_purchase_sprites;
  2: e_em_purchase_sprites;
     e_er_purchase_sprites;
}

switch (FEAT_TRAINS, SELF, e_all_tender_sprites_start, 0)
{
  e_er_tender_sprites_start;
}

switch (FEAT_TRAINS, SELF, e_all_engine_sprites_start,        
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_sprites_start;
  1: e_eu_sprites_start;
  2: e_em_sprites_start;
     e_er_sprites_start;
}

steamer_direction_template(e_all, _sprites_start)
short_vehicle(e_all)

switch (FEAT_TRAINS, SELF, e_all_weight,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_weight;
  1: return (86+72); // Эу
  2: e_em_weight;
     e_er_weight;
}

switch (FEAT_TRAINS, SELF, e_all_tractive_effort_coefficient,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_tractive_effort_coefficient; 
  1: return get_tec_int(217.0, 86+72); // Эу
  2: e_em_tractive_effort_coefficient;
     e_er_tractive_effort_coefficient;
}

switch (FEAT_TRAINS, SELF, e_all_power,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_power;
  1: return get_power_in_cb(1280); // Эу
  2: return get_power_in_cb(1460); // Эм
     return get_power_in_cb(1500); // Эр
}

switch (FEAT_TRAINS, SELF, e_all_cost_factor,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_cost_factor;
  3: return 14;
     return 12;
}

switch (FEAT_TRAINS, SELF, e_all_cargo_subtype_text,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_cargo_subtype_text;
  1: return string(STR_REFIT_FACTORY_GENERAL_TYPE, string(STR_NAME_EU), "");
  2: return string(STR_REFIT_FACTORY_GENERAL_TYPE, string(STR_NAME_EM), "");
  3: return string(STR_REFIT_FACTORY_GENERAL_TYPE, string(STR_NAME_ER), "");
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, e_all_running_cost_factor,
  (build_year >= 1926) +
  (build_year >= 1931) +
  (build_year >= 1935))
{
  0: e_e_running_cost_factor;
  1: e_eu_running_cost_factor;
  2: e_em_running_cost_factor;
     e_er_running_cost_factor;
}

switch (FEAT_TRAINS, SELF, e_all_additional_text,
  (current_year >= 1926) +
  (current_year >= 1931) +
  (current_year >= 1935))
{
  0:e_e_additional_text;
  1:return string(STR_PURCHASE_HINT_ENGINE, 
                  string(STR_PURCHASE_HINT_ENGINE_TYPE_FREIGHT_STEAM_WITH_SUBTYPE, string(STR_NAME_EU)), 
                  string(STR_PURCHASE_HINT_SECTIONS_1), 
                  string(STR_PURCHASE_HINT_FROMTO, 1926, 1931), 
                  string(STR_PURCHASE_HINT_FACTORY_LUGANSK));
  2:return string(STR_PURCHASE_HINT_ENGINE, 
                  string(STR_PURCHASE_HINT_ENGINE_TYPE_FREIGHT_STEAM_WITH_SUBTYPE, string(STR_NAME_EM)), 
                  string(STR_PURCHASE_HINT_SECTIONS_1), 
                  string(STR_PURCHASE_HINT_FROMTO, 1931, 1935), 
                  string(STR_PURCHASE_HINT_FACTORY_LUGANSK));
    return string(STR_PURCHASE_HINT_ENGINE, 
                  string(STR_PURCHASE_HINT_ENGINE_TYPE_FREIGHT_STEAM_WITH_SUBTYPE, string(STR_NAME_ER)), 
                  string(STR_PURCHASE_HINT_SECTIONS_1), 
                  string(STR_PURCHASE_HINT_FROMTO, 1935, 1957), 
                  string(STR_PURCHASE_HINT_FACTORY_KOLOMNA));
}

engine_speed_change_after(e_all, 55, 
                                 65, 1936)
engine_penalise_speed0(e_all)
engine_tender(e_all)
engine_tender_length_change_build_after(e_all, 6, 1, 4, 1,
                                               6, 1, 5, 1, 1948)

item (FEAT_TRAINS, e_all, 445) {
  property { 
    name: string(STR_NAME_E_ALL);
    climates_available: NO_CLIMATE; 
    introduction_date: date(get_loc_year(1912), 1, 1);
    model_life: get_model_life(1912,1957);
    retire_early: get_retire_early(1912,1957);
    vehicle_life: 40;
    reliability_decay: 10;
    cost_factor: 8;
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_CARGO;
    power: 780 hpM;
    running_cost_base: RUNNING_COST_STEAM;
    weight: (78+64) ton;
    engine_class: ENGINE_CLASS_STEAM;
    tractive_effort_coefficient: get_tec(127.0, 78+64);
    length: 6;
    cargo_allow_refit: [GOOD];
    default_cargo_type: GOOD;
    cargo_capacity: 1;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_STEAM;
  }
  graphics {
    default: e_all_sprites;
    purchase: e_all_purchase_sprites;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: e_all_additional_text;
    speed: e_all_speed;
    purchase_speed: e_all_purchase_speed;
    bitmask_vehicle_info: e_all_bitmask_vehicle_info;
    cargo_capacity: return 0;
    create_effect: e_create_effect;
    articulated_part: e_all_articulated_part;
    length: e_all_length;
    power: e_all_power;
    tractive_effort_coefficient: e_all_tractive_effort_coefficient;
    weight: e_all_weight;
    cargo_subtype_text: e_all_cargo_subtype_text;
    cost_factor: e_all_cost_factor;
    running_cost_factor: e_all_running_cost_factor;
  }
}
long_name_template(e_all, STR_LONGNAME_E_ALL)
models_default_cargo_template(e_all)

if (models_details_level == 0) {
  item (FEAT_TRAINS, e_e) {
    property { climates_available: NO_CLIMATE; }
  }
  item (FEAT_TRAINS, e_em) {
    property { climates_available: NO_CLIMATE; }
  }
  item (FEAT_TRAINS, e_eu) {
    property { climates_available: NO_CLIMATE; }
  }
  item (FEAT_TRAINS, e_er) {
    property { climates_available: NO_CLIMATE; }
  }
  item (FEAT_TRAINS, e_all) {
    property { climates_available: get_climates_available(); }
  }
}

allow_steamer(e_all)
