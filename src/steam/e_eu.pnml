 // eu

switch (FEAT_TRAINS, PARENT, e_eu_sprites_start, 0)
{
  e_all_v2_sprites_left;
}

short_vehicle(e_eu)

switch (FEAT_TRAINS, SELF, e_eu_power,
  (current_year >= 1936))
{
  0: return 1250;
     return 1320;
}

engine_speed_change_after(e_eu, 55, 65, 1936)

engine_penalise_speed0(e_eu)

item (FEAT_TRAINS, e_eu) 
{
  property
  {
    name: string(STR_EU_NAME);
    climates_available: NO_CLIMATE;
    introduction_date: date(get_loc_year(1926), 1, 1);
    model_life: get_model_life(1926,1931);
    retire_early: get_retire_early(1926,1931);
    vehicle_life: 30;
    reliability_decay: 20;
    cost_factor: 15;
    running_cost_factor: get_steam_running_cost_factor();
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1250 hpM;
    running_cost_base: RUNNING_COST_STEAM;
    weight: (86+72) ton;
    engine_class: ENGINE_CLASS_STEAM;
    tractive_effort_coefficient: get_tec(159.0, 86+72);
    length: 6;
    visual_effect_and_powered: steam_visual_effect_and_powered(-4);
    cargo_allow_refit: [GOOD];
    default_cargo_type: GOOD;
    cargo_capacity: 1;
  }

  graphics {
    default: e_eu_sprites;
    purchase: e_all_v2_purchase_sprites;
    articulated_part: articulated_part_tender1;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: return string(STR_EU_PURCHASE_HINT);
    speed: e_eu_speed;
    purchase_speed: e_eu_purchase_speed;
    bitmask_vehicle_info: e_eu_bitmask_vehicle_info;
    cargo_capacity: return 0;
    power: e_eu_power;
  }

  livery_override(unitb)
  {
    length: return 4;
            e_all_t_v1_sprites_left;
  }

}

if (enable_long_names)
{
  item (FEAT_TRAINS, e_eu)
  {
    property
    { name: string(STR_EU_NAME_LONG); }
  }
}

if ((models_details_level == 1) || (models_details_level == 2))
{
  item (FEAT_TRAINS, e_eu)
  {
    property
    { climates_available: get_climates_available(); }
  }
}

