 // er

#define IMAGEFILE  "src/steam/er.png"
purchase_sprites(e_er_v1, 0, 0)
purchase_sprites(e_er_v2, 100, 0)
steam_sprites(7, e_er_engine, 32, 40)
tender_sprites(6, e_er_v1_tender, 447, 40)
#undef IMAGEFILE
purchase_sprites_select(e_er, 1948)

switch (FEAT_TRAINS, SELF, e_er_tender_sprites_start,
  build_year >= 1948)
{
  0: e_e_tender_sprites_start;
     e_er_v1_tender_sprites_start;
}

steamer_direction_template(e_er, _sprites_start)
long_vehicle(e_er)

engine_tender(e_er)
engine_tender_length_change_build_after(e_er, 6, 1, 4, 1,
                                              6, 1, 5, 1, 1948)
engine_weight_change_build_after2(e_er, 84+68,
                                        85+77, 1946,
                                        85+68, 1948)
engine_TE_change_build_after2(e_er, get_tec_int(229.0, 84+68),
                                    get_tec_int(229.0, 85+77), 1946,
                                    get_tec_int(229.0, 85+68), 1948)
engine_cost_change_build_after2(e_er, 13,
                                      13, 1946,
                                      14, 1948)
engine_RC_change_build_after2(e_er, 314,
                                    324, 1946,
                                    325, 1948)
engine_speed_change_after(e_er, 55,
                                65, 1936)
engine_penalise_speed0(e_er)
hint_engine(e_er, STR_PURCHASE_HINT_ENGINE_TYPE_FREIGHT_STEAM, STR_PURCHASE_HINT_SECTIONS_1, 1933, 1957, STR_PURCHASE_HINT_FACTORY_KOLOMNA)

item (FEAT_TRAINS, e_er, 333) {
  property {
    name: string(STR_NAME_ER);
    vehicle_dates(1933, 1957, 40, 10, 6, 13)
    vehicle_cargo()
    vehicle_steam(1500, 84+82, 229.0)
  }
  graphics {
    default: e_er_sprites;
    purchase: e_er_purchase_sprites;
    articulated_part: e_er_articulated_part;
    length: e_er_length;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    tractive_effort_coefficient: e_er_tractive_effort_coefficient;
    speed: e_er_speed;
    purchase_speed: e_er_purchase_speed;
    bitmask_vehicle_info: e_er_bitmask_vehicle_info;
    cargo_capacity: return 0;
    weight: e_er_weight;
    create_effect: e_create_effect;
    running_cost_factor: e_er_running_cost_factor;
    cost_factor: e_er_cost_factor;
    colour_mapping: any_cc_colour;
    cargo_subtype_text: return string(STR_REFIT_FACTORY);
    additional_text: e_er_additional_text;
  }
}

long_name_template(e_er, STR_LONGNAME_ER)
models_default_cargo_template(e_er)
allow_steamer(e_er)
