 // s_s

#define IMAGEFILE  "src/steam/s.png"
purchase_sprites(s_s, 0, 0)

steam_sprites(7, s_s, 32,  40)

tender_sprites(5, s_s_tender, 447,  40)
#undef IMAGEFILE

short_vehicle(s_s)

switch (FEAT_TRAINS, SELF, s_s_colour_mapping,
  cargo_subtype)
{
  0: return ttdall_cc + 0x53; 
  1: return ttdall_cc + 0x63;
  2: return ttdall_cc + 0xB3;
  3: return ttdall_cc + 0x93;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, s_s_tender_colour_mapping,
[ set_offset_to(-2),
  prev_vehicle_cargo_subtype()])
{
  0: return ttdall_cc + 0x53; 
  1: return ttdall_cc + 0x63;
  2: return ttdall_cc + 0xB3;
  3: return ttdall_cc + 0x93;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, s_s_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_TTD_53);
  1: return string(STR_REFIT_TTD_63);
  2: return string(STR_REFIT_TTD_B3);
  3: return string(STR_REFIT_TTD_93);
     return CB_RESULT_NO_TEXT;
}

engine_steam_1_effect(s_s, -3, 11)
engine_speed_change_after(s_s, 110, 
                               115, 1926)
engine_penalise_speed0(s_s)
general_running_cost(s_s, 276)

item (FEAT_TRAINS, s_s) {
  property {
    name: string(STR_NAME_S_S);
    climates_available: get_climates_available();
    introduction_date: date(get_loc_year(1910), 1, 1);
    model_life: get_model_life(1910,1919);
    retire_early: get_retire_early(1910,1919);
    vehicle_life: 45;
    reliability_decay: 10;
    cost_factor: 12;
    sprite_id: SPRITE_ID_NEW_TRAIN;
    misc_flags: bitmask(TRAIN_FLAG_TILT, TRAIN_FLAG_MU);
    track_type: get_normal_track_type();
    ai_special_flag: AI_FLAG_PASSENGER;
    power: 1292 hpM;
    running_cost_base: RUNNING_COST_STEAM;
    weight: (76+64) ton;
    engine_class: ENGINE_CLASS_STEAM;
    tractive_effort_coefficient: get_tec(104.0, 76+64);
    length: 6;
    cargo_allow_refit: [PASS];
    default_cargo_type: PASS;
    cargo_capacity: 1;
    effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_STEAM;
  }
  graphics {
    default: s_s_sprites;
    purchase: s_s_purchase_sprites;
    articulated_part: articulated_part_tender1;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    additional_text: return string(STR_PURCHASE_HINT_ENGINE, 
                                   string(STR_PURCHASE_HINT_ENGINE_TYPE_PASSENGER_STEAM), 
                                   string(STR_PURCHASE_HINT_SECTIONS_1), 
                                   string(STR_PURCHASE_HINT_FROMTO, 1910, 1919), 
                                   string(STR_PURCHASE_HINT_LIST3, string(STR_PURCHASE_HINT_FACTORY_SORMOVO), 
                                                                   string(STR_PURCHASE_HINT_FACTORY_NEVSKY), 
                                                                   string(STR_PURCHASE_HINT_FACTORY_KHARKIV)));
    speed: s_s_speed;
    purchase_speed: s_s_purchase_speed;
    bitmask_vehicle_info: s_s_bitmask_vehicle_info;
    cargo_capacity: return 0;
    create_effect: s_s_create_effect;
    running_cost_factor: s_s_running_cost_factor;
    colour_mapping: s_s_colour_mapping;
    cargo_subtype_text: s_s_cargo_subtype_text;
  }
  livery_override(unitb) {
    length: return 4;
    colour_mapping: s_s_tender_colour_mapping;
    s_s_tender_sprites_start;
  }
}

if (enable_long_names) {
  item (FEAT_TRAINS, s_s) {
    property { name: string(STR_LONGNAME_S_S); }
  }
}

if (models_default_cargo == 1) {
  item (FEAT_TRAINS, s_s) {
    property { 
      cargo_allow_refit: [GOOD];
      default_cargo_type: GOOD;
    }
  }
}

if (models_default_cargo == 2) {
  item (FEAT_TRAINS, s_s) {
    property { 
      cargo_allow_refit: [PASS];
      default_cargo_type: PASS;
    }
  }
}

if (models_default_cargo == 3) {
  item (FEAT_TRAINS, s_s) {
    property { 
      cargo_allow_refit: [MAIL];
      default_cargo_type: MAIL;
    }
  }
}
