 // steam_su

#define IMAGEFILE  "src/steam/su.png"
purchase_sprites(steam_su_v1, 0, 0)
steam_sprites(8, steam_su_engine_b1932, 32, 40)
tender_sprites(5, steam_su_tender_b1932, 447, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/steam/su-a1932.png"
purchase_sprites(steam_su_v2, 0, 0)
steam_sprites(8, steam_su_engine_a1932, 32, 40)
tender_sprites(5, steam_su_tender_a1932, 447, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/steam/su-a1935.png"
purchase_sprites(steam_su_v3, 0, 0)
steam_sprites(8, steam_su_engine_a1935, 32, 40)
#undef IMAGEFILE
#define IMAGEFILE  "src/steam/su-a1947.png"
purchase_sprites(steam_su_v4, 0, 0)
steam_sprites(8, steam_su_engine_a1947, 32, 40)
tender_sprites(6, steam_su_tender_a1947, 447, 40)
#undef IMAGEFILE
purchase_sprites_select3(steam_su, 1932, 1935, 1947)

engine_build_year3_template(steam_su_engine, 1932, 1935, 1947, start, )
engine_build_year2_template(steam_su_tender, 1932, 1947, start, )
steamer_direction_template(steam_su, _sprites_start)
long_vehicle(steam_su)
                          
switch (FEAT_TRAINS, SELF, steam_su_running_cost_factor,
[  STORE_TEMP(177 +  4 * (build_year >= 1932)
                  +  3 * (build_year >= 1935)
                  + 13 * (build_year >= 1947), 0),  // Моторы
   STORE_TEMP(25  +  1 * (build_year >= 1935)
                  +  2 * (build_year >= 1947), 1),  // Бригада
   STORE_TEMP(62  +  2 * (build_year >= 1932)
                  +  3 * (build_year >= 1947), 2),  // Износ
   STORE_TEMP(0, 3),                                // Сопровождение
   STORE_TEMP(44  +  1 * (build_year >= 1932)
                  +  3 * (build_year >= 1947), 4),  // ТО
   STORE_TEMP(3, 5),                                // Сертификация

   STORE_TEMP(110 + 15 * (current_year >= 1926)
                  + 15 * (current_year >= 1936), 6),  // Скорость
   STORE_TEMP(148 +  9 * (build_year >= 1932)
                  -  2 * (build_year >= 1935)
                  + 14 * (build_year >= 1947), 7),    // Тара
   STORE_TEMP(LOAD_TEMP(7), 8)])                      // Максимальная масса
{ all_running_cost_factor; }                          // 311 + 5 + 4 + 24

engine_tender(steam_su)
engine_tender_length_change_build_after(steam_su, 7, 1, 4, 1,
                                            7, 1, 5, 1, 1947)
engine_steam_1_effect(steam_su_create_effect, -3, 11)
engine_speed_change_after2(steam_su, 110,
                               115, 1926,
                               130, 1936)
engine_penalise_speed0(steam_su)
engine_power_change_build_after2(steam_su, 1476,
                                     1528, 1935,
                                     1610, 1947)
engine_weight_change_build_after3(steam_su, 84+64,
                                      85+72, 1932,
                                      85+70, 1935,
                                      87+82, 1947)
engine_TE_change_build_after3(steam_su, get_tec_int(129.0, 84+64),
                                  get_tec_int(129.0, 85+72), 1932,
                                  get_tec_int(129.0, 85+70), 1935,
                                  get_tec_int(130.0, 87+82), 1947)
engine_cost_change_build_after(steam_su, 14,
                                   15, 1947)
hint_engine_5fact(steam_su,
     STR_PURCHASE_HINT_ENGINE_TYPE_PASSENGER_STEAM,
     STR_PURCHASE_HINT_SECTIONS_1,
     1925, 1951,
     string(STR_PURCHASE_HINT_FACTORY_KOLOMNA),
     string(STR_PURCHASE_HINT_FACTORY_BRYANSK),
     string(STR_PURCHASE_HINT_FACTORY_SORMOVO),
     string(STR_PURCHASE_HINT_FACTORY_NEVSKY),
     fact_kharkiv())

item (FEAT_TRAINS, steam_su, 437) {
  property {
    name: string(STR_NAME_SU);
    vehicle_dates(1925, 1951, 40, 10, 7, 14)
    vehicle_pass()
    vehicle_steam(1476, 84+64, 129.0)
  }
  graphics {
    default: steam_su_sprites;
    purchase: steam_su_purchase_sprites;
    articulated_part: steam_su_articulated_part;
    length: steam_su_length;
    can_attach_wagon: any_can_attach_wagon;
    start_stop: any_start_stop;
    speed: steam_su_speed;
    power: steam_su_power;
    weight: steam_su_weight;
    cost_factor: steam_su_cost_factor;
    tractive_effort_coefficient: steam_su_tractive_effort_coefficient;
    purchase_speed: steam_su_purchase_speed;
    bitmask_vehicle_info: steam_su_bitmask_vehicle_info;
    cargo_capacity: return 0;
    create_effect: steam_su_create_effect;
    running_cost_factor: steam_su_running_cost_factor;
    colour_mapping: steam_pass_colour_mapping;
    cargo_subtype_text: steam_pass_cargo_subtype_text;
    additional_text: steam_su_additional_text;
  }
}

long_name_template(steam_su, STR_LONGNAME_SU)
models_default_cargo_template(steam_su)
allow_steamer(steam_su)
