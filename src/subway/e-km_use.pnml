  /// E-KM is modernization of E* cars

#define PROP_subway_e_km_h_CF  11
#define PROP_subway_e_km_h_RC  103
#define PROP_subway_e_km_h_SD  90
#define PROP_subway_e_km_h_WT  30
#define PROP_subway_e_km_h_TE  0
#define PROP_subway_e_km_h_PR  0
#define PROP_subway_e_km_h_CC  recalc_capacity(311, 36, 10)

#define PROP_subway_e_km_n_CF  0
#define PROP_subway_e_km_n_RC  0
#define PROP_subway_e_km_n_SD  0
#define PROP_subway_e_km_n_WT  0
#define PROP_subway_e_km_n_TE  0
#define PROP_subway_e_km_n_PR  0
#define PROP_subway_e_km_n_CC  0

#define PROP_subway_e_km_m_CF  11
#define PROP_subway_e_km_m_RC  103
#define PROP_subway_e_km_m_SD  PROP_subway_e_km_h_SD
#define PROP_subway_e_km_m_WT  32
#define PROP_subway_e_km_m_TE  35
#define PROP_subway_e_km_m_PR  600
#define PROP_subway_e_km_m_CC  recalc_capacity(343, 40, 10)

#define PROP_subway_e_km_c_CF  PROP_subway_e_km_m_CF
#define PROP_subway_e_km_c_RC  PROP_subway_e_km_m_RC
#define PROP_subway_e_km_c_SD  PROP_subway_e_km_m_SD
#define PROP_subway_e_km_c_WT  PROP_subway_e_km_m_WT
#define PROP_subway_e_km_c_TE  PROP_subway_e_km_m_TE
#define PROP_subway_e_km_c_PR  PROP_subway_e_km_m_PR
#define PROP_subway_e_km_c_CC  PROP_subway_e_km_m_CC

/*
Вагоны Еж, Ема-502 могут быть модернизированы до Е-КМ-Гб / 81-7080 (немоторный головной)
Вагоны Е, Еж могут быть модернизированы до Е-КМ-Пм / 81-7081 и Е-КМ-Пм-01 / 81-7081-01
Единственная допускаемая составность Е-КМ-Гб + Е-КМ-Пм + Е-КМ-Пм-01 + Е-КМ-Пм + Е-КМ-Гб
0xE0 - Е-КМ-Гб
0xE1 - Е-КМ-Пм
0xE2 - Е-КМ-Пм-01
*/

// E series list

#define any_subway_e()                    \
 ((vehicle_type_id == subway_e_h) ||      \
  (vehicle_type_id == subway_em_h) ||     \
  (vehicle_type_id == subway_em_n) ||     \
  (vehicle_type_id == subway_em501_h) ||  \
  (vehicle_type_id == subway_em501_n) ||  \
  (vehicle_type_id == subway_em508_h) ||  \
  (vehicle_type_id == subway_ezh_h))      \

#define any_subway_e_not_km()             \
(((vehicle_type_id == subway_e_h) ||      \
  (vehicle_type_id == subway_em_h) ||     \
  (vehicle_type_id == subway_em_n) ||     \
  (vehicle_type_id == subway_em501_h) ||  \
  (vehicle_type_id == subway_em501_n) ||  \
  (vehicle_type_id == subway_em508_h) ||  \
  (vehicle_type_id == subway_ezh_h)) &&   \
  (cargo_subtype < 0xE0))                 \

#define no_subway_e_inR4()               \
 (!((LOAD_TEMP(4) == subway_e_h) ||      \
    (LOAD_TEMP(4) == subway_em_h) ||     \
    (LOAD_TEMP(4) == subway_em_n) ||     \
    (LOAD_TEMP(4) == subway_em501_h) ||  \
    (LOAD_TEMP(4) == subway_em501_n) ||  \
    (LOAD_TEMP(4) == subway_em508_h) ||  \
    (LOAD_TEMP(4) == subway_ezh_h)))     \

// Graphics for Kiev livery for Ema-502 was moved here because of circular depedencies

#define IMAGEFILE  "src/subway/e-km_h.png"
MU_head_middle_sprites(11, subway_e_km_h_mu, 32, 40)
#undef IMAGEFILE

MU_power_template3(subway_e_km_h, subway_ezh_h, subway_em501_h, subway_em501_n)

engine_direction_template4m2(subway_e_km_h,
                             subway_em501_h, subway_ezh_h,
                             subway_e_h, subway_ezh_h)
map_sprites(subway_e_km_h_direction_template, subway_e_km_h_sprites_start)
MU_attach_wagon_icon_template_at(subway_e_km_h_next_can_attach_wagon_template,
                                 type_car_motor_pant_add_mandatory,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big)
MU_attach_wagon_icon_template2_extracheckself(subway_e_km_h, subway_ezh_h, subway_em501_h, type_head_pant,
  (((vehicle_type_id == subway_ezh_h) || (vehicle_type_id == subway_em501_h)) && ((position_in_consist == 0) || (position_in_consist == 8))))

#define IMAGEFILE  "src/subway/em501_m-kiev.png"
MU_car_sprites(11, subway_em501_m_v3_mu, 32, 40)
#undef IMAGEFILE
MU_power_template7(subway_em501_m_v3,
                   subway_e_h, subway_em_h, subway_em_n, subway_em501_h, subway_em501_n, subway_em508_h, subway_ezh_h)

MU_power_template7_reuse(subway_e_km_m, subway_em501_m_v3,
                         subway_e_h, subway_em_h, subway_em_n, subway_em501_h, subway_em501_n, subway_em508_h, subway_ezh_h)
MU_car_dir_direction_template(subway_e_km_m)
MU_attach_wagon_icon_template_at(subway_e_km_m_next_can_attach_wagon_template,
                                 type_car_motor_pant,
                                 type_car_motor_pant_add_mandatory,
                                 dummy_sprites_big,
                                 type_head_pant_add_mandatory,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big)
MU_attach_wagon_icon_template2_extracheckself(subway_e_km_m, subway_ezh_h, subway_em501_h, type_car_motor_pant,
  (((vehicle_type_id == subway_ezh_h) || (vehicle_type_id == subway_e_h)) && ((position_in_consist == 2) || (position_in_consist == 6))))

map_sprites(subway_e_km_m2_direction_template, subway_e_km_m_direction_template)
MU_attach_wagon_icon_template_at(subway_e_km_m2_next_can_attach_wagon_template,
                                 type_car_motor_pant,
                                 dummy_sprites_big,
                                 type_car_motor_pant_add_mandatory,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big,
                                 dummy_sprites_big)
MU_attach_wagon_icon_template2_extracheckself(subway_e_km_m2, subway_ezh_h, subway_em501_h, type_car_motor_pant,
  (((vehicle_type_id == subway_ezh_h) || (vehicle_type_id == subway_e_h)) && (position_in_consist == 4)))

switch (FEAT_TRAINS, SELF, subway_e_km_sprites_start, cargo_subtype)
{ 0xE0: subway_e_km_h_sprites_start_sp;
  0xE1: subway_e_km_m_sprites_start_sp;
  0xE2: subway_e_km_m2_sprites_start_sp;
        align_11_sprites;
}

// start-stop disallowed (for the case when non e_km is a head)

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at18,
[ set_offset_to(18),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     return CB_RESULT_NO_TEXT;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at16,
[ set_offset_to(16),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at18;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at14,
[ set_offset_to(14),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at16;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at12,
[ set_offset_to(12),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at14;
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at10,
[ set_offset_to(10),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at12;
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at8,
[ set_offset_to(8),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at10;
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at6,
[ set_offset_to(6),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at8;
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed_at4,
[ set_offset_to(4),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at6;
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_disallowed,
[ set_offset_to(2),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() >= 0xE0) ])
{ 1: return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
     subway_e_km_start_stop_disallowed_at4;
}

// start-stop allowed

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_at8,
[ set_offset_to(8),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() == 0xE0) ])
{ 1: return CB_RESULT_NO_TEXT;
     return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_at6,
[ set_offset_to(6),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h)) &&
  (prev_vehicle_cargo_subtype() == 0xE1) ])
{ 1: subway_e_km_start_stop_at8;
     return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_at4,
[ set_offset_to(4),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h)) &&
  (prev_vehicle_cargo_subtype() == 0xE2) ])
{ 1: subway_e_km_start_stop_at6;
     return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_at2,
[ set_offset_to(2),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_e_h)) &&
  (prev_vehicle_cargo_subtype() == 0xE1) ])
{ 1: subway_e_km_start_stop_at4;
     return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop_at0,
[ set_offset_to(0),
  ((prev_vehicle_type_id() == subway_ezh_h) ||
   (prev_vehicle_type_id() == subway_em501_h)) &&
  (prev_vehicle_cargo_subtype() == 0xE0) ])
{ 1: subway_e_km_start_stop_at2;
     return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

switch (FEAT_TRAINS, PARENT, subway_e_km_start_stop, num_vehs_in_consist)
{ 10: subway_e_km_start_stop_at0;
      return string(STR_WRONG_STRUCTURE_OF_TRAIN_E_KM);
}

// cargo capacity

switch (FEAT_TRAINS, SELF, subway_e_km_cargo_capacity2, cargo_subtype)
{ 0xE0: return PROP_subway_e_km_h_CC;
  0xE1: return PROP_subway_e_km_m_CC;
  0xE2: return PROP_subway_e_km_m_CC;
        return 0;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_cargo_capacity,
  ((vehicle_type_id == subway_ezh_h) ||
   (vehicle_type_id == subway_em501_h)) &&
  (cargo_subtype == 0xE0))
{ 1: subway_e_km_cargo_capacity2;
     return 0;
}

// power

switch (FEAT_TRAINS, SELF, subway_e_km_power2, cargo_subtype)
{ 0xE0: return get_power_in_cb(PROP_subway_e_km_h_PR);
  0xE1: return get_power_in_cb(PROP_subway_e_km_m_PR);
  0xE2: return get_power_in_cb(PROP_subway_e_km_m_PR);
        return 0;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_power,
  ((vehicle_type_id == subway_ezh_h) ||
   (vehicle_type_id == subway_em501_h)) &&
  (cargo_subtype == 0xE0))
{ 1: subway_e_km_power2;
     return 0;
}

// running cost

switch (FEAT_TRAINS, SELF, subway_e_km_h_running_cost_factor,
[  STORE_TEMP(57, 0),  // Моторы
   STORE_TEMP(9, 1),   // Бригада
   STORE_TEMP(21, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(15, 4),  // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_subway_e_km_h_SD, 6),                                       // Скорость
   STORE_TEMP(round(PROP_subway_e_km_h_WT), 7),                                // Тара
   STORE_TEMP(round(PROP_subway_e_km_h_WT + PROP_subway_e_km_h_CC / 16), 8)])  // Максимальная масса
{ all_running_cost_factor; }                                                   // 103

switch (FEAT_TRAINS, SELF, subway_e_km_m_running_cost_factor,
[  STORE_TEMP(57, 0),  // Моторы
   STORE_TEMP(9, 1),   // Бригада
   STORE_TEMP(21, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(15, 4),  // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_subway_e_km_m_SD, 6),                                       // Скорость
   STORE_TEMP(round(PROP_subway_e_km_m_WT), 7),                                // Тара
   STORE_TEMP(round(PROP_subway_e_km_m_WT + PROP_subway_e_km_m_CC / 16), 8)])  // Максимальная масса
{ all_running_cost_factor; }                                                   // 103

switch (FEAT_TRAINS, SELF, subway_e_km_c_running_cost_factor,
[  STORE_TEMP(57, 0),  // Моторы
   STORE_TEMP(9, 1),   // Бригада
   STORE_TEMP(21, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(15, 4),  // ТО
   STORE_TEMP(1, 5),   // Сертификация

   STORE_TEMP(PROP_subway_e_km_c_SD, 6),                                       // Скорость
   STORE_TEMP(round(PROP_subway_e_km_c_WT), 7),                                // Тара
   STORE_TEMP(round(PROP_subway_e_km_c_WT + PROP_subway_e_km_c_CC / 16), 8)])  // Максимальная масса
{ all_running_cost_factor; }                                                   // 103

switch (FEAT_TRAINS, PARENT, subway_e_km_running_cost_factor_none,
[  STORE_TEMP(0, 0),
   STORE_TEMP(0, 1),
   STORE_TEMP(0, 3),
   STORE_TEMP(LOAD_TEMP(7), 8)])
{ all_running_cost_factor; }

switch (FEAT_TRAINS, SELF, subway_e_km_running_cost_factor2, cargo_subtype)
{ 0xE0: subway_e_km_h_running_cost_factor;
  0xE1: subway_e_km_m_running_cost_factor;
  0xE2: subway_e_km_c_running_cost_factor;
        subway_e_km_running_cost_factor_none;
}
switch (FEAT_TRAINS, PARENT, subway_e_km_running_cost_factor,
  ((vehicle_type_id == subway_ezh_h) ||
   (vehicle_type_id == subway_em501_h)) &&
  (cargo_subtype == 0xE0))
{ 1: subway_e_km_running_cost_factor2;
     subway_e_km_running_cost_factor_none;
}

// Refit cost

    engine_refit_cost_for_livery_change2(subway_e_km_3, 6, 100)
  engine_refit_cost_for_range_livery_change(subway_e_km_2, 0xE1, 0xE1, 6, subway_e_km_3_refit_cost)
engine_refit_cost_for_range_livery_change(subway_e_km, 0xE2, 0xE2, 6, subway_e_km_2_refit_cost)
