// flatbed_13_n453

#define PROP_flatbed_13_n453_CF  58
#define PROP_flatbed_13_n453_RC  23
#define PROP_flatbed_13_n453_SD  100
#define PROP_flatbed_13_n453_WT  22
#define PROP_flatbed_13_n453_TE  0
#define PROP_flatbed_13_n453_PR  0
#define PROP_flatbed_13_n453_CC  126
#define PROP_flatbed_13_n453_LC  63

map_sprites(flatbed_13_n453_purchase_sprites, flatbed_type1930_purchase_sprites)

switch (FEAT_TRAINS, SELF, flatbed_13_n453_sprites_start,
  getbits(extra_callback_info1, 8, 8))
{
  0: flatbed_type1930_sprites_back;
  1: cargo8flatbed_sprites;
  2: flatbed_type1930_sprites_front;
     return CB_FAILED;
}

long_vehicle(flatbed_13_n453)

switch (FEAT_TRAINS, SELF, flatbed_13_n453_random,
[  set_offset_to(1),
   prev_vehicle_randombits() & 0x0F])
{
  0: return ttdall_cc + 0x7C;
  1: return ttdall_cc + 0x4B;
  2: return ttdall_cc + 0x7B;
  3: return ttdall_cc + 0x73;
  4: return ttdall_cc + 0x74;
  5: return ttdall_cc + 0x72;
  6: return ttdall_cc + 0x53;
     return ttdall_cc + 0x59;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n453_colour_mapping,
  cargo_subtype)
{
  0: flatbed_13_n453_random;
  1: return ttdall_cc + 0x7C;
  2: return ttdall_cc + 0x4B;
  3: return ttdall_cc + 0x7B;
  4: return ttdall_cc + 0x73;
  5: return ttdall_cc + 0x74;
  6: return ttdall_cc + 0x72;
  7: return ttdall_cc + 0x53;
  8: return ttdall_cc + 0x59;
     return CB_FAILED;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n453_cargo_subtype_text,
  cargo_subtype)
{
  0: return string(STR_REFIT_FACTORY);
  1: return string(STR_REFIT_TTD_7C);
  2: return string(STR_REFIT_TTD_4B);
  3: return string(STR_REFIT_TTD_7B);
  4: return string(STR_REFIT_TTD_73);
  5: return string(STR_REFIT_TTD_74);
  6: return string(STR_REFIT_TTD_72);
  7: return string(STR_REFIT_TTD_53);
  8: return string(STR_REFIT_TTD_59);
     return CB_RESULT_NO_TEXT;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n453_cargo_capacity,
[  STORE_TEMP(PROP_flatbed_13_n453_LC, 0),  // т
   STORE_TEMP(28, 1),                       // м³
   STORE_TEMP(35, 2),                       // м²
   STORE_TEMP(0, 3),                        // палетомест
   STORE_TEMP(8, 4),                        // шаблон
   cargo_type_in_veh])
{
flatbed_capacity()
  return 0;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n453_loading_speed,
[  STORE_TEMP(0, 0),
   STORE_TEMP(0, 1),
   STORE_TEMP(0, 2),
   STORE_TEMP(0, 3)])
{
  cargo8_piece_loading_speed;
}

switch (FEAT_TRAINS, SELF, flatbed_13_n453_running_cost_factor,
[  STORE_TEMP(0, 0),   // Моторы
   STORE_TEMP(0, 1),   // Бригада
   STORE_TEMP(15, 2),  // Износ
   STORE_TEMP(0, 3),   // Сопровождение
   STORE_TEMP(8, 4),   // ТО
   STORE_TEMP(0, 5),   // Сертификация

   STORE_TEMP(PROP_flatbed_13_n453_SD, 6),                                    // Скорость
   STORE_TEMP(round(PROP_flatbed_13_n453_WT), 7),                             // Тара
   STORE_TEMP(round(PROP_flatbed_13_n453_WT + PROP_flatbed_13_n453_LC), 8)])  // Максимальная масса
{ all_running_cost_factor; }                                                  // 23

name_in_group(flatbed_13_n453, string(STR_NAME_IN_GROUP, string(STR_NAME_FLATBEDS_SERIES), string(STR_NAME_FLATBED_13_N453)),
                               string(STR_NAME_IN_GROUP, string(STR_NAME_FLATBEDS_SERIES), string(STR_LONGNAME_FLATBED_13_N453)))

hint_wagon_flat(flatbed_13_n453,
           PROP_flatbed_13_n453_LC, 36,
           string(STR_PURCHASE_HINT_LOADING_SPEED_5TIC),
           STR_PURCHASE_HINT_CAP_001_NORMAL,
           STR_PURCHASE_HINT_WAGON_TYPE_FLATBED,
           1946, 1956,
           fact_dneprodzerzhinskycw())

item (FEAT_TRAINS, flatbed_13_n453, 510) {
  property {
    name: string(STR_NAME_FLATBED_13_N453);
    vehicle_dates(1946, 1956, 32, 10, 7, PROP_flatbed_13_n453_CF)
    vehicle_wagon(PROP_flatbed_13_n453_WT, PROP_flatbed_13_n453_SD)
    vehicle_group(group_flatbeds)
    cargo_allow_refit: [cargo_all_flatbedlist()];
  }
  graphics {
    purchase_menu_nocc(PROP_flatbed_13_n453_CF, PROP_flatbed_13_n453_RC, PROP_flatbed_13_n453_SD, PROP_flatbed_13_n453_WT, PROP_flatbed_13_n453_TE, PROP_flatbed_13_n453_PR)
                   name: flatbed_13_n453_name;
        additional_text: flatbed_13_n453_additional_text;
       articulated_part: articulated_part_dummy1;
         cargo_capacity: flatbed_13_n453_cargo_capacity;
     cargo_subtype_text: flatbed_13_n453_cargo_subtype_text;
         colour_mapping: flatbed_13_n453_colour_mapping;
                default: flatbed_13_n453_sprites;
          loading_speed: flatbed_13_n453_loading_speed;
               purchase: flatbed_type1930_purchase_sprites;
             refit_cost: return 0 | CB_RESULT_AUTOREFIT;
    running_cost_factor: flatbed_13_n453_running_cost_factor;
  }
}

long_name_template(flatbed_13_n453, STR_LONGNAME_FLATBED_13_N453)
use_yeti(flatbed_13_n453, cargo_all_flatbedlist_uran())
